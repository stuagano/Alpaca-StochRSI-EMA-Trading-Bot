version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: trading_pass
      POSTGRES_DB: trading_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trading-network

  # Cache and Message Queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trading-network

  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    ports:
      - "9000:9000"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      SERVICE_POSITION_URL: http://position-management:9001
      SERVICE_TRADING_URL: http://trading-execution:9002
      SERVICE_SIGNAL_URL: http://signal-processing:9003
      SERVICE_RISK_URL: http://risk-management:9004
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Position Management Service
  position-management:
    build: ./services/position-management
    ports:
      - "9001:9001"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Trading Execution Service
  trading-execution:
    build: ./services/trading-execution
    ports:
      - "9002:9002"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      ALPACA_API_KEY: ${ALPACA_API_KEY}
      ALPACA_SECRET_KEY: ${ALPACA_SECRET_KEY}
      ALPACA_BASE_URL: ${ALPACA_BASE_URL:-https://paper-api.alpaca.markets}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Signal Processing Service
  signal-processing:
    build: ./services/signal-processing
    ports:
      - "9003:9003"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Risk Management Service
  risk-management:
    build: ./services/risk-management
    ports:
      - "9004:9004"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Market Data Service
  market-data:
    build: ./services/market-data
    ports:
      - "9005:9005"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      ALPACA_API_KEY: ${ALPACA_API_KEY}
      ALPACA_SECRET_KEY: ${ALPACA_SECRET_KEY}
      ALPACA_BASE_URL: ${ALPACA_BASE_URL:-https://paper-api.alpaca.markets}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Historical Data Service
  historical-data:
    build: ./services/historical-data
    ports:
      - "9006:9006"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      MARKET_DATA_SERVICE_URL: http://market-data:9005
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      market-data:
        condition: service_started
    networks:
      - trading-network

  # Analytics Service
  analytics:
    build: ./services/analytics
    ports:
      - "9007:9007"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      POSITION_SERVICE_URL: http://position-management:9001
      MARKET_DATA_SERVICE_URL: http://market-data:9005
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      position-management:
        condition: service_started
    networks:
      - trading-network

  # Notification Service
  notification:
    build: ./services/notification
    ports:
      - "9008:9008"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM:-trading-bot@example.com}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Configuration Service
  configuration:
    build: ./services/configuration
    ports:
      - "9009:9009"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Health Monitor Service
  health-monitor:
    build: ./services/health-monitor
    ports:
      - "9010:9010"
    environment:
      DATABASE_URL: postgresql://trading_user:trading_pass@postgres:5432/trading_db
      REDIS_URL: redis://redis:6379
      SERVICES_TO_MONITOR: api-gateway:9000,position-management:9001,trading-execution:9002,signal-processing:9003,risk-management:9004,market-data:9005,historical-data:9006,analytics:9007,notification:9008,configuration:9009,training:9011
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network

  # Training Service - Collaborative Human-AI Strategy Development
  training:
    build: ./services/training
    ports:
      - "9011:9011"
    environment:
      DATABASE_PATH: /app/data/training.db
      REDIS_URL: redis://redis:6379
      API_GATEWAY_URL: http://api-gateway:9000
      MARKET_DATA_SERVICE_URL: http://market-data:9005
      HISTORICAL_DATA_SERVICE_URL: http://historical-data:9006
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
    volumes:
      - training_data:/app/data
      - ./services/training/database:/app/database:ro
    depends_on:
      redis:
        condition: service_healthy
      market-data:
        condition: service_started
      historical-data:
        condition: service_started
    networks:
      - trading-network

  # Frontend Service
  frontend:
    build: ./services/frontend
    ports:
      - "9100:9100"
    environment:
      API_GATEWAY_URL: http://api-gateway:9000
      WEBSOCKET_URL: ws://api-gateway:9000/ws
    depends_on:
      - api-gateway
    networks:
      - trading-network

networks:
  trading-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  training_data: