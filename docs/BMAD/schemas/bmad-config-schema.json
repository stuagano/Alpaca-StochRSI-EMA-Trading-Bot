{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "BMAD Configuration Schema",
  "description": "Schema for validating BMAD methodology configuration files",
  "type": "object",
  "required": ["project", "phases"],
  "properties": {
    "project": {
      "type": "object",
      "required": ["name", "type", "version"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_-]+$",
          "description": "Project name (alphanumeric, underscore, hyphen only)"
        },
        "type": {
          "type": "string",
          "enum": ["trading", "web", "api", "ml", "general"],
          "description": "Project type"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Semantic version (e.g., 1.0.0)"
        },
        "description": {
          "type": "string",
          "maxLength": 500
        },
        "repository": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "phases": {
      "type": "object",
      "required": ["build", "measure", "analyze", "document"],
      "properties": {
        "build": {
          "$ref": "#/definitions/phase"
        },
        "measure": {
          "$ref": "#/definitions/phase"
        },
        "analyze": {
          "$ref": "#/definitions/phase"
        },
        "document": {
          "$ref": "#/definitions/phase"
        }
      }
    },
    "team": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50
        },
        "coordination": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "lock_service": {
              "type": "string"
            },
            "conflict_resolution": {
              "type": "string",
              "enum": ["queue", "abort", "merge"]
            }
          }
        },
        "notifications": {
          "type": "object",
          "properties": {
            "slack_webhook": {
              "type": "string",
              "format": "uri"
            },
            "email_notifications": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "integration": {
      "type": "object",
      "properties": {
        "ci_cd": {
          "type": "object",
          "properties": {
            "platform": {
              "type": "string",
              "enum": ["github", "gitlab", "jenkins", "azure"]
            },
            "auto_trigger": {
              "type": "boolean"
            },
            "stages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "swarm": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "topology": {
              "type": "string",
              "enum": ["mesh", "hierarchical", "ring", "star"]
            },
            "max_agents": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        },
        "gemini": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "models": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["gemini-pro", "gemini-pro-vision"]
              }
            },
            "features": {
              "type": "object",
              "properties": {
                "code_analysis": {
                  "type": "boolean"
                },
                "pattern_recognition": {
                  "type": "boolean"
                },
                "documentation_generation": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "trading": {
          "type": "object",
          "properties": {
            "api_provider": {
              "type": "string",
              "enum": ["alpaca", "interactive_brokers", "td_ameritrade"]
            },
            "environment": {
              "type": "string",
              "enum": ["paper", "live", "sandbox"]
            },
            "risk_management": {
              "type": "object",
              "properties": {
                "max_position_size": {
                  "type": "number",
                  "minimum": 0
                },
                "max_daily_loss": {
                  "type": "number",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "metrics": {
      "type": "object",
      "properties": {
        "collection": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "interval": {
              "type": "string",
              "pattern": "^\\d+[smhd]$"
            },
            "storage": {
              "type": "string",
              "enum": ["memory", "file", "database"]
            }
          }
        },
        "targets": {
          "type": "object",
          "properties": {
            "cycle_time": {
              "type": "string",
              "pattern": "^\\d+[smhd]$"
            },
            "quality_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "test_coverage": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            }
          }
        }
      }
    },
    "quality_gates": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/quality_gate"
        },
        "measure": {
          "$ref": "#/definitions/quality_gate"
        },
        "analyze": {
          "$ref": "#/definitions/quality_gate"
        },
        "document": {
          "$ref": "#/definitions/quality_gate"
        }
      }
    }
  },
  "definitions": {
    "phase": {
      "type": "object",
      "required": ["duration"],
      "properties": {
        "duration": {
          "oneOf": [
            {
              "type": "number",
              "minimum": 0.5,
              "maximum": 168,
              "description": "Duration in hours"
            },
            {
              "type": "string",
              "pattern": "^\\d+(\\.\\d+)?[smhd]$",
              "description": "Duration with units (s/m/h/d)"
            },
            {
              "type": "string",
              "pattern": "^\\d+%$",
              "description": "Percentage of total cycle time"
            }
          ]
        },
        "timeout": {
          "type": "string",
          "pattern": "^\\d+[smhd]$"
        },
        "parallel": {
          "type": "boolean",
          "default": false
        },
        "auto_proceed": {
          "type": "boolean",
          "default": false
        },
        "requirements": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tools": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "quality_gate": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "requirements": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "threshold"],
            "properties": {
              "name": {
                "type": "string"
              },
              "threshold": {
                "type": "number"
              },
              "operator": {
                "type": "string",
                "enum": ["gt", "gte", "lt", "lte", "eq", "ne"],
                "default": "gte"
              },
              "mandatory": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "actions": {
          "type": "object",
          "properties": {
            "on_success": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "on_failure": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "examples": [
    {
      "project": {
        "name": "trading-bot",
        "type": "trading",
        "version": "2.0.0",
        "description": "Alpaca StochRSI-EMA Trading Bot"
      },
      "phases": {
        "build": {
          "duration": "40%",
          "parallel": true,
          "tools": ["pytest", "pylint", "git"]
        },
        "measure": {
          "duration": "20%",
          "tools": ["coverage", "performance_profiler"]
        },
        "analyze": {
          "duration": "25%",
          "tools": ["statistical_analyzer", "ml_analyzer"]
        },
        "document": {
          "duration": "15%",
          "auto_proceed": true,
          "tools": ["sphinx", "template_engine"]
        }
      },
      "integration": {
        "swarm": {
          "enabled": true,
          "topology": "hierarchical",
          "max_agents": 8
        },
        "gemini": {
          "enabled": true,
          "models": ["gemini-pro"],
          "features": {
            "code_analysis": true,
            "pattern_recognition": true,
            "documentation_generation": true
          }
        },
        "trading": {
          "api_provider": "alpaca",
          "environment": "paper",
          "risk_management": {
            "max_position_size": 10000,
            "max_daily_loss": 500
          }
        }
      },
      "quality_gates": {
        "build": {
          "requirements": [
            {
              "name": "test_coverage",
              "threshold": 85,
              "operator": "gte"
            },
            {
              "name": "code_quality",
              "threshold": 8.0,
              "operator": "gte"
            }
          ]
        }
      }
    }
  ]
}