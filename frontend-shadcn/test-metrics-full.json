{
  "config": {
    "configFile": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/playwright.config.ts",
    "rootDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 5
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "json"
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 120000
      },
      {
        "outputDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 120000
      },
      {
        "outputDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 120000
      },
      {
        "outputDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 120000
      },
      {
        "outputDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 120000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.0",
    "workers": 5,
    "webServer": null
  },
  "suites": [
    {
      "title": "100-complete-coverage.spec.ts",
      "file": "100-complete-coverage.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "üéØ 100% Complete Functionality Coverage",
          "file": "100-complete-coverage.spec.ts",
          "line": 53,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "1Ô∏è‚É£ Service Health & Infrastructure (10 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 54,
              "column": 8,
              "specs": [
                {
                  "title": "Service positions health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 330,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.234Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-86f6a4795faec2de42f7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service trading health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 310,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.587Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8a5210fe78370f1f2ddb",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service signals health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.907Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ca13cad500033855f74c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service risk health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.241Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-63bea764bbe8c1b0dbf3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service market health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 312,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.555Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d692846e298be2e67019",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service historical health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 306,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.872Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a5c8cb60368b9dfabf06",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service analytics health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 306,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:15.183Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-098201e7e46c97d7c63f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service notifications health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 308,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:15.495Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9f12b2a9bc8d06e60503",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service config health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 306,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:15.807Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9086f714f74479eb792d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service health health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 311,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:16.117Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-099789af8b26e4ee8351",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service training health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:16.434Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-56a2c1416533eb1db715",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service crypto health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 304,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:16.748Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-95985f29329c72e4a986",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service positions health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 329,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:33.876Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e785f41f71f09a8f93c9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service trading health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.218Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2903ebd33be68d84954d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service signals health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.535Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a907cc4f279308e0e415",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service risk health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 310,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.851Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-82c238620bea0b160c5c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service market health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 316,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.167Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-eb8840d64289d2c3f054",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service historical health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 313,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.489Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1fd89849112b68ffa3e5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service analytics health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 307,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.808Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-050fd9ea367d5f44a33e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service notifications health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 315,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:36.126Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e75e8059a6acc8b126f0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service config health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 316,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:36.450Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ff6f0fb209c2f5e5b486",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service health health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 315,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:36.775Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-263714b2cdc0222f2922",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service training health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 318,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:37.104Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2ebb023e8240b86e9010",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service crypto health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:37.428Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-18bccb8e3a46f40a0e14",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service positions health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 322,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:25.802Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cf5811fcfa40650d60bf",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service trading health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 314,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:26.137Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ea4cd82d1d1fc7b47393",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service signals health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 336,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:26.464Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-76dc8f53d2f198295e03",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service risk health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 311,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:26.848Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0686c3e0d31229b5e344",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service market health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 314,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:27.166Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b980872ccb807bf79ab9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service historical health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 326,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:27.490Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2c6afe70c8f8eb856b2e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service analytics health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 319,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:27.830Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-151fab0ef8a81c170fae",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service notifications health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 327,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:28.158Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6fc29ba4a21547ab681d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service config health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 323,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:28.512Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f9752a3d1d5fdf2ba851",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service health health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 312,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:28.845Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ed3a3ee8135340da0119",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service training health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 307,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.163Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-82acf14327d6c9c9915f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service crypto health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 306,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.474Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8b3ff773d92cae1f71fe",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service positions health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 340,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:55.186Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c9d0f4413c3b0eaeb1da",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service trading health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 314,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:55.546Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-590d22a83aaa6e8ca520",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service signals health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 311,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:55.878Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ef86502b03648642bbec",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service risk health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:56.222Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-616c213789c3022ed2e4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service market health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 315,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:56.536Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-697f6254133e24b58de0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service historical health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 311,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:56.859Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c642c777a5bc5f237d57",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service analytics health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 320,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.184Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c57dd6d955f637aa7cac",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service notifications health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.522Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0783c4f2be4acab4e20d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service config health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 315,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.839Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-360edfbe052fb5670139",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service health health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 315,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:58.159Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3867457ceb982f01b053",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service training health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:58.483Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a0a61bea28814ef0a20a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service crypto health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 307,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:58.799Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f594e0c3c9554aaef2a1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service positions health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 319,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:18.384Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4289a993491f72cbed8e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service trading health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 308,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:18.715Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bde3bccbe389fa7ecd5b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service signals health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 306,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.030Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1a3fb5aa8dd9084ff580",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service risk health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 311,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.350Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0ae0ccf6d138adeafef3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service market health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 308,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.667Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ba2bf4c4ded047a2bd95",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service historical health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 304,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.980Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b3fbcda200b3e66de498",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service analytics health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 305,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.290Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-33f7100284cf53a18a74",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service notifications health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 311,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.602Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a8d125b802f007be157e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service config health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.918Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7433007672de6127557d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service health health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 313,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:21.231Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-41627ba8ae553d3bdaf7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service training health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 304,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:21.550Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c3938a81f445106dfbc1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                },
                {
                  "title": "Service crypto health check - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 310,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:21.859Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cf56f14c0b13a1f6cb13",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 56,
                  "column": 11
                }
              ]
            },
            {
              "title": "2Ô∏è‚É£ Frontend Components (15 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 77,
              "column": 8,
              "specs": [
                {
                  "title": "Main dashboard loads without fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 165,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 79
                            },
                            "snippet": "  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 79
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:17.057Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 79
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8d20c27ea247a71700d2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 78,
                  "column": 9
                },
                {
                  "title": "Trading panel functionality",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 314,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 90
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:18.283Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-dd4c38b19ecabad54961",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 89,
                  "column": 9
                },
                {
                  "title": "Portfolio view with real data only",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 17,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 209,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 69,
                              "line": 101
                            },
                            "snippet": "   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 69,
                                "line": 101
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:19.293Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 69,
                            "line": 101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8fd02487bbcb744fbc8d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 100,
                  "column": 9
                },
                {
                  "title": "Chart component with real market data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 22,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 176,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 108
                            },
                            "snippet": "  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 108
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:20.205Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 108
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1df0da3c24fb877edd47",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 107,
                  "column": 9
                },
                {
                  "title": "Order form validation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 26,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 181,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 119
                            },
                            "snippet": "  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 119
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.072Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 119
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-acfbbef6da2d34f73c0e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 118,
                  "column": 9
                },
                {
                  "title": "Real-time price updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 29,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 217,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 129
                            },
                            "snippet": "  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 129
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.994Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 129
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-32f2d401d341e8b22e63",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 128,
                  "column": 9
                },
                {
                  "title": "Position list display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 32,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 284,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 140
                            },
                            "snippet": "  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 140
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:22.926Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 140
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b11a2a5ec2bd4521de9e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 139,
                  "column": 9
                },
                {
                  "title": "Account balance display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 35,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 217,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 150
                            },
                            "snippet": "  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 150
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:24.184Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 150
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4c26d7d3b84127cce303",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 149,
                  "column": 9
                },
                {
                  "title": "Strategy selector",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 213,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 160
                            },
                            "snippet": "  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 160
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.094Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 160
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2b71bc7fcc7ab82cca6b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 159,
                  "column": 9
                },
                {
                  "title": "Risk management controls",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 45,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 213,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 170
                            },
                            "snippet": "  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 170
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:26.032Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 170
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b160f140fb770fb70cda",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 169,
                  "column": 9
                },
                {
                  "title": "Alert notifications",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 50,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 180,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 180
                            },
                            "snippet": "  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 180
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:26.991Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 180
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-525b355ad80dfb0863c5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 179,
                  "column": 9
                },
                {
                  "title": "Market screener",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 1,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 426,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 190
                            },
                            "snippet": "  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 190
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.233Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 190
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bd4f10d43ff014187cf8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 189,
                  "column": 9
                },
                {
                  "title": "Performance metrics",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 6,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 205,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.535Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f579e0a8ace013c9dbb8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 199,
                  "column": 9
                },
                {
                  "title": "Trade history",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 10,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 189,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 210
                            },
                            "snippet": "  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 210
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:16.253Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 210
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4ac82f1ebe5cde667ce9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "Settings panel",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 313,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 220
                            },
                            "snippet": "  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 220
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:18.240Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 220
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-19635bf3fa9163e78940",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "Main dashboard loads without fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 87,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1337,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 79
                            },
                            "snippet": "  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 79
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:37.743Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 79
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5facd8230e0662a2c59a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 78,
                  "column": 9
                },
                {
                  "title": "Trading panel functionality",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 99,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1330,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 90
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:41.691Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-620d85b6596a2a22398d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 89,
                  "column": 9
                },
                {
                  "title": "Portfolio view with real data only",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 103,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1076,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 69,
                              "line": 101
                            },
                            "snippet": "   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 69,
                                "line": 101
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:44.638Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 69,
                            "line": 101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7ccfa67ca3c0b826fdc2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 100,
                  "column": 9
                },
                {
                  "title": "Chart component with real market data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 108,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1165,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 108
                            },
                            "snippet": "  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 108
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:47.426Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 108
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ee99b3c16528ac6772b9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 107,
                  "column": 9
                },
                {
                  "title": "Order form validation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 112,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1507,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 119
                            },
                            "snippet": "  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 119
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:50.218Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 119
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d71e154cd4d4064fc054",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 118,
                  "column": 9
                },
                {
                  "title": "Real-time price updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 117,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1442,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 129
                            },
                            "snippet": "  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 129
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:53.664Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 129
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e32ff55eee5a331347cc",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 128,
                  "column": 9
                },
                {
                  "title": "Position list display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 122,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 2444,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 140
                            },
                            "snippet": "  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 140
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:57.370Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 140
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-64b277c5060d16a78317",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 139,
                  "column": 9
                },
                {
                  "title": "Account balance display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 127,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1652,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 150
                            },
                            "snippet": "  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 150
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:02.172Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 150
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fdd57ed56e20e0994e95",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 149,
                  "column": 9
                },
                {
                  "title": "Strategy selector",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 132,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1360,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 160
                            },
                            "snippet": "  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 160
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:06.473Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 160
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c6ba4818736c5f06d50b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 159,
                  "column": 9
                },
                {
                  "title": "Risk management controls",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 139,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1680,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 170
                            },
                            "snippet": "  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 170
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:09.769Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 170
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c8943a4f28189c493543",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 169,
                  "column": 9
                },
                {
                  "title": "Alert notifications",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 148,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 1233,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 180
                            },
                            "snippet": "  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 180
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:13.838Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 180
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6aae02d7f141bfb6aa99",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 179,
                  "column": 9
                },
                {
                  "title": "Market screener",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 88,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 1496,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 190
                            },
                            "snippet": "  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 190
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.288Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 190
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6759f5e73a1f3ab0a782",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 189,
                  "column": 9
                },
                {
                  "title": "Performance metrics",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 93,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 1108,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:37.689Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b48e85fa09aa77343b00",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 199,
                  "column": 9
                },
                {
                  "title": "Trade history",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 97,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 1106,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 210
                            },
                            "snippet": "  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 210
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:40.711Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 210
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3907b138c0154aaf1241",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "Settings panel",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 101,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 1093,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 220
                            },
                            "snippet": "  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 220
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:43.634Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 220
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-df7b7aa7d500550e3269",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "Main dashboard loads without fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 173,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 529,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 79
                            },
                            "snippet": "  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 79
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.785Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 79
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-106dbe9c610f870e7f53",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 78,
                  "column": 9
                },
                {
                  "title": "Trading panel functionality",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 186,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 627,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 90
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:31.352Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-44b8ae9a82abc511e34a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 89,
                  "column": 9
                },
                {
                  "title": "Portfolio view with real data only",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 191,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 442,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 69,
                              "line": 101
                            },
                            "snippet": "   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 69,
                                "line": 101
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:33.209Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 69,
                            "line": 101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f99539056165887140fe",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 100,
                  "column": 9
                },
                {
                  "title": "Chart component with real market data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 196,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 409,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 108
                            },
                            "snippet": "  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 108
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:34.666Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 108
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-17a17a80886f4fe050d3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 107,
                  "column": 9
                },
                {
                  "title": "Order form validation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 199,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 468,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 119
                            },
                            "snippet": "  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 119
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:36.008Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 119
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cbf9581d7f0987ae1cca",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 118,
                  "column": 9
                },
                {
                  "title": "Real-time price updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 202,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 542,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 129
                            },
                            "snippet": "  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 129
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:37.412Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 129
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5e5a53a20dbdc8769d3d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 128,
                  "column": 9
                },
                {
                  "title": "Position list display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 205,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 744,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 140
                            },
                            "snippet": "  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 140
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:38.947Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 140
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b874e06a7a1d824d093c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 139,
                  "column": 9
                },
                {
                  "title": "Account balance display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 210,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 599,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 150
                            },
                            "snippet": "  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 150
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:40.700Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 150
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6791a9a12aff1c2654c9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 149,
                  "column": 9
                },
                {
                  "title": "Strategy selector",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 214,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 597,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 160
                            },
                            "snippet": "  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 160
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:42.369Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 160
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c298769093347c73f6b3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 159,
                  "column": 9
                },
                {
                  "title": "Risk management controls",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 219,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 559,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 170
                            },
                            "snippet": "  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 170
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:44.042Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 170
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-115e4ddb7de164a92921",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 169,
                  "column": 9
                },
                {
                  "title": "Alert notifications",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 225,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 459,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 180
                            },
                            "snippet": "  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 180
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:45.591Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 180
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d8b660361826c92756a0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 179,
                  "column": 9
                },
                {
                  "title": "Market screener",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 174,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 884,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 190
                            },
                            "snippet": "  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 190
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:26.026Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 190
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9468e1341fa7c80368e0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 189,
                  "column": 9
                },
                {
                  "title": "Performance metrics",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 177,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 483,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:28.228Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bd2e818c6bfb39fd2dfe",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 199,
                  "column": 9
                },
                {
                  "title": "Trade history",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 181,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 526,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 210
                            },
                            "snippet": "  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 210
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.674Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 210
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-490784c388f6ba1b7df1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "Settings panel",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 184,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 616,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 220
                            },
                            "snippet": "  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 220
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:31.239Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 220
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0c3d6e91642afc87d702",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "Main dashboard loads without fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 261,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 303,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 79
                            },
                            "snippet": "  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 79
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:59.113Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 79
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-02c458f28f6a1a9f128e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 78,
                  "column": 9
                },
                {
                  "title": "Trading panel functionality",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 279,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 228,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 90
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:00.595Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-80c92f06ba29c3b9f5b4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 89,
                  "column": 9
                },
                {
                  "title": "Portfolio view with real data only",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 283,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 279,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 69,
                              "line": 101
                            },
                            "snippet": "   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 69,
                                "line": 101
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:01.530Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 69,
                            "line": 101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-19133cfb6d9ba43ecf09",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 100,
                  "column": 9
                },
                {
                  "title": "Chart component with real market data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 286,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 288,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 108
                            },
                            "snippet": "  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 108
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.492Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 108
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-56a239c00400ad190f91",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 107,
                  "column": 9
                },
                {
                  "title": "Order form validation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 290,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 223,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 119
                            },
                            "snippet": "  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 119
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:03.477Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 119
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8891521f81367c09ce24",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 118,
                  "column": 9
                },
                {
                  "title": "Real-time price updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 293,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 216,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 129
                            },
                            "snippet": "  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 129
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:04.357Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 129
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b4961573b5b4f36786a0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 128,
                  "column": 9
                },
                {
                  "title": "Position list display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 296,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 288,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 140
                            },
                            "snippet": "  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 140
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:05.620Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 140
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4e17f1e7f880001f71af",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 139,
                  "column": 9
                },
                {
                  "title": "Account balance display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 299,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 260,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 150
                            },
                            "snippet": "  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 150
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:06.934Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 150
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-900f9ecb1763af92ba19",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 149,
                  "column": 9
                },
                {
                  "title": "Strategy selector",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 303,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 310,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 160
                            },
                            "snippet": "  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 160
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:08.214Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 160
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8f62197bedc6099b4d24",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 159,
                  "column": 9
                },
                {
                  "title": "Risk management controls",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 308,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 248,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 170
                            },
                            "snippet": "  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 170
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:09.598Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 170
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-02047e4caae56893f248",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 169,
                  "column": 9
                },
                {
                  "title": "Alert notifications",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 314,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 210,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 180
                            },
                            "snippet": "  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 180
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:10.773Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 180
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-01e9179bc61067a00a9b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 179,
                  "column": 9
                },
                {
                  "title": "Market screener",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 262,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 398,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 190
                            },
                            "snippet": "  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 190
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:55.522Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 190
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-09a5637afa8ab2a4e1ad",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 189,
                  "column": 9
                },
                {
                  "title": "Performance metrics",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 266,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 303,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.136Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-27e5bb5145e34f4dd2c7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 199,
                  "column": 9
                },
                {
                  "title": "Trade history",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 271,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 272,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 210
                            },
                            "snippet": "  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 210
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:58.312Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 210
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-01d557b6e4324788d979",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "Settings panel",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 273,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 257,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 220
                            },
                            "snippet": "  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 220
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:59.402Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-Mobile-Chrome/test-failed-1.png"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 220
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a6e39181e68bbc0035c8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 219,
                  "column": 9
                },
                {
                  "title": "Main dashboard loads without fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 349,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 593,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 79
                            },
                            "snippet": "  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 79
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |   test.describe('2Ô∏è‚É£ Frontend Components (15 tests)', () => {\n  78 |     test('Main dashboard loads without fake data', async ({ page }) => {\n> 79 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  80 |       await page.waitForLoadState('networkidle')\n  81 |       \n  82 |       const content = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:79:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:22.176Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-26615-ard-loads-without-fake-data-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 79
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b756be2e0e52846ea5d6",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 78,
                  "column": 9
                },
                {
                  "title": "Trading panel functionality",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 363,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 610,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 90
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  88 |\n  89 |     test('Trading panel functionality', async ({ page }) => {\n> 90 |       await page.goto(FRONTEND_URL)\n     |                  ^\n  91 |       \n  92 |       // Check trading panel exists\n  93 |       const tradingPanel = page.locator('[data-testid=\"trading-panel\"], .trading-panel, #trading')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:90:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:23.823Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-58304-Trading-panel-functionality-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-73b555cbb2d4bfd6ec26",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 89,
                  "column": 9
                },
                {
                  "title": "Portfolio view with real data only",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 368,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 659,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 69,
                              "line": 101
                            },
                            "snippet": "   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 69,
                                "line": 101
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   99 |\n  100 |     test('Portfolio view with real data only', async ({ page }) => {\n> 101 |       await page.goto(`${FRONTEND_URL}/portfolio`).catch(() => page.goto(FRONTEND_URL))\n      |                                                                     ^\n  102 |       \n  103 |       const portfolioContent = await page.locator('body').textContent()\n  104 |       validateNoFakeData(portfolioContent)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:69\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:101:7"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:25.507Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b8077-io-view-with-real-data-only-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 69,
                            "line": 101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-de497ff3c4fd3abf15c4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 100,
                  "column": 9
                },
                {
                  "title": "Chart component with real market data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 373,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 711,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 108
                            },
                            "snippet": "  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 108
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  106 |\n  107 |     test('Chart component with real market data', async ({ page }) => {\n> 108 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  109 |       \n  110 |       const chartElement = page.locator('canvas, [class*=\"chart\"], [id*=\"chart\"]').first()\n  111 |       if (await chartElement.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:108:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.173Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-3b3d2-onent-with-real-market-data-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 108
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1645edc3d39d6d2af916",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 107,
                  "column": 9
                },
                {
                  "title": "Order form validation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 376,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 696,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 119
                            },
                            "snippet": "  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 119
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  117 |\n  118 |     test('Order form validation', async ({ page }) => {\n> 119 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  120 |       \n  121 |       const orderForm = page.locator('form[class*=\"order\"], [data-testid=\"order-form\"]').first()\n  122 |       if (await orderForm.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:119:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:28.935Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-6c11a-tests-Order-form-validation-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 119
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e04e5baf5a443b0f8d81",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 118,
                  "column": 9
                },
                {
                  "title": "Real-time price updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 380,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 753,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 129
                            },
                            "snippet": "  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 129
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  127 |\n  128 |     test('Real-time price updates', async ({ page }) => {\n> 129 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  130 |       \n  131 |       // Look for price elements\n  132 |       const priceElements = page.locator('[class*=\"price\"], [data-testid*=\"price\"]')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:129:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:30.754Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c5ea5-sts-Real-time-price-updates-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 129
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-638406893820a6cfafa6",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 128,
                  "column": 9
                },
                {
                  "title": "Position list display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 383,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 652,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 140
                            },
                            "snippet": "  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 140
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  138 |\n  139 |     test('Position list display', async ({ page }) => {\n> 140 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  141 |       \n  142 |       const positionList = page.locator('[class*=\"position\"], [data-testid*=\"position\"]')\n  143 |       if (await positionList.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:140:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:32.623Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-f7740-tests-Position-list-display-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 140
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e72dd776a3e5a44fd410",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 139,
                  "column": 9
                },
                {
                  "title": "Account balance display",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 388,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 625,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 150
                            },
                            "snippet": "  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 150
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  148 |\n  149 |     test('Account balance display', async ({ page }) => {\n> 150 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  151 |       \n  152 |       const balanceElements = page.locator('[class*=\"balance\"], [data-testid*=\"balance\"]')\n  153 |       if (await balanceElements.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:150:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:34.350Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-80cf6-sts-Account-balance-display-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 150
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-41cea144ac19494cb1c4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 149,
                  "column": 9
                },
                {
                  "title": "Strategy selector",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 394,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 673,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 160
                            },
                            "snippet": "  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 160
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  158 |\n  159 |     test('Strategy selector', async ({ page }) => {\n> 160 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  161 |       \n  162 |       const strategySelector = page.locator('select[class*=\"strategy\"], [data-testid*=\"strategy\"]')\n  163 |       if (await strategySelector.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:160:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:36.049Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-49ff4--15-tests-Strategy-selector-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 160
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f8a57b4537065c6ec680",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 159,
                  "column": 9
                },
                {
                  "title": "Risk management controls",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 398,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 487,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 170
                            },
                            "snippet": "  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 170
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  168 |\n  169 |     test('Risk management controls', async ({ page }) => {\n> 170 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  171 |       \n  172 |       const riskControls = page.locator('[class*=\"risk\"], [data-testid*=\"risk\"]')\n  173 |       if (await riskControls.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:170:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.805Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-62fe2-ts-Risk-management-controls-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 170
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8914ade25b4a7b5c24b3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 169,
                  "column": 9
                },
                {
                  "title": "Alert notifications",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 405,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 455,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 180
                            },
                            "snippet": "  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 180
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  178 |\n  179 |     test('Alert notifications', async ({ page }) => {\n> 180 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  181 |       \n  182 |       const alerts = page.locator('[role=\"alert\"], [class*=\"alert\"], [class*=\"notification\"]')\n  183 |       if (await alerts.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:180:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:39.293Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8c418-5-tests-Alert-notifications-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 180
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-adf7b98ca1f0c623614a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 179,
                  "column": 9
                },
                {
                  "title": "Market screener",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 350,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 979,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 190
                            },
                            "snippet": "  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 190
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  188 |\n  189 |     test('Market screener', async ({ page }) => {\n> 190 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  191 |       \n  192 |       const screener = page.locator('[class*=\"screener\"], [data-testid*=\"screener\"]')\n  193 |       if (await screener.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:190:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:18.420Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-89465-ts-15-tests-Market-screener-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 190
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2c141ac34c38721ace6f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 189,
                  "column": 9
                },
                {
                  "title": "Performance metrics",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 354,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 602,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  198 |\n  199 |     test('Performance metrics', async ({ page }) => {\n> 200 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  201 |       \n  202 |       const metrics = page.locator('[class*=\"metric\"], [data-testid*=\"metric\"]')\n  203 |       if (await metrics.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:200:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.404Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d768f-5-tests-Performance-metrics-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ade9132a65336eee1c6e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 199,
                  "column": 9
                },
                {
                  "title": "Trade history",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 358,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 686,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 210
                            },
                            "snippet": "  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 210
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  208 |\n  209 |     test('Trade history', async ({ page }) => {\n> 210 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  211 |       \n  212 |       const history = page.locator('[class*=\"history\"], [data-testid*=\"history\"]')\n  213 |       if (await history.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:210:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:21.955Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-fae38-ents-15-tests-Trade-history-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 210
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6c6d1b9bbc1a90a9e6e6",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 209,
                  "column": 9
                },
                {
                  "title": "Settings panel",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 362,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 658,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 220
                            },
                            "snippet": "  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 220
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  218 |\n  219 |     test('Settings panel', async ({ page }) => {\n> 220 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  221 |       \n  222 |       const settings = page.locator('[class*=\"settings\"], [data-testid*=\"settings\"]')\n  223 |       if (await settings.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:220:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:23.569Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e3863-nts-15-tests-Settings-panel-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 220
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ca5aaae417763ef78ce4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 219,
                  "column": 9
                }
              ]
            },
            {
              "title": "3Ô∏è‚É£ API Endpoints - Real Data Only (20 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 230,
              "column": 8,
              "specs": [
                {
                  "title": "API /api/positions - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 18,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 347,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0031450496917851\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.22\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"72005.22\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"225.75\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0031450496917851\\\", \\\"unrealized_pl\\\": \\\"3579.02\\\", \\\"unrealized_plpc\\\": \\\"0.0523048189143924\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043181397643866\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.4299\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20985.887\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-91.013\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043181397643866\\\", \\\"unrealized_pl\\\": \\\"-2392.65234\\\", \\\"unrealized_plpc\\\": \\\"-0.1023439619217887\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.722142579\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.027453\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.343172\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0071453299844987\\\", \\\"unrealized_pl\\\": \\\"0.343172\\\", \\\"unrealized_plpc\\\": \\\"0.0071453299844987\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.0056990204808549\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.23\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10164.6\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"57.6\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0056990204808549\\\", \\\"unrealized_pl\\\": \\\"94.8\\\", \\\"unrealized_plpc\\\": \\\"0.0094142882678901\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0039749150158246\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.2982\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.946\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"20.346\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0039749150158246\\\", \\\"unrealized_pl\\\": \\\"-275.434\\\", \\\"unrealized_plpc\\\": \\\"-0.0508708291623418\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0089166433653338\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.48\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11041.16\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.58\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0089166433653338\\\", \\\"unrealized_pl\\\": \\\"75.81\\\", \\\"unrealized_plpc\\\": \\\"0.0069135960092473\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0031450496917851\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.22\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"72005.22\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"225.75\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0031450496917851\\\", \\\"unrealized_pl\\\": \\\"3579.02\\\", \\\"unrealized_plpc\\\": \\\"0.0523048189143924\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043181397643866\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.4299\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20985.887\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-91.013\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043181397643866\\\", \\\"unrealized_pl\\\": \\\"-2392.65234\\\", \\\"unrealized_plpc\\\": \\\"-0.1023439619217887\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.722142579\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.027453\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.343172\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0071453299844987\\\", \\\"unrealized_pl\\\": \\\"0.343172\\\", \\\"unrealized_plpc\\\": \\\"0.0071453299844987\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.0056990204808549\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.23\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10164.6\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"57.6\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0056990204808549\\\", \\\"unrealized_pl\\\": \\\"94.8\\\", \\\"unrealized_plpc\\\": \\\"0.0094142882678901\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0039749150158246\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.2982\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.946\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"20.346\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0039749150158246\\\", \\\"unrealized_pl\\\": \\\"-275.434\\\", \\\"unrealized_plpc\\\": \\\"-0.0508708291623418\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0089166433653338\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.48\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11041.16\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.58\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0089166433653338\\\", \\\"unrealized_pl\\\": \\\"75.81\\\", \\\"unrealized_plpc\\\": \\\"0.0069135960092473\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0031450496917851\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.22\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"72005.22\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"225.75\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0031450496917851\\\", \\\"unrealized_pl\\\": \\\"3579.02\\\", \\\"unrealized_plpc\\\": \\\"0.0523048189143924\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043181397643866\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.4299\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20985.887\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-91.013\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043181397643866\\\", \\\"unrealized_pl\\\": \\\"-2392.65234\\\", \\\"unrealized_plpc\\\": \\\"-0.1023439619217887\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.722142579\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.027453\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.343172\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0071453299844987\\\", \\\"unrealized_pl\\\": \\\"0.343172\\\", \\\"unrealized_plpc\\\": \\\"0.0071453299844987\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.0056990204808549\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.23\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10164.6\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"57.6\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0056990204808549\\\", \\\"unrealized_pl\\\": \\\"94.8\\\", \\\"unrealized_plpc\\\": \\\"0.0094142882678901\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0039749150158246\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.2982\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.946\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"20.346\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0039749150158246\\\", \\\"unrealized_pl\\\": \\\"-275.434\\\", \\\"unrealized_plpc\\\": \\\"-0.0508708291623418\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0089166433653338\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.48\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11041.16\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.58\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0089166433653338\\\", \\\"unrealized_pl\\\": \\\"75.81\\\", \\\"unrealized_plpc\\\": \\\"0.0069135960092473\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:19.337Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4f1415972f65de8c21af",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/orders - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 21,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 336,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:20.083Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4be091f3f9f2e099356a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 330,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:20.937Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-83ae977d3c247c3e5f35",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/signals - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 11,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.279Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8ab32617e7baf7d07d5d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/bars/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 11,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.297Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1bff223cf32e359246df",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/quote/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.317Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e17b22e310ac5581f051",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/portfolio - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.332Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e05438ff5714ab01ad15",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/performance - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.350Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3443472072181b933560",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/risk/metrics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 14,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.363Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8a8c715f846397e19a60",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/config - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 13,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.382Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b6634234e4c057166290",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/positions - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 11,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.400Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3fa92549aa773b91464a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/orders - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.416Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-85193ad0921aabf9116a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.426Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-aa4afb5a86d08f7585b0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/bars/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.440Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bd2e2f850aef6fd86cba",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/quote/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 22,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.450Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ef4711696ebcb0c83323",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/strategies - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.478Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-986897ab7434a5259f4f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/alerts - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.495Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-93b7505afaf7fb1fd181",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/history - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.513Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3730b32d030e209d444f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/analytics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.524Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-40bcef8f6d4156b1c169",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/market/screener - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 2,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 449,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.237Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-323dbba52535ab37c8a9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/positions - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 105,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 353,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0031450496917851\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.22\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"72005.22\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"225.75\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0031450496917851\\\", \\\"unrealized_pl\\\": \\\"3579.02\\\", \\\"unrealized_plpc\\\": \\\"0.0523048189143924\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043175229753901\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.43\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20985.9\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-91\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043175229753901\\\", \\\"unrealized_pl\\\": \\\"-2392.63934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023434058562531\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4298.82007129\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.017377\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.353248\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0073566700655057\\\", \\\"unrealized_pl\\\": \\\"0.353248\\\", \\\"unrealized_plpc\\\": \\\"0.0073566700655057\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.0056990204808549\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.23\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10164.6\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"57.6\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0056990204808549\\\", \\\"unrealized_pl\\\": \\\"94.8\\\", \\\"unrealized_plpc\\\": \\\"0.0094142882678901\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038682452233032\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.28\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.4\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038682452233032\\\", \\\"unrealized_pl\\\": \\\"-275.98\\\", \\\"unrealized_plpc\\\": \\\"-0.050971671733421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0088700406996614\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.45\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.65\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.07\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0088700406996614\\\", \\\"unrealized_pl\\\": \\\"75.3\\\", \\\"unrealized_plpc\\\": \\\"0.0068670858659322\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0031450496917851\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.22\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"72005.22\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"225.75\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0031450496917851\\\", \\\"unrealized_pl\\\": \\\"3579.02\\\", \\\"unrealized_plpc\\\": \\\"0.0523048189143924\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043175229753901\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.43\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20985.9\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-91\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043175229753901\\\", \\\"unrealized_pl\\\": \\\"-2392.63934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023434058562531\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4298.82007129\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.017377\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.353248\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0073566700655057\\\", \\\"unrealized_pl\\\": \\\"0.353248\\\", \\\"unrealized_plpc\\\": \\\"0.0073566700655057\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.0056990204808549\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.23\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10164.6\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"57.6\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0056990204808549\\\", \\\"unrealized_pl\\\": \\\"94.8\\\", \\\"unrealized_plpc\\\": \\\"0.0094142882678901\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038682452233032\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.28\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.4\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038682452233032\\\", \\\"unrealized_pl\\\": \\\"-275.98\\\", \\\"unrealized_plpc\\\": \\\"-0.050971671733421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0088700406996614\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.45\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.65\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.07\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0088700406996614\\\", \\\"unrealized_pl\\\": \\\"75.3\\\", \\\"unrealized_plpc\\\": \\\"0.0068670858659322\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0031450496917851\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.22\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"72005.22\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"225.75\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0031450496917851\\\", \\\"unrealized_pl\\\": \\\"3579.02\\\", \\\"unrealized_plpc\\\": \\\"0.0523048189143924\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043175229753901\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.43\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20985.9\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-91\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043175229753901\\\", \\\"unrealized_pl\\\": \\\"-2392.63934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023434058562531\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4298.82007129\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.017377\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.353248\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0073566700655057\\\", \\\"unrealized_pl\\\": \\\"0.353248\\\", \\\"unrealized_plpc\\\": \\\"0.0073566700655057\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.0056990204808549\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.23\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10164.6\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"57.6\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0056990204808549\\\", \\\"unrealized_pl\\\": \\\"94.8\\\", \\\"unrealized_plpc\\\": \\\"0.0094142882678901\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038682452233032\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.28\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.4\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038682452233032\\\", \\\"unrealized_pl\\\": \\\"-275.98\\\", \\\"unrealized_plpc\\\": \\\"-0.050971671733421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0088700406996614\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.45\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.65\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.07\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0088700406996614\\\", \\\"unrealized_pl\\\": \\\"75.3\\\", \\\"unrealized_plpc\\\": \\\"0.0068670858659322\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:46.389Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-710cc9432cd520380e94",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/orders - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 107,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 332,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:47.199Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9ee82c8136cc64fbe93c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 344,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:47.975Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8ecc407c4eca22d2d554",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/signals - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 15,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.336Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-022abea40f1d8ef15aa1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/bars/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.359Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4f67c038cef71a002d5e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/quote/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.381Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0569adffab3933fc7e6d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/portfolio - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 18,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.399Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cce5022816f9d8e5e2e8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/performance - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 22,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.436Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3ded85aefa4dffbd4eec",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/risk/metrics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 15,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.472Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0fc73ba58306bea1dee2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/config - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.495Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-36151a33ec3bead05505",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/positions - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.510Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8e2c1bba62332964c0c8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/orders - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.525Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8a585e32721f7ca1838a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.538Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-796b477f6f95c3536447",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/bars/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.553Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7c69b00ca63cdf221a2a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/quote/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.571Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-efe8ef77165ccd0f6423",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/strategies - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.584Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-32cbb8c6696fb2989c33",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/alerts - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.597Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4f84a30bdd45486ca05f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/history - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.610Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5e0cbb4edcdeac23893c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/analytics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:48.621Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6c521fc95a7cd4500a95",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/market/screener - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 89,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 330,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.312Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7bccc201af2bcd734baa",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/positions - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 190,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 359,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030611817000042\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.2\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.2\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.73\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030611817000042\\\", \\\"unrealized_pl\\\": \\\"3573\\\", \\\"unrealized_plpc\\\": \\\"0.0522168409176602\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4298.160035645\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.010005\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.36062\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0075113510194386\\\", \\\"unrealized_pl\\\": \\\"0.36062\\\", \\\"unrealized_plpc\\\": \\\"0.0075113510194386\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.00545898881963\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.1087\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10162.174\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"55.174\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.00545898881963\\\", \\\"unrealized_pl\\\": \\\"92.374\\\", \\\"unrealized_plpc\\\": \\\"0.0091733698782498\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038102215449537\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.2701\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.103\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.503\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038102215449537\\\", \\\"unrealized_pl\\\": \\\"-276.277\\\", \\\"unrealized_plpc\\\": \\\"-0.0510265256594476\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.008901109143443\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.47\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.99\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.41\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.008901109143443\\\", \\\"unrealized_pl\\\": \\\"75.64\\\", \\\"unrealized_plpc\\\": \\\"0.0068980926281423\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030611817000042\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.2\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.2\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.73\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030611817000042\\\", \\\"unrealized_pl\\\": \\\"3573\\\", \\\"unrealized_plpc\\\": \\\"0.0522168409176602\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4298.160035645\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.010005\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.36062\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0075113510194386\\\", \\\"unrealized_pl\\\": \\\"0.36062\\\", \\\"unrealized_plpc\\\": \\\"0.0075113510194386\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.00545898881963\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.1087\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10162.174\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"55.174\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.00545898881963\\\", \\\"unrealized_pl\\\": \\\"92.374\\\", \\\"unrealized_plpc\\\": \\\"0.0091733698782498\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038102215449537\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.2701\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.103\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.503\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038102215449537\\\", \\\"unrealized_pl\\\": \\\"-276.277\\\", \\\"unrealized_plpc\\\": \\\"-0.0510265256594476\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.008901109143443\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.47\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.99\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.41\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.008901109143443\\\", \\\"unrealized_pl\\\": \\\"75.64\\\", \\\"unrealized_plpc\\\": \\\"0.0068980926281423\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030611817000042\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.2\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.2\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.73\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030611817000042\\\", \\\"unrealized_pl\\\": \\\"3573\\\", \\\"unrealized_plpc\\\": \\\"0.0522168409176602\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4298.160035645\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.010005\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.36062\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0075113510194386\\\", \\\"unrealized_pl\\\": \\\"0.36062\\\", \\\"unrealized_plpc\\\": \\\"0.0075113510194386\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.00545898881963\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.1087\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10162.174\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"55.174\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.00545898881963\\\", \\\"unrealized_pl\\\": \\\"92.374\\\", \\\"unrealized_plpc\\\": \\\"0.0091733698782498\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038102215449537\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.2701\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.103\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.503\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038102215449537\\\", \\\"unrealized_pl\\\": \\\"-276.277\\\", \\\"unrealized_plpc\\\": \\\"-0.0510265256594476\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.008901109143443\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.47\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.99\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.41\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.008901109143443\\\", \\\"unrealized_pl\\\": \\\"75.64\\\", \\\"unrealized_plpc\\\": \\\"0.0068980926281423\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:32.960Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c51e3d58a3761d0f081d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/orders - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 192,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 330,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:33.843Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3e143e7fa1d8dfa480e5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 360,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:34.611Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fa02c993bfb4eb9f600e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/signals - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 21,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.007Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a2ec77386e72957a2524",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/bars/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 15,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.044Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-62629e74a097e70096f9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/quote/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.075Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d1c1012c5b1f8eeb0210",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/portfolio - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 11,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.097Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e0e579d179ca095a1be5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/performance - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.120Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-463e01e8f59ec263a36c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/risk/metrics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.131Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-24e607b4c636ef975db7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/config - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.141Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fa4ac5c8456c68320b00",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/positions - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.153Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f34734b3725030e52a09",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/orders - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.169Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-720fe1695194989971de",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 16,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.183Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-18d06408aa9736bede5c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/bars/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.205Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c3e1608257ab5db1cebd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/quote/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.216Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a05df40f85a03f181238",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/strategies - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.227Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-38f3f3c7aab8f52c329b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/alerts - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.238Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c489eae8dad6d19d42d7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/history - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.248Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4bd0739c57c32ace290a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/analytics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 195,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.258Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7e82db0c86448b38e3b7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/market/screener - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 175,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 372,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:26.154Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a5fe3b4b6b710de7793c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/positions - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 277,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 346,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030607623600453\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.1999\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.1699\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.6999\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030607623600453\\\", \\\"unrealized_pl\\\": \\\"3572.9699\\\", \\\"unrealized_plpc\\\": \\\"0.0522164010276765\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.245017823\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.022124\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.348501\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.007257092585076\\\", \\\"unrealized_pl\\\": \\\"0.348501\\\", \\\"unrealized_plpc\\\": \\\"0.007257092585076\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.006233303650935\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10170\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"63\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006233303650935\\\", \\\"unrealized_pl\\\": \\\"100.2\\\", \\\"unrealized_plpc\\\": \\\"0.0099505451945421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038096354471926\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.27\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.1\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.5\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038096354471926\\\", \\\"unrealized_pl\\\": \\\"-276.28\\\", \\\"unrealized_plpc\\\": \\\"-0.0510270797395085\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0088855749215522\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.46\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.82\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.24\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0088855749215522\\\", \\\"unrealized_pl\\\": \\\"75.47\\\", \\\"unrealized_plpc\\\": \\\"0.0068825892470373\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030607623600453\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.1999\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.1699\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.6999\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030607623600453\\\", \\\"unrealized_pl\\\": \\\"3572.9699\\\", \\\"unrealized_plpc\\\": \\\"0.0522164010276765\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.245017823\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.022124\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.348501\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.007257092585076\\\", \\\"unrealized_pl\\\": \\\"0.348501\\\", \\\"unrealized_plpc\\\": \\\"0.007257092585076\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.006233303650935\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10170\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"63\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006233303650935\\\", \\\"unrealized_pl\\\": \\\"100.2\\\", \\\"unrealized_plpc\\\": \\\"0.0099505451945421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038096354471926\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.27\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.1\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.5\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038096354471926\\\", \\\"unrealized_pl\\\": \\\"-276.28\\\", \\\"unrealized_plpc\\\": \\\"-0.0510270797395085\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0088855749215522\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.46\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.82\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.24\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0088855749215522\\\", \\\"unrealized_pl\\\": \\\"75.47\\\", \\\"unrealized_plpc\\\": \\\"0.0068825892470373\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030607623600453\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.1999\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.1699\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.6999\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030607623600453\\\", \\\"unrealized_pl\\\": \\\"3572.9699\\\", \\\"unrealized_plpc\\\": \\\"0.0522164010276765\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.245017823\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.022124\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"0.348501\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.007257092585076\\\", \\\"unrealized_pl\\\": \\\"0.348501\\\", \\\"unrealized_plpc\\\": \\\"0.007257092585076\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.006233303650935\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10170\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"63\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006233303650935\\\", \\\"unrealized_pl\\\": \\\"100.2\\\", \\\"unrealized_plpc\\\": \\\"0.0099505451945421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0038096354471926\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.27\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5138.1\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"19.5\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0038096354471926\\\", \\\"unrealized_pl\\\": \\\"-276.28\\\", \\\"unrealized_plpc\\\": \\\"-0.0510270797395085\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0088855749215522\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.46\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11040.82\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"97.24\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0088855749215522\\\", \\\"unrealized_pl\\\": \\\"75.47\\\", \\\"unrealized_plpc\\\": \\\"0.0068825892470373\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:00.475Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0a0465c632bafb352635",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/orders - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 281,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 356,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:01.273Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ed7f22c554a7b4f3f87f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 328,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.203Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-41055fcff589b31714fc",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/signals - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.543Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d119194d88aac0755452",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/bars/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.559Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fdc45380e47369d3f72d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/quote/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.575Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c9cefd26ad698181f72b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/portfolio - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.587Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f88a647ce2d25c062675",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/performance - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.605Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-dc69c42fed4427b3387a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/risk/metrics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.620Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e7ede36fa978444d840f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/config - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.633Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d3c080b38ca72c8c1e30",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/positions - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.645Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-53d96341621561488e9e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/orders - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.659Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7cabdc4d92829345bccc",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 21,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.674Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4ae41dadd1407e13684f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/bars/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 16,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.700Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4ec8f37b904758b22819",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/quote/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 14,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.734Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bcd1bc1a94a6dbc45fad",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/strategies - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.758Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0044ff3b98ed5e49c8d3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/alerts - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.776Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1a9dedadfc357c8171ab",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/history - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.792Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b8f2637fd972e3db2b6a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/analytics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 285,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.812Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-dce382a7649cb67fa24e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/market/screener - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 263,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 337,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:55.956Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ac03eaed7fe946fbdb2b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/positions - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 366,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 329,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030607623600453\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.1999\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.1699\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.6999\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030607623600453\\\", \\\"unrealized_pl\\\": \\\"3572.9699\\\", \\\"unrealized_plpc\\\": \\\"0.0522164010276765\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.402508912\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.023883\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"-1.425893\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0286343916656984\\\", \\\"unrealized_pl\\\": \\\"0.346742\\\", \\\"unrealized_plpc\\\": \\\"0.007220199166319\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.006233303650935\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10170\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"63\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006233303650935\\\", \\\"unrealized_pl\\\": \\\"100.2\\\", \\\"unrealized_plpc\\\": \\\"0.0099505451945421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0039854647755246\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.3\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5139\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"20.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0039854647755246\\\", \\\"unrealized_pl\\\": \\\"-275.38\\\", \\\"unrealized_plpc\\\": \\\"-0.050860855721246\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0083574113772641\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.12\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11035.04\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"91.46\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0083574113772641\\\", \\\"unrealized_pl\\\": \\\"69.69\\\", \\\"unrealized_plpc\\\": \\\"0.0063554742894664\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030607623600453\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.1999\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.1699\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.6999\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030607623600453\\\", \\\"unrealized_pl\\\": \\\"3572.9699\\\", \\\"unrealized_plpc\\\": \\\"0.0522164010276765\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.402508912\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.023883\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"-1.425893\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0286343916656984\\\", \\\"unrealized_pl\\\": \\\"0.346742\\\", \\\"unrealized_plpc\\\": \\\"0.007220199166319\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.006233303650935\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10170\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"63\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006233303650935\\\", \\\"unrealized_pl\\\": \\\"100.2\\\", \\\"unrealized_plpc\\\": \\\"0.0099505451945421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0039854647755246\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.3\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5139\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"20.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0039854647755246\\\", \\\"unrealized_pl\\\": \\\"-275.38\\\", \\\"unrealized_plpc\\\": \\\"-0.050860855721246\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0083574113772641\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.12\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11035.04\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"91.46\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0083574113772641\\\", \\\"unrealized_pl\\\": \\\"69.69\\\", \\\"unrealized_plpc\\\": \\\"0.0063554742894664\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"positions\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"227.329568\\\", \\\"change_today\\\": \\\"0.0030607623600453\\\", \\\"cost_basis\\\": \\\"68426.2\\\", \\\"current_price\\\": \\\"239.1999\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"238.47\\\", \\\"market_value\\\": \\\"71999.1699\\\", \\\"qty\\\": \\\"301\\\", \\\"qty_available\\\": \\\"301\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AAPL\\\", \\\"unrealized_intraday_pl\\\": \\\"219.6999\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0030607623600453\\\", \\\"unrealized_pl\\\": \\\"3572.9699\\\", \\\"unrealized_plpc\\\": \\\"0.0522164010276765\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"03fb07bb-5db1-4077-8dea-5d711b272625\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"179.834918\\\", \\\"change_today\\\": \\\"-0.0043792018750385\\\", \\\"cost_basis\\\": \\\"23378.53934\\\", \\\"current_price\\\": \\\"161.42\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"162.13\\\", \\\"market_value\\\": \\\"20984.6\\\", \\\"qty\\\": \\\"130\\\", \\\"qty_available\\\": \\\"130\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"AMD\\\", \\\"unrealized_intraday_pl\\\": \\\"-92.3\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0043792018750385\\\", \\\"unrealized_pl\\\": \\\"-2393.93934\\\", \\\"unrealized_plpc\\\": \\\"-0.1023990124098147\\\"}, {\\\"asset_class\\\": \\\"crypto\\\", \\\"asset_id\\\": \\\"35f33a69-f5d6-4dc9-b158-4485e5e92e4b\\\", \\\"asset_marginable\\\": false, \\\"avg_entry_price\\\": \\\"4299.402508912\\\", \\\"change_today\\\": \\\"-0.0286343958188466\\\", \\\"cost_basis\\\": \\\"48.023883\\\", \\\"current_price\\\": \\\"4330.445\\\", \\\"exchange\\\": \\\"CRYPTO\\\", \\\"lastday_price\\\": \\\"4458.1\\\", \\\"market_value\\\": \\\"48.370625\\\", \\\"qty\\\": \\\"0.011169897\\\", \\\"qty_available\\\": \\\"0.011169897\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"ETHUSD\\\", \\\"unrealized_intraday_pl\\\": \\\"-1.425893\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0286343916656984\\\", \\\"unrealized_pl\\\": \\\"0.346742\\\", \\\"unrealized_plpc\\\": \\\"0.007220199166319\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"f30d734c-2806-4d0d-b145-f9fade61432b\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"196.18\\\", \\\"change_today\\\": \\\"0.006014712245781\\\", \\\"cost_basis\\\": \\\"3923.6\\\", \\\"current_price\\\": \\\"232.49\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"231.1\\\", \\\"market_value\\\": \\\"4649.8\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"GOOG\\\", \\\"unrealized_intraday_pl\\\": \\\"27.8\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006014712245781\\\", \\\"unrealized_pl\\\": \\\"726.2\\\", \\\"unrealized_plpc\\\": \\\"0.1850851259047813\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b6d1aa75-5c9c-4353-a305-9e2caa1925ab\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"503.49\\\", \\\"change_today\\\": \\\"0.006233303650935\\\", \\\"cost_basis\\\": \\\"10069.8\\\", \\\"current_price\\\": \\\"508.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"505.35\\\", \\\"market_value\\\": \\\"10170\\\", \\\"qty\\\": \\\"20\\\", \\\"qty_available\\\": \\\"20\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"MSFT\\\", \\\"unrealized_intraday_pl\\\": \\\"63\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.006233303650935\\\", \\\"unrealized_pl\\\": \\\"100.2\\\", \\\"unrealized_plpc\\\": \\\"0.0099505451945421\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"4ce9353c-66d1-46c2-898f-fce867ab0247\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"180.479333\\\", \\\"change_today\\\": \\\"0.0039854647755246\\\", \\\"cost_basis\\\": \\\"5414.38\\\", \\\"current_price\\\": \\\"171.3\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"170.62\\\", \\\"market_value\\\": \\\"5139\\\", \\\"qty\\\": \\\"30\\\", \\\"qty_available\\\": \\\"30\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"NVDA\\\", \\\"unrealized_intraday_pl\\\": \\\"20.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0039854647755246\\\", \\\"unrealized_pl\\\": \\\"-275.38\\\", \\\"unrealized_plpc\\\": \\\"-0.050860855721246\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"24cbba8c-831b-44e2-8503-dd0c2ed7af8f\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"71.65\\\", \\\"change_today\\\": \\\"-0.0163699023549684\\\", \\\"cost_basis\\\": \\\"716.5\\\", \\\"current_price\\\": \\\"68.5\\\", \\\"exchange\\\": \\\"NASDAQ\\\", \\\"lastday_price\\\": \\\"69.64\\\", \\\"market_value\\\": \\\"685\\\", \\\"qty\\\": \\\"10\\\", \\\"qty_available\\\": \\\"10\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"PYPL\\\", \\\"unrealized_intraday_pl\\\": \\\"-11.4\\\", \\\"unrealized_intraday_plpc\\\": \\\"-0.0163699023549684\\\", \\\"unrealized_pl\\\": \\\"-31.5\\\", \\\"unrealized_plpc\\\": \\\"-0.043963712491277\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b28f4066-5c6d-479b-a2af-85dc1a8f16fb\\\", \\\"asset_marginable\\\": true, \\\"avg_entry_price\\\": \\\"645.020588\\\", \\\"change_today\\\": \\\"0.0083574113772641\\\", \\\"cost_basis\\\": \\\"10965.35\\\", \\\"current_price\\\": \\\"649.12\\\", \\\"exchange\\\": \\\"ARCA\\\", \\\"lastday_price\\\": \\\"643.74\\\", \\\"market_value\\\": \\\"11035.04\\\", \\\"qty\\\": \\\"17\\\", \\\"qty_available\\\": \\\"17\\\", \\\"side\\\": \\\"long\\\", \\\"symbol\\\": \\\"SPY\\\", \\\"unrealized_intraday_pl\\\": \\\"91.46\\\", \\\"unrealized_intraday_plpc\\\": \\\"0.0083574113772641\\\", \\\"unrealized_pl\\\": \\\"69.69\\\", \\\"unrealized_plpc\\\": \\\"0.0063554742894664\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:25.241Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a0c0ecc936270ad880ba",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/orders - no fake data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 370,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 330,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 33,
                              "line": 276
                            },
                            "snippet": "  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 33,
                                "line": 276
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[31m\u001b[2m)\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected path: \u001b[32m\\\"orders\\\"\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived path: \u001b[31m[]\u001b[39m\u001b[31m¬∑\u001b[39m\n\u001b[31mReceived value: \u001b[31m[{\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"25a788ec-15db-4f9f-9ed9-d5ee06a023ee\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"80c1d00f-8f02-4a9f-b7ee-18e1eb66b3ca\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": null, \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:54.775409715Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:54.776868094Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"7fa5b93c-100b-4bde-af5e-18267c301e68\\\", \\\"created_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"b3daa15c-26df-4615-b220-9950e23fc253\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:46:33.013442Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:46:33.014932Z\\\"}, {\\\"asset_class\\\": \\\"us_equity\\\", \\\"asset_id\\\": \\\"b0b6dd9d-8b9b-48a9-ba46-b9d54906e415\\\", \\\"canceled_at\\\": null, \\\"client_order_id\\\": \\\"eb3cb461-4ed9-45b0-8dec-08088746b5b4\\\", \\\"created_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"expired_at\\\": null, \\\"expires_at\\\": \\\"2025-12-04T21:00:00Z\\\", \\\"extended_hours\\\": false, \\\"failed_at\\\": null, \\\"filled_at\\\": null, \\\"filled_avg_price\\\": null, \\\"filled_qty\\\": \\\"0\\\", \\\"hwm\\\": null, \\\"id\\\": \\\"f34725a3-64bf-4c55-a7fc-cd772daf73e1\\\", \\\"legs\\\": null, \\\"limit_price\\\": null, \\\"notional\\\": null, \\\"order_class\\\": \\\"\\\", \\\"order_type\\\": \\\"market\\\", \\\"position_intent\\\": \\\"buy_to_open\\\", \\\"qty\\\": \\\"1\\\", \\\"replaced_at\\\": null, \\\"replaced_by\\\": null, \\\"replaces\\\": null, \\\"side\\\": \\\"buy\\\", \\\"source\\\": \\\"access_key\\\", \\\"status\\\": \\\"accepted\\\", \\\"stop_price\\\": null, \\\"submitted_at\\\": \\\"2025-09-04T23:38:59.143179Z\\\", \\\"subtag\\\": null, \\\"symbol\\\": \\\"AAPL\\\", \\\"time_in_force\\\": \\\"gtc\\\", \\\"trail_percent\\\": null, \\\"trail_price\\\": null, \\\"type\\\": \\\"market\\\", \\\"updated_at\\\": \\\"2025-09-04T23:38:59.144615Z\\\"}]\u001b[39m\u001b[31m\"\u001b[39m\n\n  274 |         } catch (error) {\n  275 |           // Connection errors are acceptable\n> 276 |           expect(error.message).toContain('ECONNREFUSED')\n      |                                 ^\n  277 |         }\n  278 |       })\n  279 |     })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:276:33"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:26.203Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 33,
                            "line": 276
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-93039ee457f0f7156913",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 330,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:26.952Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-33fe7c13c7fecd690d5b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/signals - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.297Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-49867f13730774a77b32",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/bars/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.313Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b9ba3eaf32073c99eaa1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/quote/AAPL - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.327Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-78ab385433dbe8185680",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/portfolio - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.339Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-29824c0dec57dbf088ee",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/performance - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.354Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-77dd019fde7b7f8913f8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/risk/metrics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.366Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9d031370694bfaf99e26",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/config - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.381Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-998a9990740935c15e52",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/positions - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.392Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-438db746765b5842df9d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/orders - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.404Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cca2e7527f46ebb3fb56",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/account - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.414Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3dda619d950b6f619951",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/bars/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.423Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fe51a5744d5764a72bed",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/crypto/quote/BTCUSD - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.433Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c640ba01bd1bb9a9ce80",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/strategies - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.443Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3b3269f31d3aedec7234",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/alerts - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.454Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-aaacd7b5daa138b8db99",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/history - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.470Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a21a3dc6dda0f0f022ba",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/analytics - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 371,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.481Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8fae0c967ce60c93d766",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                },
                {
                  "title": "API /api/market/screener - no fake data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 351,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 329,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:18.718Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3f3e72de17106e83f59d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 255,
                  "column": 11
                }
              ]
            },
            {
              "title": "4Ô∏è‚É£ WebSocket Real-Time Data (10 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 282,
              "column": 8,
              "specs": [
                {
                  "title": "WebSocket connection establishment",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 2,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 193,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 298
                            },
                            "snippet": "  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 298
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.703Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 298
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4ec778814dd6e563fd9d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 283,
                  "column": 9
                },
                {
                  "title": "Real-time price updates via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 8,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 203,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 318
                            },
                            "snippet": "  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 318
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:15.993Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 318
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d26806748ec4ae8c641b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 305,
                  "column": 9
                },
                {
                  "title": "Order status updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 168,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 332
                            },
                            "snippet": "  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 332
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:16.894Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 332
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-115c5affbea58ce332ec",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "Position updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 312,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 346
                            },
                            "snippet": "  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 346
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:18.264Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 346
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5d53d5fd3230bfb91632",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 336,
                  "column": 9
                },
                {
                  "title": "Market data streaming",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 19,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 219,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 358
                            },
                            "snippet": "  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 358
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:19.348Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 358
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4aca1376e6c0fcd237c8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 350,
                  "column": 9
                },
                {
                  "title": "Alert notifications via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 23,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 229,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 372
                            },
                            "snippet": "  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 372
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:20.448Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 372
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5657c251f3c73039eeff",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 362,
                  "column": 9
                },
                {
                  "title": "Account updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 28,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 172,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 386
                            },
                            "snippet": "  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 386
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.332Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 386
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5dc905e99659820f1ad5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 376,
                  "column": 9
                },
                {
                  "title": "Trade execution confirmations",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 31,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 186,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 400
                            },
                            "snippet": "  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 400
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:22.074Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 400
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6199017fc2d62c3f24ca",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 390,
                  "column": 9
                },
                {
                  "title": "Risk alerts",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 34,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 292,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 414
                            },
                            "snippet": "  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 414
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:23.009Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 414
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-727efd97653224621069",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 404,
                  "column": 9
                },
                {
                  "title": "Signal updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 36,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 196,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 428
                            },
                            "snippet": "  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 428
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:24.214Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 428
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8ab778e1203a548567a8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 418,
                  "column": 9
                },
                {
                  "title": "WebSocket connection establishment",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 89,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1319,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 298
                            },
                            "snippet": "  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 298
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.653Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 298
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-66f5ba4804007460715e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 283,
                  "column": 9
                },
                {
                  "title": "Real-time price updates via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 94,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1293,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 318
                            },
                            "snippet": "  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 318
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:37.850Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 318
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0e5921034ab9ce809b1a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 305,
                  "column": 9
                },
                {
                  "title": "Order status updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 98,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1220,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 332
                            },
                            "snippet": "  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 332
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:41.131Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 332
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a45aca455e3d95e53b5a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "Position updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 102,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1139,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 346
                            },
                            "snippet": "  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 346
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:44.348Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 346
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-40ad170e4a14ee74eb24",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 336,
                  "column": 9
                },
                {
                  "title": "Market data streaming",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 106,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1020,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 358
                            },
                            "snippet": "  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 358
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:46.950Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 358
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-120888d90a027016ebd5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 350,
                  "column": 9
                },
                {
                  "title": "Alert notifications via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 111,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1431,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 372
                            },
                            "snippet": "  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 372
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:49.616Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 372
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-31258f2ec226614c4e08",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 362,
                  "column": 9
                },
                {
                  "title": "Account updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 116,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1381,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 386
                            },
                            "snippet": "  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 386
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:53.277Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 386
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8a019338a883a296b8c5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 376,
                  "column": 9
                },
                {
                  "title": "Trade execution confirmations",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 121,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 2604,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 400
                            },
                            "snippet": "  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 400
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:56.830Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 400
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b16a6ca20930c48e486c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 390,
                  "column": 9
                },
                {
                  "title": "Risk alerts",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 126,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1751,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 414
                            },
                            "snippet": "  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 414
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:01.561Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 414
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-61ba787c594de903b919",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 404,
                  "column": 9
                },
                {
                  "title": "Signal updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 131,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 1469,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 428
                            },
                            "snippet": "  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 428
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:05.634Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 428
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c3204946c21c43ca4b4e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 418,
                  "column": 9
                },
                {
                  "title": "WebSocket connection establishment",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 175,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 550,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 298
                            },
                            "snippet": "  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 298
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:26.541Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 298
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0f55455eab62c8af8da1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 283,
                  "column": 9
                },
                {
                  "title": "Real-time price updates via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 176,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 499,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 318
                            },
                            "snippet": "  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 318
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:27.998Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 318
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9138826203a716f3d184",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 305,
                  "column": 9
                },
                {
                  "title": "Order status updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 179,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 606,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 332
                            },
                            "snippet": "  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 332
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.558Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 332
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bfe53330495cc7c4ba6a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "Position updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 185,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 613,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 346
                            },
                            "snippet": "  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 346
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:31.217Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 346
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4f8318ac1551ab69a991",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 336,
                  "column": 9
                },
                {
                  "title": "Market data streaming",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 189,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 537,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 358
                            },
                            "snippet": "  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 358
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:32.957Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 358
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-178bc3884b9dc9bc7769",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 350,
                  "column": 9
                },
                {
                  "title": "Alert notifications via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 194,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 508,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 372
                            },
                            "snippet": "  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 372
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:34.467Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 372
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f99ef6b88a5e4d833ccf",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 362,
                  "column": 9
                },
                {
                  "title": "Account updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 198,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 453,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 386
                            },
                            "snippet": "  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 386
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.905Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 386
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-653cc95d264f97b46abd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 376,
                  "column": 9
                },
                {
                  "title": "Trade execution confirmations",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 201,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 559,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 400
                            },
                            "snippet": "  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 400
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:37.321Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 400
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0bab03274ba88196d2e5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 390,
                  "column": 9
                },
                {
                  "title": "Risk alerts",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 204,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 645,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 414
                            },
                            "snippet": "  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 414
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:38.872Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 414
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-43dec1aa5d2c03e7e3e1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 404,
                  "column": 9
                },
                {
                  "title": "Signal updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 208,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 555,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 428
                            },
                            "snippet": "  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 428
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:40.547Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 428
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-60600ea8d2007289297c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 418,
                  "column": 9
                },
                {
                  "title": "WebSocket connection establishment",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 263,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 197,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 298
                            },
                            "snippet": "  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 298
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:56.319Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 298
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ccd84f9c47cef0a2b66e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 283,
                  "column": 9
                },
                {
                  "title": "Real-time price updates via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 267,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 293,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 318
                            },
                            "snippet": "  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 318
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.209Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 318
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-67f692ec1445e727390e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 305,
                  "column": 9
                },
                {
                  "title": "Order status updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 270,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 278,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 332
                            },
                            "snippet": "  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 332
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:58.299Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 332
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-be51a9a4d947f9f6a06d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "Position updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 274,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 250,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 346
                            },
                            "snippet": "  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 346
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:59.491Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 346
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fb21bb8ed82dd9ff425d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 336,
                  "column": 9
                },
                {
                  "title": "Market data streaming",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 278,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 244,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 358
                            },
                            "snippet": "  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 358
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:00.520Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-Mobile-Chrome/test-failed-1.png"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 358
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7b3c1e7c2084dd5f38a3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 350,
                  "column": 9
                },
                {
                  "title": "Alert notifications via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 282,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 253,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 372
                            },
                            "snippet": "  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 372
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:01.501Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 372
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cdb1b0997c7e56305e20",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 362,
                  "column": 9
                },
                {
                  "title": "Account updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 288,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 241,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 386
                            },
                            "snippet": "  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 386
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.685Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 386
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-43463c3309b52f99f89f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 376,
                  "column": 9
                },
                {
                  "title": "Trade execution confirmations",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 291,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 182,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 400
                            },
                            "snippet": "  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 400
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:03.706Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 400
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cc6f986c893f4e428e78",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 390,
                  "column": 9
                },
                {
                  "title": "Risk alerts",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 294,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 211,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 414
                            },
                            "snippet": "  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 414
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:04.427Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 414
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5a9fa70813667697af80",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 404,
                  "column": 9
                },
                {
                  "title": "Signal updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 295,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 276,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 428
                            },
                            "snippet": "  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 428
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:05.620Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 428
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f5a8e0cce0ad401fb4c6",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 418,
                  "column": 9
                },
                {
                  "title": "WebSocket connection establishment",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 351,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 640,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 298
                            },
                            "snippet": "  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 298
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  296 |       })\n  297 |       \n> 298 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  299 |       await page.waitForTimeout(3000)\n  300 |       \n  301 |       // Validate collected messages\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:298:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.061Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-41a6c-et-connection-establishment-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 298
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-dcdf67de689f34b89795",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 283,
                  "column": 9
                },
                {
                  "title": "Real-time price updates via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 356,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 534,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 318
                            },
                            "snippet": "  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 318
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  316 |       })\n  317 |       \n> 318 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  319 |       await page.waitForTimeout(5000)\n  320 |     })\n  321 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:318:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.730Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1b59f-price-updates-via-WebSocket-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 318
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-42a82e36dc43004f31f3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 305,
                  "column": 9
                },
                {
                  "title": "Order status updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 360,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 607,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 332
                            },
                            "snippet": "  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 332
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  330 |       })\n  331 |       \n> 332 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  333 |       await page.waitForTimeout(3000)\n  334 |     })\n  335 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:332:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:22.291Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c2e3a--tests-Order-status-updates-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 332
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-379581ca70ba5ec91825",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 322,
                  "column": 9
                },
                {
                  "title": "Position updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 365,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 615,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 346
                            },
                            "snippet": "  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 346
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  344 |       })\n  345 |       \n> 346 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  347 |       await page.waitForTimeout(3000)\n  348 |     })\n  349 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:346:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:23.906Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-105cc-a-10-tests-Position-updates-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 346
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-60a597bfa9245a009d4b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 336,
                  "column": 9
                },
                {
                  "title": "Market data streaming",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 367,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 647,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 358
                            },
                            "snippet": "  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 358
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  356 |       })\n  357 |       \n> 358 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  359 |       await page.waitForTimeout(3000)\n  360 |     })\n  361 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:358:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:25.508Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98670-tests-Market-data-streaming-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 358
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ad49811c75f653c34057",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 350,
                  "column": 9
                },
                {
                  "title": "Alert notifications via WebSocket",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 374,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 710,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 372
                            },
                            "snippet": "  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 372
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  370 |       })\n  371 |       \n> 372 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  373 |       await page.waitForTimeout(3000)\n  374 |     })\n  375 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:372:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.183Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ada2a-notifications-via-WebSocket-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 372
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-32e1772efdd061a4d91b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 362,
                  "column": 9
                },
                {
                  "title": "Account updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 375,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 696,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 386
                            },
                            "snippet": "  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 386
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  384 |       })\n  385 |       \n> 386 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  387 |       await page.waitForTimeout(3000)\n  388 |     })\n  389 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:386:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:28.934Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-4760e-ta-10-tests-Account-updates-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 386
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c4fcfd0edef9aba1198a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 376,
                  "column": 9
                },
                {
                  "title": "Trade execution confirmations",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 379,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 763,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 400
                            },
                            "snippet": "  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 400
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  398 |       })\n  399 |       \n> 400 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  401 |       await page.waitForTimeout(3000)\n  402 |     })\n  403 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:400:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:30.755Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-1c735-ade-execution-confirmations-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 400
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-063a9a1abe64f2f65acb",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 390,
                  "column": 9
                },
                {
                  "title": "Risk alerts",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 384,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 673,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 414
                            },
                            "snippet": "  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 414
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  412 |       })\n  413 |       \n> 414 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  415 |       await page.waitForTimeout(3000)\n  416 |     })\n  417 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:414:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:32.621Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d00bc-e-Data-10-tests-Risk-alerts-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 414
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-990f3e93495e82562f50",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 404,
                  "column": 9
                },
                {
                  "title": "Signal updates",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 390,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 626,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 428
                            },
                            "snippet": "  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 428
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  426 |       })\n  427 |       \n> 428 |       await page.goto(FRONTEND_URL)\n      |                  ^\n  429 |       await page.waitForTimeout(3000)\n  430 |     })\n  431 |   })\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:428:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:34.351Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d80fe-ata-10-tests-Signal-updates-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 428
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-22bbda53ad34703a473b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 418,
                  "column": 9
                }
              ]
            },
            {
              "title": "5Ô∏è‚É£ Trading Functionality (15 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 433,
              "column": 8,
              "specs": [
                {
                  "title": "Place market order - real execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 451,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.144Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9436e4e8143f6f74e3e7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "Place limit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.768Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ab52ae26ea59c14fa298",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 459,
                  "column": 9
                },
                {
                  "title": "Cancel order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.780Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-193b7a85f88c4751d3f7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 482,
                  "column": 9
                },
                {
                  "title": "Modify order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.789Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-145fb317fd983f2fab09",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 495,
                  "column": 9
                },
                {
                  "title": "Close position",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.798Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4d516159fafbfc3e4064",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 515,
                  "column": 9
                },
                {
                  "title": "Crypto market order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.810Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f269627be26a066526bd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 528,
                  "column": 9
                },
                {
                  "title": "Stop loss order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.819Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-929bc7e7133b7085df88",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 550,
                  "column": 9
                },
                {
                  "title": "Take profit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.828Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9b7e08ac21c254a42d0b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "Bracket order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.839Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-383c43f99801ecb6a229",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 596,
                  "column": 9
                },
                {
                  "title": "OCO order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.847Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-768e183febc8dab2b967",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 621,
                  "column": 9
                },
                {
                  "title": "Trailing stop order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.860Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4294beac870715844fc1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 646,
                  "column": 9
                },
                {
                  "title": "Portfolio rebalancing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.870Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-83670c7001676cb8b131",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 669,
                  "column": 9
                },
                {
                  "title": "Risk check before order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 412,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.237Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-dec72f85b589162b84f2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 692,
                  "column": 9
                },
                {
                  "title": "Strategy execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 13,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.671Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e8afc537318a6cce5916",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 713,
                  "column": 9
                },
                {
                  "title": "Automated trading toggle",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.689Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-588e869c7d210f3bb27d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 737,
                  "column": 9
                },
                {
                  "title": "Place market order - real execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 1450,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:09.418Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-eb6a18b941362ba32e32",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "Place limit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.543Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a0f3fbc5ba98fe945992",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 459,
                  "column": 9
                },
                {
                  "title": "Cancel order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.565Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e6bc47517ee3e43845cd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 482,
                  "column": 9
                },
                {
                  "title": "Modify order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.580Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6f03ec390bc343fc2220",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 495,
                  "column": 9
                },
                {
                  "title": "Close position",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.596Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3c02ecdb7d2efc5ba499",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 515,
                  "column": 9
                },
                {
                  "title": "Crypto market order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.624Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-44872ebc62bc0542bae8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 528,
                  "column": 9
                },
                {
                  "title": "Stop loss order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.634Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fefe1282c5f3d99aca3a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 550,
                  "column": 9
                },
                {
                  "title": "Take profit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.645Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-51f82796823c21f84fd5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "Bracket order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.657Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-51e15720a12bc36dd7c8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 596,
                  "column": 9
                },
                {
                  "title": "OCO order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.674Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ffb1dee7eaacd02813e1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 621,
                  "column": 9
                },
                {
                  "title": "Trailing stop order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.684Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3532d40b8cfeb0853925",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 646,
                  "column": 9
                },
                {
                  "title": "Portfolio rebalancing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 137,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 13,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:11.695Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fe4dbfdfbea8b51dab85",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 669,
                  "column": 9
                },
                {
                  "title": "Risk check before order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 323,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.389Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bddb557b0ea0fa845cfd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 692,
                  "column": 9
                },
                {
                  "title": "Strategy execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.722Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3ffc236fa7732dea3a39",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 713,
                  "column": 9
                },
                {
                  "title": "Automated trading toggle",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.738Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bf8f01b087a3f68d172f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 737,
                  "column": 9
                },
                {
                  "title": "Place market order - real execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 834,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:42.229Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ea4977473e3ed968322a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "Place limit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.304Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b373d4f1ee44c25abcdd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 459,
                  "column": 9
                },
                {
                  "title": "Cancel order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.330Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-430bb8113a9965268d96",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 482,
                  "column": 9
                },
                {
                  "title": "Modify order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.342Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-06bca0af4214a5ce8cff",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 495,
                  "column": 9
                },
                {
                  "title": "Close position",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.351Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-35bc296b441c95c8180a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 515,
                  "column": 9
                },
                {
                  "title": "Crypto market order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.361Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-81c1aba2ab49ddaae3ee",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 528,
                  "column": 9
                },
                {
                  "title": "Stop loss order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.370Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7a5b6fa92cd07f662c31",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 550,
                  "column": 9
                },
                {
                  "title": "Take profit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.378Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-db607828c76444d398fb",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "Bracket order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.388Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6defa31c5cb0afe34fbd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 596,
                  "column": 9
                },
                {
                  "title": "OCO order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.397Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b221ca1685078afea485",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 621,
                  "column": 9
                },
                {
                  "title": "Trailing stop order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.405Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a8e47e5aacea5a1f6015",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 646,
                  "column": 9
                },
                {
                  "title": "Portfolio rebalancing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 213,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.412Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6c9b7d68d539bd6f1011",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 669,
                  "column": 9
                },
                {
                  "title": "Risk check before order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 322,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.068Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0ffc674de223afef772d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 692,
                  "column": 9
                },
                {
                  "title": "Strategy execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.403Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3282f48a8b688ca8727b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 713,
                  "column": 9
                },
                {
                  "title": "Automated trading toggle",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.412Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-051d3c61f7f10434e18b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 737,
                  "column": 9
                },
                {
                  "title": "Place market order - real execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 503,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:06.945Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-507c7e37cace126af017",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "Place limit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.628Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5a69dd199c5db5f07b22",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 459,
                  "column": 9
                },
                {
                  "title": "Cancel order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.638Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-392d27b685927f002498",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 482,
                  "column": 9
                },
                {
                  "title": "Modify order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.648Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5b506a993fd8cfb98343",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 495,
                  "column": 9
                },
                {
                  "title": "Close position",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.656Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-388e0098e616d5e8c636",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 515,
                  "column": 9
                },
                {
                  "title": "Crypto market order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.665Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9811a30305443f551cdc",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 528,
                  "column": 9
                },
                {
                  "title": "Stop loss order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.673Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5439bb393a6bc27649e8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 550,
                  "column": 9
                },
                {
                  "title": "Take profit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.680Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3e9165c9c59a788c39d7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "Bracket order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.688Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-518de2e8e35d3c833aa2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 596,
                  "column": 9
                },
                {
                  "title": "OCO order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.696Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-eab7c600c4f9fbbd6a7a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 621,
                  "column": 9
                },
                {
                  "title": "Trailing stop order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.703Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1e15e9bcb2ac0ba17b6c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 646,
                  "column": 9
                },
                {
                  "title": "Portfolio rebalancing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 300,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 2,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:07.710Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-be8ea06ff8959e271ea6",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 669,
                  "column": 9
                },
                {
                  "title": "Risk check before order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 327,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:56.738Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4fe9b4ed6e1a834fbcd1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 692,
                  "column": 9
                },
                {
                  "title": "Strategy execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.081Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-91daeb7b621b5dd2f13a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 713,
                  "column": 9
                },
                {
                  "title": "Automated trading toggle",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.096Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f3178fad6914edd04c4a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 737,
                  "column": 9
                },
                {
                  "title": "Place market order - real execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 932,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:36.049Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-83c100ded262cda39f79",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 434,
                  "column": 9
                },
                {
                  "title": "Place limit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.275Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ffb4ed462e0e1a33bd9c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 459,
                  "column": 9
                },
                {
                  "title": "Cancel order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.290Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-dfb89c4fcc963d432c06",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 482,
                  "column": 9
                },
                {
                  "title": "Modify order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.305Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2a9213747aaa1cbc6d7c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 495,
                  "column": 9
                },
                {
                  "title": "Close position",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.319Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e4858f587416c541ac4f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 515,
                  "column": 9
                },
                {
                  "title": "Crypto market order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 24,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.342Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-52dce23ee3e0e0df2cf0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 528,
                  "column": 9
                },
                {
                  "title": "Stop loss order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.374Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f5ef05fe8f4b27dec351",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 550,
                  "column": 9
                },
                {
                  "title": "Take profit order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.394Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e4c0cb8db444b0e2ee7d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 573,
                  "column": 9
                },
                {
                  "title": "Bracket order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.411Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e506e875940eff6b2a1c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 596,
                  "column": 9
                },
                {
                  "title": "OCO order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.419Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-05c42b9b017353211d39",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 621,
                  "column": 9
                },
                {
                  "title": "Trailing stop order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.435Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9de27935e5f95862013b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 646,
                  "column": 9
                },
                {
                  "title": "Portfolio rebalancing",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 393,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.446Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2762a0dd4ce79e0dcf8b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 669,
                  "column": 9
                },
                {
                  "title": "Risk check before order",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 340,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.421Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d8310afe57b2df1f9792",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 692,
                  "column": 9
                },
                {
                  "title": "Strategy execution",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.777Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-950143b9f43e2a142fa3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 713,
                  "column": 9
                },
                {
                  "title": "Automated trading toggle",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.797Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-596160a5b8177e465f3e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 737,
                  "column": 9
                }
              ]
            },
            {
              "title": "6Ô∏è‚É£ Data Validation & Integrity (10 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 753,
              "column": 8,
              "specs": [
                {
                  "title": "Historical data timestamps are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 13,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.711Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f8f59b5d6cf53c60260b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 754,
                  "column": 9
                },
                {
                  "title": "Price data is realistic",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.731Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cec684ba48eb51659a22",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 777,
                  "column": 9
                },
                {
                  "title": "Account IDs are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 11,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.748Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-71181eb1a7e573ffc0b8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 799,
                  "column": 9
                },
                {
                  "title": "Order IDs are UUIDs or real IDs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.766Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-25777879123916be6171",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 817,
                  "column": 9
                },
                {
                  "title": "Symbols are real tickers",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 11,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.782Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ac81d244d0e9ee164f77",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 837,
                  "column": 9
                },
                {
                  "title": "Crypto symbols are valid",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 310,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.799Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-57b1d32c5d3f01392132",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 857,
                  "column": 9
                },
                {
                  "title": "Timestamps are current",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.113Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8eed886cca09d23723aa",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 876,
                  "column": 9
                },
                {
                  "title": "No hardcoded test data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 13,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.124Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b75b0376aaf82fcec422",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 898,
                  "column": 9
                },
                {
                  "title": "Configuration has no demo flags",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.141Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6a4002dec1b6f2974ad8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 926,
                  "column": 9
                },
                {
                  "title": "Error messages dont reveal test data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.151Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3804c9be8f81baba1754",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 945,
                  "column": 9
                },
                {
                  "title": "Historical data timestamps are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.754Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bf2f47151c84af67a67a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 754,
                  "column": 9
                },
                {
                  "title": "Price data is realistic",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.768Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-48e70ab0369734e3ebb3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 777,
                  "column": 9
                },
                {
                  "title": "Account IDs are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 16,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.785Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-89e280f4c8efda1d0807",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 799,
                  "column": 9
                },
                {
                  "title": "Order IDs are UUIDs or real IDs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 14,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.808Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-96bb652c77e48dee0bc0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 817,
                  "column": 9
                },
                {
                  "title": "Symbols are real tickers",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.831Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b5e027ee0ebdfcd90708",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 837,
                  "column": 9
                },
                {
                  "title": "Crypto symbols are valid",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 310,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.845Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7b7f8b3539dfc91db641",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 857,
                  "column": 9
                },
                {
                  "title": "Timestamps are current",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 14,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.162Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d8d414572be4a5a2b664",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 876,
                  "column": 9
                },
                {
                  "title": "No hardcoded test data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 15,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.180Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c60c5d361d905e71d21f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 898,
                  "column": 9
                },
                {
                  "title": "Configuration has no demo flags",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.199Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f38b6fe3eac4cb3ecc8b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 926,
                  "column": 9
                },
                {
                  "title": "Error messages dont reveal test data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.209Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-458a11e98af18886bf82",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 945,
                  "column": 9
                },
                {
                  "title": "Historical data timestamps are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.423Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b148f51fe8acbaed311e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 754,
                  "column": 9
                },
                {
                  "title": "Price data is realistic",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 3,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.434Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7aa8959b9e45df857a7f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 777,
                  "column": 9
                },
                {
                  "title": "Account IDs are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.442Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1fb99403d42503cfafa3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 799,
                  "column": 9
                },
                {
                  "title": "Order IDs are UUIDs or real IDs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.456Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-40f6f582c6376d8a1d2b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 817,
                  "column": 9
                },
                {
                  "title": "Symbols are real tickers",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.467Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3f916bcbd6239b75ee19",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 837,
                  "column": 9
                },
                {
                  "title": "Crypto symbols are valid",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 307,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.479Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4380b623250f57515aa8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 857,
                  "column": 9
                },
                {
                  "title": "Timestamps are current",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.791Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-96e98b6e1450d7ac70c9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 876,
                  "column": 9
                },
                {
                  "title": "No hardcoded test data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 16,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.801Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e59a564f4c429e138598",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 898,
                  "column": 9
                },
                {
                  "title": "Configuration has no demo flags",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.821Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-19ff9233ead124d52262",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 926,
                  "column": 9
                },
                {
                  "title": "Error messages dont reveal test data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.832Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d36f336fff3784b27f39",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 945,
                  "column": 9
                },
                {
                  "title": "Historical data timestamps are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 13,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.121Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-43f6ef4af8143b4b2aeb",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 754,
                  "column": 9
                },
                {
                  "title": "Price data is realistic",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.145Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d837fdb43f20688fef00",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 777,
                  "column": 9
                },
                {
                  "title": "Account IDs are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 25,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.164Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d44c19a1debad464c91f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 799,
                  "column": 9
                },
                {
                  "title": "Order IDs are UUIDs or real IDs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.202Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2327787c136c01dd4021",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 817,
                  "column": 9
                },
                {
                  "title": "Symbols are real tickers",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.224Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a6cce108d8bf502d6ee6",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 837,
                  "column": 9
                },
                {
                  "title": "Crypto symbols are valid",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 330,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.241Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6729634f3ba01a02d62d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 857,
                  "column": 9
                },
                {
                  "title": "Timestamps are current",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.579Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-40fc2c0a86019b6b8469",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 876,
                  "column": 9
                },
                {
                  "title": "No hardcoded test data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 22,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.591Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e65a06d94630f216e51e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 898,
                  "column": 9
                },
                {
                  "title": "Configuration has no demo flags",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.621Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ef34abfc3b02cd9393c1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 926,
                  "column": 9
                },
                {
                  "title": "Error messages dont reveal test data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.637Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-66d8d056d38c73738139",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 945,
                  "column": 9
                },
                {
                  "title": "Historical data timestamps are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 18,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.817Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f459a5422d11e81245ca",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 754,
                  "column": 9
                },
                {
                  "title": "Price data is realistic",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.845Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-37ddf2eb2878b6cf1f33",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 777,
                  "column": 9
                },
                {
                  "title": "Account IDs are real",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 21,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.863Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7238cafb250d80b5a31a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 799,
                  "column": 9
                },
                {
                  "title": "Order IDs are UUIDs or real IDs",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.900Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3d9e9fde76a8c1ef3f21",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 817,
                  "column": 9
                },
                {
                  "title": "Symbols are real tickers",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 14,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.921Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f87fb5f668190a6de546",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 837,
                  "column": 9
                },
                {
                  "title": "Crypto symbols are valid",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 309,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.941Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-452b403875cca843bafa",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 857,
                  "column": 9
                },
                {
                  "title": "Timestamps are current",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.256Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d9692ec882cb76732e90",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 876,
                  "column": 9
                },
                {
                  "title": "No hardcoded test data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 17,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.269Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c42b55c0bd79d2f10f75",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 898,
                  "column": 9
                },
                {
                  "title": "Configuration has no demo flags",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.291Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d8cf9d8b46ca35bd6ece",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 926,
                  "column": 9
                },
                {
                  "title": "Error messages dont reveal test data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.303Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-40ab08230d3d8403e1a7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 945,
                  "column": 9
                }
              ]
            },
            {
              "title": "7Ô∏è‚É£ Error Handling & Edge Cases (10 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 965,
              "column": 8,
              "specs": [
                {
                  "title": "Invalid symbol handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.161Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c05c8c180460cbeb52da",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 966,
                  "column": 9
                },
                {
                  "title": "Insufficient funds handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.170Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-67f426e9bdcb2e0b2c4b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 980,
                  "column": 9
                },
                {
                  "title": "Rate limiting",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 322,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.179Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c53432a9ef57cc60fa10",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1002,
                  "column": 9
                },
                {
                  "title": "Invalid order parameters",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 7,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 31,
                              "line": 1043
                            },
                            "snippet": "  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 31,
                                "line": 1043
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n\n  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.505Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 31,
                            "line": 1043
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-15057e81faad051a2efe",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1024,
                  "column": 9
                },
                {
                  "title": "Market closed handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 7,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 321,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.998Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b3d4f0dabf9c57c7234d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1047,
                  "column": 9
                },
                {
                  "title": "Authentication failure",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 7,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:15.333Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7417d0558e35b59a8171",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1069,
                  "column": 9
                },
                {
                  "title": "Timeout handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 7,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:15.346Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-35842366089a1cf56368",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1086,
                  "column": 9
                },
                {
                  "title": "Connection loss recovery",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 7,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 164,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1101
                            },
                            "snippet": "  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1101
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:15.360Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-851ae6dd830c03067028",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1100,
                  "column": 9
                },
                {
                  "title": "Concurrent request handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 358,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:16.450Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c4cdcf3c04fdb6491f7d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1118,
                  "column": 9
                },
                {
                  "title": "Large data set handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:16.822Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f168e84697fa2b86b9a8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1140,
                  "column": 9
                },
                {
                  "title": "Invalid symbol handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.219Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-62c13c33b504a4b917ff",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 966,
                  "column": 9
                },
                {
                  "title": "Insufficient funds handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.229Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e754f00e7748b88f8351",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 980,
                  "column": 9
                },
                {
                  "title": "Rate limiting",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 315,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.239Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-90e62eeb1d0baa16679a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1002,
                  "column": 9
                },
                {
                  "title": "Invalid order parameters",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 90,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 8,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 31,
                              "line": 1043
                            },
                            "snippet": "  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 31,
                                "line": 1043
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n\n  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:35.558Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 31,
                            "line": 1043
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c9a77f6addcd63dcdf65",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1024,
                  "column": 9
                },
                {
                  "title": "Market closed handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 92,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 357,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:36.072Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5c4fac78ed412a5d1a33",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1047,
                  "column": 9
                },
                {
                  "title": "Authentication failure",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 92,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 13,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:36.459Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6f31bff289033610d8a6",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1069,
                  "column": 9
                },
                {
                  "title": "Timeout handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 92,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:36.480Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cf6a6e77bdd99a6d990e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1086,
                  "column": 9
                },
                {
                  "title": "Connection loss recovery",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 92,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 1085,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1101
                            },
                            "snippet": "  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1101
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:36.497Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8f7a308d7dae78a54265",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1100,
                  "column": 9
                },
                {
                  "title": "Concurrent request handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 96,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 368,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:39.268Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8b01789ee6ac40b1fa1d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1118,
                  "column": 9
                },
                {
                  "title": "Large data set handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 96,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 14,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:39.661Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-85e943d49c69acab225f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1140,
                  "column": 9
                },
                {
                  "title": "Invalid symbol handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.841Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6d7ebc53078d1fd50db8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 966,
                  "column": 9
                },
                {
                  "title": "Insufficient funds handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.851Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-68d7afbf572b61f5f4ce",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 980,
                  "column": 9
                },
                {
                  "title": "Rate limiting",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 353,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.861Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-953aa9f0f1507a9540af",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1002,
                  "column": 9
                },
                {
                  "title": "Invalid order parameters",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 178,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 9,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 31,
                              "line": 1043
                            },
                            "snippet": "  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 31,
                                "line": 1043
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n\n  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:30.219Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 31,
                            "line": 1043
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a479e4f369b27191f197",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1024,
                  "column": 9
                },
                {
                  "title": "Market closed handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 182,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 336,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:30.685Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c7f89f70f53f0c538336",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1047,
                  "column": 9
                },
                {
                  "title": "Authentication failure",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 182,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:31.034Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fe06239c6894ce69a053",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1069,
                  "column": 9
                },
                {
                  "title": "Timeout handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 182,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:31.046Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-14e1e9bd2536fde585cd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1086,
                  "column": 9
                },
                {
                  "title": "Connection loss recovery",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 182,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 717,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1101
                            },
                            "snippet": "  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1101
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:31.057Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e15100d929cfffc999b3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1100,
                  "column": 9
                },
                {
                  "title": "Concurrent request handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 188,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 371,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:32.791Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-919cc11e80ed67a6e9cf",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1118,
                  "column": 9
                },
                {
                  "title": "Large data set handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 188,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 9,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:33.178Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-01a9d1f51fe974cf026c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1140,
                  "column": 9
                },
                {
                  "title": "Invalid symbol handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 7,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.651Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-77c074e2f8a54c2cf20c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 966,
                  "column": 9
                },
                {
                  "title": "Insufficient funds handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.662Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f23be700fc65f632feb9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 980,
                  "column": 9
                },
                {
                  "title": "Rate limiting",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 336,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.677Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3bdfebfa4d6765ea6f39",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1002,
                  "column": 9
                },
                {
                  "title": "Invalid order parameters",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 265,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 8,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 31,
                              "line": 1043
                            },
                            "snippet": "  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 31,
                                "line": 1043
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n\n  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:58.021Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 31,
                            "line": 1043
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-710ea801d6bfcbbd76b0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1024,
                  "column": 9
                },
                {
                  "title": "Market closed handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 272,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 324,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:58.668Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-850fbd776b1ea2a49535",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1047,
                  "column": 9
                },
                {
                  "title": "Authentication failure",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 272,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:59.015Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4db3e77260a43ca8c342",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1069,
                  "column": 9
                },
                {
                  "title": "Timeout handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 272,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:59.030Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4c53c3f30f2a908dcc47",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1086,
                  "column": 9
                },
                {
                  "title": "Connection loss recovery",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 272,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 291,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1101
                            },
                            "snippet": "  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1101
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:59.042Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bde4fccf86f75b648d0d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1100,
                  "column": 9
                },
                {
                  "title": "Concurrent request handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 276,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 345,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:00.213Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e20b1d904d4ba9118577",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1118,
                  "column": 9
                },
                {
                  "title": "Large data set handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 276,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 10,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:00.570Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3994a9c9a9b54fd37f8f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1140,
                  "column": 9
                },
                {
                  "title": "Invalid symbol handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.312Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a527484cbba4b6534933",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 966,
                  "column": 9
                },
                {
                  "title": "Insufficient funds handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 8,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.324Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-18e036f3df89b08fd4b1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 980,
                  "column": 9
                },
                {
                  "title": "Rate limiting",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 324,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.336Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-414443ae72740dd90151",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1002,
                  "column": 9
                },
                {
                  "title": "Invalid order parameters",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 353,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 9,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 31,
                              "line": 1043
                            },
                            "snippet": "  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 31,
                                "line": 1043
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"ECONNREFUSED\"\u001b[39m\nReceived string:    \u001b[31m\"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[31m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[31m\u001b[2m) // Object.is equality\u001b[22m¬∑\u001b[39m\n\u001b[31mExpected: \u001b[32m400\u001b[39m\u001b[31m\u001b[39m\n\u001b[31mReceived: \u001b[31m405\u001b[39m\u001b[31m\"\u001b[39m\n\n  1041 |         }\n  1042 |       } catch (error) {\n> 1043 |         expect(error.message).toContain('ECONNREFUSED')\n       |                               ^\n  1044 |       }\n  1045 |     })\n  1046 |\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1043:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.664Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 31,
                            "line": 1043
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1e634c98885bb2ba638a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1024,
                  "column": 9
                },
                {
                  "title": "Market closed handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 357,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 328,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:21.271Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cb2e8d80868cd472f61f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1047,
                  "column": 9
                },
                {
                  "title": "Authentication failure",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 357,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 5,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:21.612Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3c93247d18d7f537e272",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1069,
                  "column": 9
                },
                {
                  "title": "Timeout handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 357,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 4,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:21.622Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ba1e1e3c56b785570e46",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1086,
                  "column": 9
                },
                {
                  "title": "Connection loss recovery",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 357,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 526,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1101
                            },
                            "snippet": "  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1101
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1099 |\n  1100 |     test('Connection loss recovery', async ({ page }) => {\n> 1101 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1102 |       \n  1103 |       // Simulate connection loss\n  1104 |       await page.context().setOffline(true)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1101:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:21.633Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-a37ac-ts-Connection-loss-recovery-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1101
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8e957ea5670b2204e9c1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1100,
                  "column": 9
                },
                {
                  "title": "Concurrent request handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 361,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 336,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:23.267Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-10773be50245ffbf4a07",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1118,
                  "column": 9
                },
                {
                  "title": "Large data set handling",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 361,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:23.615Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7d9eb382396ad0b600be",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1140,
                  "column": 9
                }
              ]
            },
            {
              "title": "8Ô∏è‚É£ User Workflows (10 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 1159,
              "column": 8,
              "specs": [
                {
                  "title": "Complete buy workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 4,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 426,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1161
                            },
                            "snippet": "  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1161
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:13.241Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1161
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1c5e1b5348f2d759c987",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1160,
                  "column": 9
                },
                {
                  "title": "Portfolio review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 5,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 204,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1178
                            },
                            "snippet": "  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1178
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:14.534Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1178
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9f74601b3baa66be0c2c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1177,
                  "column": 9
                },
                {
                  "title": "Strategy selection workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 9,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 189,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1192
                            },
                            "snippet": "  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1192
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:16.249Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1192
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d61e20c496ae4814acfd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1191,
                  "column": 9
                },
                {
                  "title": "Alert configuration workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 314,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1202
                            },
                            "snippet": "  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1202
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:18.239Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1202
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e5693beff281dddf7615",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1201,
                  "column": 9
                },
                {
                  "title": "Performance review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 20,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 201,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1217
                            },
                            "snippet": "  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1217
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:19.366Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1217
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c6aa6a765450de1afe54",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1216,
                  "column": 9
                },
                {
                  "title": "Trade history review",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 24,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 210,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1230
                            },
                            "snippet": "  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1230
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:20.472Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1230
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-5be50f07f36be2af307e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1229,
                  "column": 9
                },
                {
                  "title": "Risk management workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 27,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 193,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1245
                            },
                            "snippet": "  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1245
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:21.244Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1245
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-63851100a5a7a96ac841",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1244,
                  "column": 9
                },
                {
                  "title": "Account settings workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 30,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 209,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1260
                            },
                            "snippet": "  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1260
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:22.043Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1260
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8657e454b83c1038bbc4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1259,
                  "column": 9
                },
                {
                  "title": "Market screener workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 33,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 267,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1275
                            },
                            "snippet": "  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1275
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:22.962Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1275
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9c3fab06141f22b3cff0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1274,
                  "column": 9
                },
                {
                  "title": "Logout workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 38,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 231,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1290
                            },
                            "snippet": "  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1290
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:24.722Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1290
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9eaa4c4391a8cf397395",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1289,
                  "column": 9
                },
                {
                  "title": "Complete buy workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 91,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1185,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1161
                            },
                            "snippet": "  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1161
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:34.730Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1161
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0da6bd5ff4bd4b6d86ad",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1160,
                  "column": 9
                },
                {
                  "title": "Portfolio review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 95,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1183,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1178
                            },
                            "snippet": "  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1178
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:38.437Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1178
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7f0ef50a1b315a0b1a6a",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1177,
                  "column": 9
                },
                {
                  "title": "Strategy selection workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 100,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1353,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1192
                            },
                            "snippet": "  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1192
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:42.256Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1192
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a571ad8ac0d5ea721183",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1191,
                  "column": 9
                },
                {
                  "title": "Alert configuration workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 104,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1083,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1202
                            },
                            "snippet": "  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1202
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:45.195Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1202
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f812842c5ec3142fcb2f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1201,
                  "column": 9
                },
                {
                  "title": "Performance review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 109,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1266,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1217
                            },
                            "snippet": "  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1217
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:47.808Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1217
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-084f602faf56b1318f53",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1216,
                  "column": 9
                },
                {
                  "title": "Trade history review",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 113,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1519,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1230
                            },
                            "snippet": "  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1230
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:50.878Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1230
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-50266a46c95145e51576",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1229,
                  "column": 9
                },
                {
                  "title": "Risk management workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 118,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1523,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1245
                            },
                            "snippet": "  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1245
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:54.383Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1245
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ab9e465b2b3dbb7755e9",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1244,
                  "column": 9
                },
                {
                  "title": "Account settings workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 123,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1980,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1260
                            },
                            "snippet": "  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1260
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:57.952Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1260
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-955aacb4bc506df30144",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1259,
                  "column": 9
                },
                {
                  "title": "Market screener workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 128,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1570,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1275
                            },
                            "snippet": "  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1275
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:03.481Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1275
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bc432c5fb52bc55aa54d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1274,
                  "column": 9
                },
                {
                  "title": "Logout workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 133,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1183,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1290
                            },
                            "snippet": "  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1290
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:07.364Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1290
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7b65f3ca1525b34196d2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1289,
                  "column": 9
                },
                {
                  "title": "Complete buy workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 183,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 546,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1161
                            },
                            "snippet": "  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1161
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:30.804Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1161
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b25b5b70f2e8bbb229c5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1160,
                  "column": 9
                },
                {
                  "title": "Portfolio review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 187,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 480,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1178
                            },
                            "snippet": "  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1178
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:32.533Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1178
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e9fbd85f349d9b21e28f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1177,
                  "column": 9
                },
                {
                  "title": "Strategy selection workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 193,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 429,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1192
                            },
                            "snippet": "  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1192
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:34.015Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1192
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ba568c990cbeaeabbe29",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1191,
                  "column": 9
                },
                {
                  "title": "Alert configuration workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 197,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 432,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1202
                            },
                            "snippet": "  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1202
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:35.450Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1202
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8453eeac7385fd8ac93f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1201,
                  "column": 9
                },
                {
                  "title": "Performance review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 200,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 421,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1217
                            },
                            "snippet": "  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1217
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:36.860Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1217
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-65ab745011ae39bed1f5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1216,
                  "column": 9
                },
                {
                  "title": "Trade history review",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 203,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 426,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1230
                            },
                            "snippet": "  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1230
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:38.317Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1230
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-00a27890a4c78c3a5dab",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1229,
                  "column": 9
                },
                {
                  "title": "Risk management workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 207,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 531,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1245
                            },
                            "snippet": "  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1245
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:40.123Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1245
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8b8ebc1d20be302dea75",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1244,
                  "column": 9
                },
                {
                  "title": "Account settings workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 212,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 441,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1260
                            },
                            "snippet": "  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1260
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:41.742Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1260
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-19660ee8e8a4e328c9bd",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1259,
                  "column": 9
                },
                {
                  "title": "Market screener workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 217,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 449,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1275
                            },
                            "snippet": "  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1275
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:43.323Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1275
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c84a2ee032faacadadd7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1274,
                  "column": 9
                },
                {
                  "title": "Logout workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 222,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 447,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1290
                            },
                            "snippet": "  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1290
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:44.901Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1290
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fb36812e6cd6ef66ab90",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1289,
                  "column": 9
                },
                {
                  "title": "Complete buy workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 268,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 243,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1161
                            },
                            "snippet": "  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1161
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:57.254Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1161
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-870f40115bcc655db58d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1160,
                  "column": 9
                },
                {
                  "title": "Portfolio review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 269,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 283,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1178
                            },
                            "snippet": "  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1178
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:58.238Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1178
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d94f7ebdb4b0e7c0ea67",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1177,
                  "column": 9
                },
                {
                  "title": "Strategy selection workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 275,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 199,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1192
                            },
                            "snippet": "  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1192
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:59.725Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1192
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-45e1e3d487f3030e3fd2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1191,
                  "column": 9
                },
                {
                  "title": "Alert configuration workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 280,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 222,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1202
                            },
                            "snippet": "  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1202
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:00.626Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1202
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b700daec0c2dad1fc169",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1201,
                  "column": 9
                },
                {
                  "title": "Performance review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 284,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 261,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1217
                            },
                            "snippet": "  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1217
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:01.593Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1217
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-21f17ac41608894367fb",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1216,
                  "column": 9
                },
                {
                  "title": "Trade history review",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 287,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 232,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1230
                            },
                            "snippet": "  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1230
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:02.554Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-Mobile-Chrome/test-failed-1.png"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1230
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-4dba43481195e7d99e9f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1229,
                  "column": 9
                },
                {
                  "title": "Risk management workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 289,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 211,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1245
                            },
                            "snippet": "  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1245
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:03.417Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1245
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-643269534459c7e8f038",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1244,
                  "column": 9
                },
                {
                  "title": "Account settings workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 292,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 239,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1260
                            },
                            "snippet": "  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1260
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:04.311Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1260
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b940e80d6b69795e4c56",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1259,
                  "column": 9
                },
                {
                  "title": "Market screener workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 297,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 287,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1275
                            },
                            "snippet": "  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1275
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:05.620Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1275
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a02b95b57c801bb9fe14",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1274,
                  "column": 9
                },
                {
                  "title": "Logout workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 301,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 262,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1290
                            },
                            "snippet": "  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1290
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:06.951Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1290
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f72fcb02cc2b83e45758",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1289,
                  "column": 9
                },
                {
                  "title": "Complete buy workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 352,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 549,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1161
                            },
                            "snippet": "  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1161
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1159 |   test.describe('8Ô∏è‚É£ User Workflows (10 tests)', () => {\n  1160 |     test('Complete buy workflow', async ({ page }) => {\n> 1161 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1162 |       \n  1163 |       // Look for buy button\n  1164 |       const buyButton = page.locator('button:has-text(\"Buy\"), button:has-text(\"BUY\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1161:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:19.071Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-745a2-tests-Complete-buy-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1161
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b9a6106206099bc9eb7c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1160,
                  "column": 9
                },
                {
                  "title": "Portfolio review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 355,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 469,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1178
                            },
                            "snippet": "  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1178
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1176 |\n  1177 |     test('Portfolio review workflow', async ({ page }) => {\n> 1178 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1179 |       \n  1180 |       // Navigate to portfolio\n  1181 |       const portfolioLink = page.locator('a:has-text(\"Portfolio\"), button:has-text(\"Portfolio\")')\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1178:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:20.627Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-cb8c3-s-Portfolio-review-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1178
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9f46f1864930b848585d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1177,
                  "column": 9
                },
                {
                  "title": "Strategy selection workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 359,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 610,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1192
                            },
                            "snippet": "  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1192
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1190 |\n  1191 |     test('Strategy selection workflow', async ({ page }) => {\n> 1192 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1193 |       \n  1194 |       const strategySelect = page.locator('select, [role=\"combobox\"]').first()\n  1195 |       if (await strategySelect.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1192:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:22.142Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4b68-Strategy-selection-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1192
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b80949effcdcbefbfcdb",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1191,
                  "column": 9
                },
                {
                  "title": "Alert configuration workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 364,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 614,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1202
                            },
                            "snippet": "  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1202
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1200 |\n  1201 |     test('Alert configuration workflow', async ({ page }) => {\n> 1202 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1203 |       \n  1204 |       const alertButton = page.locator('button:has-text(\"Alert\"), button:has-text(\"Notification\")')\n  1205 |       if (await alertButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1202:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:23.823Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-d0b10-lert-configuration-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1202
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a93f3b3f0b252cd91eb4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1201,
                  "column": 9
                },
                {
                  "title": "Performance review workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 369,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 649,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1217
                            },
                            "snippet": "  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1217
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1215 |\n  1216 |     test('Performance review workflow', async ({ page }) => {\n> 1217 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1218 |       \n  1219 |       const performanceLink = page.locator('a:has-text(\"Performance\"), button:has-text(\"Analytics\")')\n  1220 |       if (await performanceLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1217:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:25.507Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-df922-Performance-review-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1217
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-916a900880f247bf9212",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1216,
                  "column": 9
                },
                {
                  "title": "Trade history review",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 372,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 710,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1230
                            },
                            "snippet": "  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1230
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1228 |\n  1229 |     test('Trade history review', async ({ page }) => {\n> 1230 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1231 |       \n  1232 |       const historyLink = page.locator('a:has-text(\"History\"), button:has-text(\"Trades\")')\n  1233 |       if (await historyLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1230:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:27.173Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-0dd6c--tests-Trade-history-review-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1230
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-1e0623dfb56fb90c400b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1229,
                  "column": 9
                },
                {
                  "title": "Risk management workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 377,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 697,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1245
                            },
                            "snippet": "  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1245
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1243 |\n  1244 |     test('Risk management workflow', async ({ page }) => {\n> 1245 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1246 |       \n  1247 |       const riskLink = page.locator('a:has-text(\"Risk\"), button:has-text(\"Risk\")')\n  1248 |       if (await riskLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1245:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:28.936Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b6d6c-ts-Risk-management-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1245
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9048d19bcd14c1ee7c4d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1244,
                  "column": 9
                },
                {
                  "title": "Account settings workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 378,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 764,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1260
                            },
                            "snippet": "  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1260
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1258 |\n  1259 |     test('Account settings workflow', async ({ page }) => {\n> 1260 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1261 |       \n  1262 |       const settingsLink = page.locator('a:has-text(\"Settings\"), button:has-text(\"Settings\")')\n  1263 |       if (await settingsLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1260:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:30.754Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e562a-s-Account-settings-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1260
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fe07df17bc7942720ca1",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1259,
                  "column": 9
                },
                {
                  "title": "Market screener workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 385,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 651,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1275
                            },
                            "snippet": "  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1275
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1273 |\n  1274 |     test('Market screener workflow', async ({ page }) => {\n> 1275 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1276 |       \n  1277 |       const screenerLink = page.locator('a:has-text(\"Screener\"), button:has-text(\"Screen\")')\n  1278 |       if (await screenerLink.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1275:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:32.627Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-98890-ts-Market-screener-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1275
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-71a48141e62d1748a24d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1274,
                  "column": 9
                },
                {
                  "title": "Logout workflow",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 389,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 625,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1290
                            },
                            "snippet": "  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1290
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1288 |\n  1289 |     test('Logout workflow', async ({ page }) => {\n> 1290 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1291 |       \n  1292 |       const logoutButton = page.locator('button:has-text(\"Logout\"), a:has-text(\"Sign out\")')\n  1293 |       if (await logoutButton.count() > 0) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1290:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:34.356Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-b5829-ws-10-tests-Logout-workflow-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1290
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-621eb5556964a4f96dd2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1289,
                  "column": 9
                }
              ]
            },
            {
              "title": "9Ô∏è‚É£ Performance & Load Testing (5 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 1303,
              "column": 8,
              "specs": [
                {
                  "title": "Page load performance",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 43,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 239,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1306
                            },
                            "snippet": "  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1306
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:25.906Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1306
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-141b749d9b25a1c6b065",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1304,
                  "column": 9
                },
                {
                  "title": "API response times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 49,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 372,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:26.950Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f9fcfad8d26b789d4c36",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1316,
                  "column": 9
                },
                {
                  "title": "Concurrent user simulation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 49,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 391,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 42,
                              "line": 1349
                            },
                            "snippet": "  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 42,
                                "line": 1349
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:27.340Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-chromium/test-failed-1.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-chromium/test-failed-3.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-chromium/test-failed-4.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-chromium/test-failed-2.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-chromium/video-1.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-chromium/video-3.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-chromium/video-2.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 42,
                            "line": 1349
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ceb90fdc25edeae5bf45",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1339,
                  "column": 9
                },
                {
                  "title": "Memory leak detection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 55,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 192,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1362
                            },
                            "snippet": "  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1362
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:28.348Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1362
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9c208229b6b72b9e0c59",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1361,
                  "column": 9
                },
                {
                  "title": "Resource loading",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 60,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 221,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1394
                            },
                            "snippet": "  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1394
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:29.159Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1394
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-67e5cbfc76e021702240",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1387,
                  "column": 9
                },
                {
                  "title": "Page load performance",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 142,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1941,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1306
                            },
                            "snippet": "  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1306
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:10.388Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1306
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-22fc246bba0ca8399af8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1304,
                  "column": 9
                },
                {
                  "title": "API response times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 150,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 352,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:14.325Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3e83e717699eeb918982",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1316,
                  "column": 9
                },
                {
                  "title": "Concurrent user simulation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 150,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 2927,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 42,
                              "line": 1349
                            },
                            "snippet": "  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 42,
                                "line": 1349
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:14.692Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-firefox/test-failed-1.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-firefox/test-failed-4.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-firefox/test-failed-3.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-firefox/test-failed-2.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-firefox/video-1.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-firefox/video-3.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-firefox/video-2.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-firefox/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 42,
                            "line": 1349
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-53a1b7f59941e3076478",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1339,
                  "column": 9
                },
                {
                  "title": "Memory leak detection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 157,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1291,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1362
                            },
                            "snippet": "  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1362
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:19.590Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1362
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-8bcfcd3f007d7741ea5f",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1361,
                  "column": 9
                },
                {
                  "title": "Resource loading",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 162,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1279,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1394
                            },
                            "snippet": "  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1394
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:22.632Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1394
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f063ca091935ac3ea82b",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1387,
                  "column": 9
                },
                {
                  "title": "Page load performance",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 228,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 472,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1306
                            },
                            "snippet": "  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1306
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:46.360Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1306
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-88c90824500e2ea7f482",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1304,
                  "column": 9
                },
                {
                  "title": "API response times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 236,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 345,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:47.791Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2ae6f1935c17420c3836",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1316,
                  "column": 9
                },
                {
                  "title": "Concurrent user simulation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 236,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 1362,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 42,
                              "line": 1349
                            },
                            "snippet": "  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 42,
                                "line": 1349
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:48.149Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-webkit/test-failed-2.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-webkit/test-failed-4.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-webkit/test-failed-1.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-webkit/test-failed-3.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-webkit/video-3.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-webkit/video-1.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-webkit/video-2.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 42,
                            "line": 1349
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-691d4264e0e112c48fa0",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1339,
                  "column": 9
                },
                {
                  "title": "Memory leak detection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 244,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 527,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1362
                            },
                            "snippet": "  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1362
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:50.620Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1362
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cfe25ab1e9f03f516ac5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1361,
                  "column": 9
                },
                {
                  "title": "Resource loading",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 249,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 568,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1394
                            },
                            "snippet": "  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1394
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:52.425Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1394
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-6b7dc77b5f3b8e5b9db4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1387,
                  "column": 9
                },
                {
                  "title": "Page load performance",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 304,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 296,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1306
                            },
                            "snippet": "  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1306
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:08.211Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1306
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cbabe3a1f9a37c27329d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1304,
                  "column": 9
                },
                {
                  "title": "API response times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 309,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 346,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:09.597Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3b70feade37a31874b54",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1316,
                  "column": 9
                },
                {
                  "title": "Concurrent user simulation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 309,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 441,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 42,
                              "line": 1349
                            },
                            "snippet": "  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 42,
                                "line": 1349
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:09.958Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Chrome/test-failed-3.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Chrome/test-failed-2.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Chrome/test-failed-4.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Chrome/video-2.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Chrome/video-3.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Chrome/video.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Chrome/video-1.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 42,
                            "line": 1349
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-124781df175e6604c5d5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1339,
                  "column": 9
                },
                {
                  "title": "Memory leak detection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 318,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 289,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1362
                            },
                            "snippet": "  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1362
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:11.683Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1362
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3388aa2aff8b9c2136d7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1361,
                  "column": 9
                },
                {
                  "title": "Resource loading",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 324,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 322,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1394
                            },
                            "snippet": "  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1394
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:13.075Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1394
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-02fd1632293a070eed72",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1387,
                  "column": 9
                },
                {
                  "title": "Page load performance",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 395,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 674,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1306
                            },
                            "snippet": "  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1306
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1304 |     test('Page load performance', async ({ page }) => {\n  1305 |       const startTime = Date.now()\n> 1306 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1307 |       const loadTime = Date.now() - startTime\n  1308 |       \n  1309 |       // Page should load within 5 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1306:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:36.054Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-47d19-tests-Page-load-performance-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1306
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-a5b654d5021a92f11cd5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1304,
                  "column": 9
                },
                {
                  "title": "API response times",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 399,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 405,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:37.807Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ad036c461ac454114655",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1316,
                  "column": 9
                },
                {
                  "title": "Concurrent user simulation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 399,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 1129,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 42,
                              "line": 1349
                            },
                            "snippet": "  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 42,
                                "line": 1349
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1347 |       \n  1348 |       // Load all pages simultaneously\n> 1349 |       await Promise.all(pages.map(p => p.goto(FRONTEND_URL)))\n       |                                          ^\n  1350 |       \n  1351 |       // Check each page for fake data\n  1352 |       for (const p of pages) {\n    at map (/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:42)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1349:31"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:38.226Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Safari/test-failed-2.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Safari/test-failed-4.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Safari/test-failed-3.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Safari/video-3.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Safari/video-2.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Safari/video.webm"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-c4bf6--Concurrent-user-simulation-Mobile-Safari/video-1.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 42,
                            "line": 1349
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-24f777e40dc0dbd55921",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1339,
                  "column": 9
                },
                {
                  "title": "Memory leak detection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 410,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 486,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1362
                            },
                            "snippet": "  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1362
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1360 |\n  1361 |     test('Memory leak detection', async ({ page }) => {\n> 1362 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1363 |       \n  1364 |       // Perform multiple actions\n  1365 |       for (let i = 0; i < 5; i++) {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1362:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:40.318Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-8e192-tests-Memory-leak-detection-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1362
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3b8dd9f59eb4f0723c09",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1361,
                  "column": 9
                },
                {
                  "title": "Resource loading",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 416,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 444,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1394
                            },
                            "snippet": "  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1394
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1392 |       })\n  1393 |       \n> 1394 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1395 |       await page.waitForLoadState('networkidle')\n  1396 |       \n  1397 |       // Check all loaded resources for test/demo indicators\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1394:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:41.853Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-ad8e5-ng-5-tests-Resource-loading-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1394
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-c8bbb3b7612a7d4fe10c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1387,
                  "column": 9
                }
              ]
            },
            {
              "title": "üîü Security & Compliance (5 tests)",
              "file": "100-complete-coverage.spec.ts",
              "line": 1404,
              "column": 8,
              "specs": [
                {
                  "title": "No sensitive data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 328,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:30.177Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-bf255021ce6c2f6c39c2",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1405,
                  "column": 9
                },
                {
                  "title": "HTTPS enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 191,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:30.520Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-718bc4a19fc197204d3e",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1421,
                  "column": 9
                },
                {
                  "title": "XSS protection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 156,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1435
                            },
                            "snippet": "  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1435
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:30.834Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1435
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3cad2f6b409635569f92",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1434,
                  "column": 9
                },
                {
                  "title": "CORS policy",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 73,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 331,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:31.677Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0fa6dc56f97e29d19af4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1452,
                  "column": 9
                },
                {
                  "title": "Rate limiting enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 73,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 405,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:58:32.020Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-2863f5294f9975b4b520",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1470,
                  "column": 9
                },
                {
                  "title": "No sensitive data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 172,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 336,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:25.555Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-cdd05c56969ed237fa51",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1405,
                  "column": 9
                },
                {
                  "title": "HTTPS enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 172,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 1372,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:25.903Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b17738ce2a74ca5c2f0c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1421,
                  "column": 9
                },
                {
                  "title": "XSS protection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 172,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 625,
                          "error": {
                            "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1435
                            },
                            "snippet": "  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1435
                              },
                              "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:28.301Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-firefox/video.webm"
                            },
                            {
                              "name": "error-context",
                              "contentType": "text/markdown",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-firefox/error-context.md"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1435
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-e665784806f00bd69340",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1434,
                  "column": 9
                },
                {
                  "title": "CORS policy",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 180,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 343,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:29.673Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-d6c3f44cb0af38985105",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1452,
                  "column": 9
                },
                {
                  "title": "Rate limiting enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 180,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 357,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:30.029Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f3db15b982256ef51694",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1470,
                  "column": 9
                },
                {
                  "title": "No sensitive data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 254,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 332,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:53.875Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b6a78af92b54015d7031",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1405,
                  "column": 9
                },
                {
                  "title": "HTTPS enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 254,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 463,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:54.220Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-ea39b48662cb7ade83bc",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1421,
                  "column": 9
                },
                {
                  "title": "XSS protection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 254,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 278,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1435
                            },
                            "snippet": "  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1435
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:54.916Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1435
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-16ed8b784f0539da3ee4",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1434,
                  "column": 9
                },
                {
                  "title": "CORS policy",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 264,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 339,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:56.011Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-0660d0d344e1df542791",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1452,
                  "column": 9
                },
                {
                  "title": "Rate limiting enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 264,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 330,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-04T23:59:56.362Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-14a8d8f29e43644587f5",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1470,
                  "column": 9
                },
                {
                  "title": "No sensitive data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 331,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 337,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:14.623Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-7bb580097dbdd451e0cb",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1405,
                  "column": 9
                },
                {
                  "title": "HTTPS enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 331,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 172,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:14.974Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-fa38b3bbaf1a3f113bc6",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1421,
                  "column": 9
                },
                {
                  "title": "XSS protection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 331,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 228,
                          "error": {
                            "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1435
                            },
                            "snippet": "  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1435
                              },
                              "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:15.307Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1435
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-302513c6ecf0cd0ba657",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1434,
                  "column": 9
                },
                {
                  "title": "CORS policy",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 338,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 355,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:16.339Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-3894d60a47836d62a9b8",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1452,
                  "column": 9
                },
                {
                  "title": "Rate limiting enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 338,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 335,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:16.707Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-9438162ee3d20467920d",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1470,
                  "column": 9
                },
                {
                  "title": "No sensitive data in responses",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 421,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 361,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:43.568Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-f14190b0108e54070070",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1405,
                  "column": 9
                },
                {
                  "title": "HTTPS enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 421,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 481,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:43.943Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-679e99ceb05c659d184c",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1421,
                  "column": 9
                },
                {
                  "title": "XSS protection",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 421,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 380,
                          "error": {
                            "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                            "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18",
                            "location": {
                              "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                              "column": 18,
                              "line": 1435
                            },
                            "snippet": "  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                                "column": 18,
                                "line": 1435
                              },
                              "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  1433 |\n  1434 |     test('XSS protection', async ({ page }) => {\n> 1435 |       await page.goto(FRONTEND_URL)\n       |                  ^\n  1436 |       \n  1437 |       // Try to inject script\n  1438 |       const searchInput = page.locator('input[type=\"search\"], input[type=\"text\"]').first()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts:1435:18"
                            }
                          ],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:44.826Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/100-complete-coverage-üéØ-1-e7c48-ance-5-tests-XSS-protection-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/100-complete-coverage.spec.ts",
                            "column": 18,
                            "line": 1435
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-50d3dcb2d2d920cdfe34",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1434,
                  "column": 9
                },
                {
                  "title": "CORS policy",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 426,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 329,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:46.019Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-73695bb13f69c81c67d3",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1452,
                  "column": 9
                },
                {
                  "title": "Rate limiting enforcement",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 120000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 426,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 339,
                          "errors": [],
                          "stdout": [
                            {
                              "text": "\n  ‚úÖ 100% FUNCTIONALITY TEST COVERAGE COMPLETE\n  ================================================\n  Total Categories: 10\n  Total Tests: 100\n  \n  Coverage Areas:\n  1. Service Health & Infrastructure: 12 tests\n  2. Frontend Components: 15 tests  \n  3. API Endpoints: 20 tests\n  4. WebSocket Real-Time: 10 tests\n  5. Trading Functionality: 15 tests\n  6. Data Validation: 10 tests\n  7. Error Handling: 10 tests\n  8. User Workflows: 10 tests\n  9. Performance Testing: 5 tests\n  10. Security & Compliance: 5 tests\n  \n  ‚ùå ZERO TOLERANCE FOR FAKE DATA ENFORCED\n  ================================================\n  \n"
                            }
                          ],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-05T00:00:46.364Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "81d9e460d499af3ab511-b9d6970eb92ff1c22de7",
                  "file": "100-complete-coverage.spec.ts",
                  "line": 1470,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "comprehensive-real-data.spec.ts",
      "file": "comprehensive-real-data.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Comprehensive Real Data Testing Suite",
          "file": "comprehensive-real-data.spec.ts",
          "line": 74,
          "column": 6,
          "specs": [
            {
              "title": "Core Service Health Checks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 3667,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Core Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:16.844Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-e5d18a3df13893c78e38",
              "file": "comprehensive-real-data.spec.ts",
              "line": 106,
              "column": 7
            },
            {
              "title": "Critical Data Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 2454,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Critical Data Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 0\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 20\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• positions - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• signals - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9003\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9003/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• risk - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9004\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9004/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• market - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9005\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9005/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• historical - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9006\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9006/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• notifications - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9008\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9008/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• config - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9009\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9009/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• health - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9010\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9010/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• training - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9011\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9011/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Positions List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Portfolio Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/portfolio/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Orders List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Account Info: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Analytics Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Performance Metrics: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/performance\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Account: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Positions: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:20.525Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-7426799e228fc588906a",
              "file": "comprehensive-real-data.spec.ts",
              "line": 173,
              "column": 7
            },
            {
              "title": "API Gateway Routing",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 14,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüö™ Testing API Gateway Routing...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:21.544Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-00bb596b46669cec58cc",
              "file": "comprehensive-real-data.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "Error Handling - No Dummy Fallbacks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 934,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüõ°Ô∏è Testing Error Handling...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (3ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:21.569Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-da6380e9c92bbb8d8d08",
              "file": "comprehensive-real-data.spec.ts",
              "line": 336,
              "column": 7
            },
            {
              "title": "Data Structure Consistency",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 304,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüèóÔ∏è Testing Data Structure Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:22.514Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-58be5ad01dcd539c9629",
              "file": "comprehensive-real-data.spec.ts",
              "line": 388,
              "column": 7
            },
            {
              "title": "Performance and Response Times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 912,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 4\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (3ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "üí• data-structure - Structure Tests: Structure validation failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9001/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9002/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9007/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:22.827Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-6c9c618cdd38412ca768",
              "file": "comprehensive-real-data.spec.ts",
              "line": 471,
              "column": 7
            },
            {
              "title": "Core Service Health Checks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 3790,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Core Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:39.701Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-593f27c26952cf3d507a",
              "file": "comprehensive-real-data.spec.ts",
              "line": 106,
              "column": 7
            },
            {
              "title": "Critical Data Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 2479,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Critical Data Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 0\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 20\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• positions - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• signals - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9003\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9003/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• risk - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9004\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9004/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• market - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9005\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9005/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• historical - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9006\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9006/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• notifications - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9008\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9008/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• config - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9009\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9009/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• health - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9010\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9010/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• training - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9011\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9011/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Positions List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Portfolio Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/portfolio/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Orders List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Account Info: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Analytics Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Performance Metrics: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/performance\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Account: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Positions: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:43.571Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-cb6762731ad9f47062be",
              "file": "comprehensive-real-data.spec.ts",
              "line": 173,
              "column": 7
            },
            {
              "title": "API Gateway Routing",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 456,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüö™ Testing API Gateway Routing...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:46.100Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-443cb095b03e278fe715",
              "file": "comprehensive-real-data.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "Error Handling - No Dummy Fallbacks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 915,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüõ°Ô∏è Testing Error Handling...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 20\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• positions - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• signals - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9003\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9003/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• risk - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9004\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9004/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• market - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9005\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9005/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• historical - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9006\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9006/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• notifications - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9008\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9008/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• config - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9009\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9009/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• health - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9010\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9010/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• training - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9011\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9011/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Positions List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Portfolio Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/portfolio/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Orders List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Account Info: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Analytics Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Performance Metrics: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/performance\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Account: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Positions: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (443ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (3ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:46.570Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-85222525881155f8e251",
              "file": "comprehensive-real-data.spec.ts",
              "line": 336,
              "column": 7
            },
            {
              "title": "Data Structure Consistency",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 318,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüèóÔ∏è Testing Data Structure Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:47.496Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-7d97a1acc00d4b6d14ee",
              "file": "comprehensive-real-data.spec.ts",
              "line": 388,
              "column": 7
            },
            {
              "title": "Performance and Response Times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 930,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 24\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• positions - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• signals - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9003\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9003/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• risk - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9004\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9004/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• market - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9005\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9005/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• historical - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9006\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9006/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• notifications - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9008\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9008/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• config - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9009\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9009/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• health - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9010\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9010/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• training - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9011\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9011/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Positions List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Portfolio Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/portfolio/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Orders List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Account Info: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Analytics Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Performance Metrics: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/performance\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Account: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Positions: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (443ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (3ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "üí• data-structure - Structure Tests: Structure validation failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9001/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9002/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9007/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:47.828Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-30c1c33bd58298e23ed8",
              "file": "comprehensive-real-data.spec.ts",
              "line": 471,
              "column": 7
            },
            {
              "title": "Core Service Health Checks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 188,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 3697,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Core Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:33.210Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-2ce587b2843184bb4092",
              "file": "comprehensive-real-data.spec.ts",
              "line": 106,
              "column": 7
            },
            {
              "title": "Critical Data Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 188,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 2512,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Critical Data Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 0\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 20\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• positions - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• signals - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9003\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9003/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• risk - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9004\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9004/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• market - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9005\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9005/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• historical - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9006\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9006/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• notifications - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9008\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9008/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• config - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9009\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9009/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• health - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9010\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9010/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• training - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9011\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9011/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Positions List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Portfolio Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/portfolio/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Orders List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Account Info: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Analytics Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Performance Metrics: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/performance\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Account: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Positions: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:36.918Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-0e0aaeef78ba79ff9e81",
              "file": "comprehensive-real-data.spec.ts",
              "line": 173,
              "column": 7
            },
            {
              "title": "API Gateway Routing",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 195,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 10,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüö™ Testing API Gateway Routing...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:35.277Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-e4df998ee54abfdc59a8",
              "file": "comprehensive-real-data.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "Error Handling - No Dummy Fallbacks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 195,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 916,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüõ°Ô∏è Testing Error Handling...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:35.296Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-f4f1109fe34eed349d1b",
              "file": "comprehensive-real-data.spec.ts",
              "line": 336,
              "column": 7
            },
            {
              "title": "Data Structure Consistency",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 195,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 310,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüèóÔ∏è Testing Data Structure Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:36.222Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-61434bcaef1b41d4ae7e",
              "file": "comprehensive-real-data.spec.ts",
              "line": 388,
              "column": 7
            },
            {
              "title": "Performance and Response Times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 195,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 910,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 4\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "üí• data-structure - Structure Tests: Structure validation failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9001/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9002/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9007/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:36.544Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-773aaf2ccd7a7234d934",
              "file": "comprehensive-real-data.spec.ts",
              "line": 471,
              "column": 7
            },
            {
              "title": "Core Service Health Checks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 276,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 3686,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Core Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:00.605Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-9ae382d08e47c088aa7a",
              "file": "comprehensive-real-data.spec.ts",
              "line": 106,
              "column": 7
            },
            {
              "title": "Critical Data Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 276,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 2450,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Critical Data Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 0\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 20\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• positions - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• signals - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9003\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9003/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• risk - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9004\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9004/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• market - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9005\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9005/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• historical - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9006\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9006/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• notifications - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9008\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9008/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• config - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9009\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9009/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• health - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9010\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9010/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• training - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9011\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9011/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Positions List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Portfolio Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/portfolio/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Orders List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Account Info: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Analytics Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Performance Metrics: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/performance\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Account: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Positions: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:04.302Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-9071cd9f32b173424dbe",
              "file": "comprehensive-real-data.spec.ts",
              "line": 173,
              "column": 7
            },
            {
              "title": "API Gateway Routing",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 285,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 13,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüö™ Testing API Gateway Routing...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:02.833Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-0a86ac58660d9bd95378",
              "file": "comprehensive-real-data.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "Error Handling - No Dummy Fallbacks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 285,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 920,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüõ°Ô∏è Testing Error Handling...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:02.856Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-36326fdef24c97e18933",
              "file": "comprehensive-real-data.spec.ts",
              "line": 336,
              "column": 7
            },
            {
              "title": "Data Structure Consistency",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 285,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 305,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüèóÔ∏è Testing Data Structure Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:03.786Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-4bbdfc7cb1567de0a032",
              "file": "comprehensive-real-data.spec.ts",
              "line": 388,
              "column": 7
            },
            {
              "title": "Performance and Response Times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 285,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 934,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 4\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "üí• data-structure - Structure Tests: Structure validation failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9001/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9002/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9007/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:04.100Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-68c3c039155f91c77c59",
              "file": "comprehensive-real-data.spec.ts",
              "line": 471,
              "column": 7
            },
            {
              "title": "Core Service Health Checks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 361,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 4047,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Core Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:23.641Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-ac43cf0edf6ef05b5c2a",
              "file": "comprehensive-real-data.spec.ts",
              "line": 106,
              "column": 7
            },
            {
              "title": "Critical Data Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 361,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 2448,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Critical Data Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 0\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 20\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• positions - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• signals - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9003\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9003/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• risk - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9004\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9004/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• market - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9005\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9005/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• historical - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9006\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9006/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• notifications - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9008\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9008/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• config - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9009\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9009/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• health - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9010\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9010/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• training - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9011\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9011/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - /health: Connection failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Positions List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• positions - Portfolio Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/portfolio/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Orders List: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• trading - Account Info: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Analytics Summary: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• analytics - Performance Metrics: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/performance\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Account: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• crypto - Crypto Positions: Request failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:27.732Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-af9c5a239d3585479191",
              "file": "comprehensive-real-data.spec.ts",
              "line": 173,
              "column": 7
            },
            {
              "title": "API Gateway Routing",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 371,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 10,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüö™ Testing API Gateway Routing...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:27.498Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-6811a5be705f320ca951",
              "file": "comprehensive-real-data.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "Error Handling - No Dummy Fallbacks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 371,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 942,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüõ°Ô∏è Testing Error Handling...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:27.518Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-2ea7e7a5df80d5956bcc",
              "file": "comprehensive-real-data.spec.ts",
              "line": 336,
              "column": 7
            },
            {
              "title": "Data Structure Consistency",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 371,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 326,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Comprehensive Real Data Testing Suite\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüèóÔ∏è Testing Data Structure Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:28.473Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-d61db9767c355ff5e04d",
              "file": "comprehensive-real-data.spec.ts",
              "line": 388,
              "column": 7
            },
            {
              "title": "Performance and Response Times",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 371,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1058,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 4\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/positions: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/orders: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/account: Gateway routing working (2ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/performance: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ api-gateway - /api/crypto/positions: Gateway routing working (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è api-gateway - /api/crypto/account: Gateway returned 404\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Non-existent Position: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Order ID: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "‚úÖ error-handling - Invalid Analytics Endpoint: Correctly fails without dummy fallback\n"
                        },
                        {
                          "text": "üí• data-structure - Structure Tests: Structure validation failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9001/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9002/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9002\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9002/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        },
                        {
                          "text": "üí• performance - localhost:9007/health: Performance test failed: Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:28.810Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b4a7e86b9d72c3b2c1c5-c20721837c6872b17d91",
              "file": "comprehensive-real-data.spec.ts",
              "line": 471,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "frontend-integration.spec.ts",
      "file": "frontend-integration.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Frontend Integration Tests",
          "file": "frontend-integration.spec.ts",
          "line": 10,
          "column": 6,
          "specs": [
            {
              "title": "Dashboard loads with real account data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 296,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 14
                        },
                        "snippet": "  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 14
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:22.993Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 14
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-71091299836e4348046c",
              "file": "frontend-integration.spec.ts",
              "line": 12,
              "column": 7
            },
            {
              "title": "Crypto mode shows crypto-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 152,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 32
                        },
                        "snippet": "  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 32
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:23.751Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 32
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-ca960f0bca794290211c",
              "file": "frontend-integration.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "Stocks mode shows stock-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 37,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 232,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 47
                        },
                        "snippet": "  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 47
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:24.669Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 47
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-e7771e9fe199670c269e",
              "file": "frontend-integration.spec.ts",
              "line": 46,
              "column": 7
            },
            {
              "title": "Position data loads without dummy markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 215,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 62
                        },
                        "snippet": "  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 62
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:25.036Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 62
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-57e2dbfc1e69cfc5891d",
              "file": "frontend-integration.spec.ts",
              "line": 61,
              "column": 7
            },
            {
              "title": "Auto-trading controls work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 42,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 288,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 85
                        },
                        "snippet": "  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 85
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:25.827Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 85
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-25b322b29bf1ccdf9ebc",
              "file": "frontend-integration.spec.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "Performance metrics display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 44,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 260,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 97
                        },
                        "snippet": "   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 97
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:25.942Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 97
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-d6c2b2a19bd3a72eeaeb",
              "file": "frontend-integration.spec.ts",
              "line": 96,
              "column": 7
            },
            {
              "title": "Charts and visual elements load",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 41,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 217,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 111
                        },
                        "snippet": "  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 111
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:25.885Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 111
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-79c369669aeef96eb775",
              "file": "frontend-integration.spec.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "No console errors during normal operation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 46,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 194,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 135
                        },
                        "snippet": "  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 135
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:26.718Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 135
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-6d2c99558291089c9bd1",
              "file": "frontend-integration.spec.ts",
              "line": 125,
              "column": 7
            },
            {
              "title": "Service status indicators work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 47,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 199,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 165
                        },
                        "snippet": "  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = ["
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 165
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = [\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:26.832Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 165
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-ca228447ca4e37ad1c95",
              "file": "frontend-integration.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "Dashboard loads with real account data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 110,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1302,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 14
                        },
                        "snippet": "  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 14
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:48.639Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 14
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-450b16364c3f6647b57e",
              "file": "frontend-integration.spec.ts",
              "line": 12,
              "column": 7
            },
            {
              "title": "Crypto mode shows crypto-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1322,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 32
                        },
                        "snippet": "  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 32
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:48.775Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 32
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-6b95a59c152e4f425082",
              "file": "frontend-integration.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "Stocks mode shows stock-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 114,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1592,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 47
                        },
                        "snippet": "  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 47
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:51.732Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 47
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-5047a53805064c4c5b4f",
              "file": "frontend-integration.spec.ts",
              "line": 46,
              "column": 7
            },
            {
              "title": "Position data loads without dummy markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 115,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1475,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 62
                        },
                        "snippet": "  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 62
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:52.140Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 62
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-d1007ea56956eec8c6a3",
              "file": "frontend-integration.spec.ts",
              "line": 61,
              "column": 7
            },
            {
              "title": "Auto-trading controls work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 119,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1337,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 85
                        },
                        "snippet": "  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 85
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:55.384Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 85
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-f5e02dffd3c9f54edb79",
              "file": "frontend-integration.spec.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "Performance metrics display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 120,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1638,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 97
                        },
                        "snippet": "   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 97
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:55.774Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 97
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-30be8c7bbefe59e162c0",
              "file": "frontend-integration.spec.ts",
              "line": 96,
              "column": 7
            },
            {
              "title": "Charts and visual elements load",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 124,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1805,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 111
                        },
                        "snippet": "  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 111
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:59.286Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 111
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-e443a3a5c7d1d879daad",
              "file": "frontend-integration.spec.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "No console errors during normal operation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 125,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1862,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 135
                        },
                        "snippet": "  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 135
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:00.369Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 135
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-3b8ba333705b64a67ade",
              "file": "frontend-integration.spec.ts",
              "line": 125,
              "column": 7
            },
            {
              "title": "Service status indicators work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 129,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1792,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 165
                        },
                        "snippet": "  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = ["
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 165
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = [\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:03.873Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 165
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-3458943e830e8ff2bfe2",
              "file": "frontend-integration.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "Dashboard loads with real account data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 195,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 524,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 14
                        },
                        "snippet": "  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 14
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:37.466Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 14
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-52272750795d420fc28e",
              "file": "frontend-integration.spec.ts",
              "line": 12,
              "column": 7
            },
            {
              "title": "Crypto mode shows crypto-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 206,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 744,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 32
                        },
                        "snippet": "  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 32
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:38.935Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 32
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-38d4da00c92c7109ec8f",
              "file": "frontend-integration.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "Stocks mode shows stock-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 188,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 453,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 47
                        },
                        "snippet": "  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 47
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:39.512Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 47
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-740ca1f361c5cb9905fc",
              "file": "frontend-integration.spec.ts",
              "line": 46,
              "column": 7
            },
            {
              "title": "Position data loads without dummy markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 209,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 612,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 62
                        },
                        "snippet": "  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 62
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:40.687Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 62
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-630eb7a9920d785594fa",
              "file": "frontend-integration.spec.ts",
              "line": 61,
              "column": 7
            },
            {
              "title": "Auto-trading controls work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 211,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 467,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 85
                        },
                        "snippet": "  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 85
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:41.304Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 85
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-d388341307de61016193",
              "file": "frontend-integration.spec.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "Performance metrics display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 215,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 597,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 97
                        },
                        "snippet": "   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 97
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:42.350Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 97
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-35cb84b62437d0ccd5f5",
              "file": "frontend-integration.spec.ts",
              "line": 96,
              "column": 7
            },
            {
              "title": "Charts and visual elements load",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 216,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 516,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 111
                        },
                        "snippet": "  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 111
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:42.926Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 111
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-dcafc277099fa78ff83b",
              "file": "frontend-integration.spec.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "No console errors during normal operation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 213,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 135
                        },
                        "snippet": "  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 135
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:43.427Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 135
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-b9ddb8f386804fe5c028",
              "file": "frontend-integration.spec.ts",
              "line": 125,
              "column": 7
            },
            {
              "title": "Service status indicators work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 218,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 562,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 165
                        },
                        "snippet": "  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = ["
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 165
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = [\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:44.022Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 165
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-95c2bce95c23f28d437e",
              "file": "frontend-integration.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "Dashboard loads with real account data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 285,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 185,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 14
                        },
                        "snippet": "  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 14
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:05.048Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 14
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-c2fa0d39ed4fee4e966b",
              "file": "frontend-integration.spec.ts",
              "line": 12,
              "column": 7
            },
            {
              "title": "Crypto mode shows crypto-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 298,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 193,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 32
                        },
                        "snippet": "  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 32
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:06.319Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 32
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-22e8f0e08c40150fa2ac",
              "file": "frontend-integration.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "Stocks mode shows stock-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 276,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 338,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 47
                        },
                        "snippet": "  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 47
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:06.770Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 47
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-d234fabe8beacc373210",
              "file": "frontend-integration.spec.ts",
              "line": 46,
              "column": 7
            },
            {
              "title": "Position data loads without dummy markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 302,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 215,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 62
                        },
                        "snippet": "  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 62
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:07.705Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 62
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-59b2ac9f7b8815bc4580",
              "file": "frontend-integration.spec.ts",
              "line": 61,
              "column": 7
            },
            {
              "title": "Auto-trading controls work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 300,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 178,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 85
                        },
                        "snippet": "  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 85
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:07.723Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 85
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-dd4547f80bdc4d8a1bf8",
              "file": "frontend-integration.spec.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "Performance metrics display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 305,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 310,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 97
                        },
                        "snippet": "   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 97
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:08.208Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 97
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-c52b28aad905ad6e1545",
              "file": "frontend-integration.spec.ts",
              "line": 96,
              "column": 7
            },
            {
              "title": "Charts and visual elements load",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 306,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 219,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 111
                        },
                        "snippet": "  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 111
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:08.790Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 111
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-bd2ee139fbe1478cdffc",
              "file": "frontend-integration.spec.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "No console errors during normal operation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 307,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 230,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 135
                        },
                        "snippet": "  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 135
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:08.966Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 135
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-333248a185ceee4aa81b",
              "file": "frontend-integration.spec.ts",
              "line": 125,
              "column": 7
            },
            {
              "title": "Service status indicators work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 310,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 248,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 165
                        },
                        "snippet": "  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = ["
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 165
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = [\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:09.578Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 165
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-c62228200068d2c87439",
              "file": "frontend-integration.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "Dashboard loads with real account data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 371,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 451,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 14
                        },
                        "snippet": "  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 14
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  12 |   test('Dashboard loads with real account data', async ({ page }) => {\n  13 |     // Navigate to the main dashboard\n> 14 |     await page.goto(FRONTEND_URL);\n     |                ^\n  15 |     \n  16 |     // Wait for the main dashboard to load\n  17 |     await page.waitForSelector('text=/Trading|Dashboard/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:14:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:29.904Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-3b14a-oads-with-real-account-data-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 14
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-df0d2ef2b9ea9023905c",
              "file": "frontend-integration.spec.ts",
              "line": 12,
              "column": 7
            },
            {
              "title": "Crypto mode shows crypto-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 361,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 471,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 32
                        },
                        "snippet": "  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 32
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  30 |\n  31 |   test('Crypto mode shows crypto-specific data', async ({ page }) => {\n> 32 |     await page.goto(FRONTEND_URL);\n     |                ^\n  33 |     \n  34 |     // Wait for page load and click crypto mode\n  35 |     await page.waitForSelector('button:has-text(\"Crypto\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:32:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:30.228Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-ff1c6--shows-crypto-specific-data-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 32
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-2df3af3e37fb6f756ae3",
              "file": "frontend-integration.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "Stocks mode shows stock-specific data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 381,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 530,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 47
                        },
                        "snippet": "  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 47
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  45 |\n  46 |   test('Stocks mode shows stock-specific data', async ({ page }) => {\n> 47 |     await page.goto(FRONTEND_URL);\n     |                ^\n  48 |     \n  49 |     // Wait for page load and click stocks mode\n  50 |     await page.waitForSelector('button:has-text(\"Stocks\")', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:47:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:31.588Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e2201-e-shows-stock-specific-data-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 47
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-167f2a9f6b083ea8b8a6",
              "file": "frontend-integration.spec.ts",
              "line": 46,
              "column": 7
            },
            {
              "title": "Position data loads without dummy markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 382,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 431,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 62
                        },
                        "snippet": "  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 62
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  60 |\n  61 |   test('Position data loads without dummy markers', async ({ page }) => {\n> 62 |     await page.goto(FRONTEND_URL);\n     |                ^\n  63 |     \n  64 |     // Wait for positions to load\n  65 |     await page.waitForLoadState('networkidle', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:62:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:31.902Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-a23f2-loads-without-dummy-markers-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 62
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-ed0d8e7b8acae06b6653",
              "file": "frontend-integration.spec.ts",
              "line": 61,
              "column": 7
            },
            {
              "title": "Auto-trading controls work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 386,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 454,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 85
                        },
                        "snippet": "  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 85
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  83 |\n  84 |   test('Auto-trading controls work', async ({ page }) => {\n> 85 |     await page.goto(FRONTEND_URL);\n     |                ^\n  86 |     \n  87 |     // Look for auto-trading toggle button\n  88 |     const autoTradingButton = page.locator('button:has-text(\"Auto-Trading\"), button:has-text(\"Scalping\")');\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:85:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:33.339Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-e9964--Auto-trading-controls-work-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 85
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-acb192e94cc5dd7d4160",
              "file": "frontend-integration.spec.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "Performance metrics display",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 387,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 436,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 97
                        },
                        "snippet": "   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 97
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n   95 |\n   96 |   test('Performance metrics display', async ({ page }) => {\n>  97 |     await page.goto(FRONTEND_URL);\n      |                ^\n   98 |     \n   99 |     // Wait for performance metrics to load\n  100 |     await page.waitForSelector('text=/Win Rate|P&L|Portfolio/', { timeout: 15000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:97:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:33.624Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-5958a-Performance-metrics-display-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 97
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-bf486f96476d83a8fec4",
              "file": "frontend-integration.spec.ts",
              "line": 96,
              "column": 7
            },
            {
              "title": "Charts and visual elements load",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 391,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 557,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 111
                        },
                        "snippet": "  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 111
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  109 |\n  110 |   test('Charts and visual elements load', async ({ page }) => {\n> 111 |     await page.goto(FRONTEND_URL);\n      |                ^\n  112 |     \n  113 |     // Wait for chart container\n  114 |     await page.waitForSelector('[data-testid=\"symbol-select\"], select', { timeout: 10000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:111:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:34.941Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-d46dd-ts-and-visual-elements-load-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 111
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-e9e8189a036f81c6bb64",
              "file": "frontend-integration.spec.ts",
              "line": 110,
              "column": 7
            },
            {
              "title": "No console errors during normal operation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 392,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 440,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 135
                        },
                        "snippet": "  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 135
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  133 |     });\n  134 |     \n> 135 |     await page.goto(FRONTEND_URL);\n      |                ^\n  136 |     \n  137 |     // Wait for page to fully load\n  138 |     await page.waitForLoadState('networkidle', { timeout: 20000 });\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:135:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:35.311Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-b5dae-ors-during-normal-operation-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 135
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-0f1aa49adb3bb30aed7c",
              "file": "frontend-integration.spec.ts",
              "line": 125,
              "column": 7
            },
            {
              "title": "Service status indicators work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 396,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 530,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                          "column": 16,
                          "line": 165
                        },
                        "snippet": "  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = ["
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                            "column": 16,
                            "line": 165
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  163 |\n  164 |   test('Service status indicators work', async ({ page }) => {\n> 165 |     await page.goto(FRONTEND_URL);\n      |                ^\n  166 |     \n  167 |     // Look for service status indicators\n  168 |     const statusIndicators = [\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts:165:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:36.658Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/frontend-integration-Front-cfa89-vice-status-indicators-work-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/frontend-integration.spec.ts",
                        "column": 16,
                        "line": 165
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "894b7b7e39932ac2a900-de2bb69d7d8b8fbf92f1",
              "file": "frontend-integration.spec.ts",
              "line": 164,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "no-dummy-data.spec.ts",
      "file": "no-dummy-data.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "No Dummy Data Policy Enforcement",
          "file": "no-dummy-data.spec.ts",
          "line": 41,
          "column": 6,
          "specs": [
            {
              "title": "Frontend should not contain any fallback data providers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 48,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 181,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 50
                        },
                        "snippet": "  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 50
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:26.930Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 50
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-df12bf41c77fc833ca8c",
              "file": "no-dummy-data.spec.ts",
              "line": 48,
              "column": 7
            },
            {
              "title": "Crypto service health check should not contain demo markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 53,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 321,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:27.900Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-f68ff1fe77c8cfc90639",
              "file": "no-dummy-data.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "/api/positions should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 58,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:28.657Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-a897938a528631879a26",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/orders should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 63,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 319,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:29.498Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-2b2ab21ac1e86ce36b12",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/signals should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 51,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 320,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:27.726Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-8e3075c1bc1bcd561cf1",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/bars/BTCUSD?timeframe=5Min&limit=10 should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 56,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 324,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:28.518Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-759bb3f9fab739cfdf2b",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/account should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 61,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:29.381Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-703a36c2e48af53a4b3f",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/metrics should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 65,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 318,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:30.152Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-700b08632036e1502ed3",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/history should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 52,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 353,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:27.854Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-aced33fc70504bae46b2",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/pnl-chart should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 57,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 324,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:28.658Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-efb9cb497f2d220b8550",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/strategies should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 334,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:29.489Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-b7c32eec94cd199b2d44",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/assets should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 67,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 317,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:30.258Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-430044dc3a063ee8386b",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "Frontend UI should handle service errors gracefully without dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 54,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 220,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 153
                        },
                        "snippet": "  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 153
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:27.962Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 153
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-26b8357ab086bd965aa4",
              "file": "no-dummy-data.spec.ts",
              "line": 151,
              "column": 7
            },
            {
              "title": "WebSocket connections should not send dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 59,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 275,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 192
                        },
                        "snippet": "  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 192
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:28.758Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 192
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-967b3a4b9ce61616c221",
              "file": "no-dummy-data.spec.ts",
              "line": 176,
              "column": 7
            },
            {
              "title": "API client should throw errors instead of using fallbacks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 64,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 192,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 206
                        },
                        "snippet": "  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 206
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:29.790Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 206
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-4a18b0435c1c5c4b2515",
              "file": "no-dummy-data.spec.ts",
              "line": 204,
              "column": 7
            },
            {
              "title": "Crypto service configuration should enforce real data only",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 71,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 338,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:31.174Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-2dcc86446159fb117c10",
              "file": "no-dummy-data.spec.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "Frontend should not contain any fallback data providers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 130,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1738,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 50
                        },
                        "snippet": "  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 50
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:04.483Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 50
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-c8db9b52f57916358930",
              "file": "no-dummy-data.spec.ts",
              "line": 48,
              "column": 7
            },
            {
              "title": "Crypto service health check should not contain demo markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 135,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 331,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:08.648Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-a5839a5a3545a7f2731b",
              "file": "no-dummy-data.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "/api/positions should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 138,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 341,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:09.407Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-ccfc97068ad4b3311593",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/orders should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 141,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 359,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:10.150Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-01ca83d36c0919fee154",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/signals should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 134,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 334,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:08.085Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-dff53148e0ddac6b33bf",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/bars/BTCUSD?timeframe=5Min&limit=10 should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 136,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:09.025Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-722c82e7389172bcfcc0",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/account should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 140,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 321,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:09.788Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-9d3fcc5e80e56f01dcd9",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/metrics should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 143,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 351,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:10.596Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-5453e1a3eeab137ed420",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/history should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 144,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 329,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:11.086Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-c9f3ab2bcfc710313740",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/pnl-chart should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 146,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 426,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:12.283Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-95df41a7c11dab7e32e8",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/strategies should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 147,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 326,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:13.651Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-0bacd32491722ed75eff",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/assets should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 151,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 335,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:14.473Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-c1716f9ef19d00648b0a",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "Frontend UI should handle service errors gracefully without dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 145,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1777,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 153
                        },
                        "snippet": "  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 153
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:11.556Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 153
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-0abf86e156db95a987e8",
              "file": "no-dummy-data.spec.ts",
              "line": 151,
              "column": 7
            },
            {
              "title": "WebSocket connections should not send dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 152,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1663,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 192
                        },
                        "snippet": "  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 192
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:15.299Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 192
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-23609ff93ca1b5a53e3a",
              "file": "no-dummy-data.spec.ts",
              "line": 176,
              "column": 7
            },
            {
              "title": "API client should throw errors instead of using fallbacks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 156,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1151,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 206
                        },
                        "snippet": "  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 206
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:19.079Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 206
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-3601ae53e0f6ff5341de",
              "file": "no-dummy-data.spec.ts",
              "line": 204,
              "column": 7
            },
            {
              "title": "Crypto service configuration should enforce real data only",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 161,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:22.159Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-9a460122d538d0341b5a",
              "file": "no-dummy-data.spec.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "Frontend should not contain any fallback data providers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 220,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 487,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 50
                        },
                        "snippet": "  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 50
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:44.529Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 50
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-fb3640e1aecb22dab5b5",
              "file": "no-dummy-data.spec.ts",
              "line": 48,
              "column": 7
            },
            {
              "title": "Crypto service health check should not contain demo markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 226,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 321,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:46.049Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-c79a9aeaa2e05e041a74",
              "file": "no-dummy-data.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "/api/positions should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 230,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 323,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:46.781Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-b5f7a5109837d8254d15",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/orders should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 234,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 330,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:47.518Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-938feb48c1d206a1d063",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/signals should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 221,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:44.632Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-8619e9cced8864ba0a7b",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/bars/BTCUSD?timeframe=5Min&limit=10 should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 223,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 320,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:45.419Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-f3ae92ae510eaf2a081f",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/account should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 227,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 320,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:46.199Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-f5f36e96007aafe6f0f1",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/metrics should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 231,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 324,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:46.964Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-cdb2e7c62417bf392a9c",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/history should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 224,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 337,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:45.577Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-8b96abb7112c7c343cf0",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/pnl-chart should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 229,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 318,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:46.348Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-c7a3994ec1c739e30313",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/strategies should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 233,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 334,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:47.112Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-1f865d52ebb95cd24833",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/assets should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 237,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:47.845Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-4f32f2afbedd5adeba9f",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "Frontend UI should handle service errors gracefully without dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 232,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 411,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 153
                        },
                        "snippet": "  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 153
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:47.016Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 153
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-aeecde114fc26ef6c19b",
              "file": "no-dummy-data.spec.ts",
              "line": 151,
              "column": 7
            },
            {
              "title": "WebSocket connections should not send dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 239,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 894,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 192
                        },
                        "snippet": "  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 192
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:48.374Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 192
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-4e2871e46297aa90f11c",
              "file": "no-dummy-data.spec.ts",
              "line": 176,
              "column": 7
            },
            {
              "title": "API client should throw errors instead of using fallbacks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 243,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 621,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 206
                        },
                        "snippet": "  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 206
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:50.400Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 206
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-06ebaa71cc22efb97ace",
              "file": "no-dummy-data.spec.ts",
              "line": 204,
              "column": 7
            },
            {
              "title": "Crypto service configuration should enforce real data only",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 248,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:52.276Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-b3ce427329c8d201d421",
              "file": "no-dummy-data.spec.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "Frontend should not contain any fallback data providers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 311,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 201,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 50
                        },
                        "snippet": "  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 50
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:10.325Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 50
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-51d17da39daace870aca",
              "file": "no-dummy-data.spec.ts",
              "line": 48,
              "column": 7
            },
            {
              "title": "Crypto service health check should not contain demo markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 317,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 325,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:11.605Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-a10de3b64b2eb0d66aa3",
              "file": "no-dummy-data.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "/api/positions should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 322,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 356,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:12.386Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-d715a694ff784d8cb4c4",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/orders should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 327,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:13.324Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-544b4ac3e970d8914e6f",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/signals should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 312,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 325,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:10.325Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-c42faccbec7a8c3d58b7",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/bars/BTCUSD?timeframe=5Min&limit=10 should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 315,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 327,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:11.069Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-f586abca23f39752f8f2",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/account should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 319,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 329,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:11.776Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-af4a6914055ffcdd4d63",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/metrics should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 323,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 318,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:12.527Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-652b52700a6e9f5b4452",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/history should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 313,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 320,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:10.744Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-d3d2e8b81f210649375f",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/pnl-chart should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 316,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 319,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:11.460Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-a69fd55b2c5e9c7fa7c2",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/strategies should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 321,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 340,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:12.278Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-9e48fb043e0a72ba5c61",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/assets should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 325,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 334,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:13.281Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-29d8516ced79f7e9203b",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "Frontend UI should handle service errors gracefully without dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 320,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 218,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 153
                        },
                        "snippet": "  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 153
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:11.824Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 153
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-5fc24efe97b6118605b5",
              "file": "no-dummy-data.spec.ts",
              "line": 151,
              "column": 7
            },
            {
              "title": "WebSocket connections should not send dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 326,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 217,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 192
                        },
                        "snippet": "  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 192
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:13.297Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 192
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-9590efd7cc3969281300",
              "file": "no-dummy-data.spec.ts",
              "line": 176,
              "column": 7
            },
            {
              "title": "API client should throw errors instead of using fallbacks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 332,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 230,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 206
                        },
                        "snippet": "  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 206
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:14.680Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 206
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-5c99e23d983521e0bb93",
              "file": "no-dummy-data.spec.ts",
              "line": 204,
              "column": 7
            },
            {
              "title": "Crypto service configuration should enforce real data only",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 337,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 325,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:16.042Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-49840da06dc575a01f65",
              "file": "no-dummy-data.spec.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "Frontend should not contain any fallback data providers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 397,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 419,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 50
                        },
                        "snippet": "  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 50
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  48 |   test('Frontend should not contain any fallback data providers', async ({ page }) => {\n  49 |     // Navigate to main page and check for our specific dummy data markers\n> 50 |     await page.goto(FRONTEND_BASE)\n     |                ^\n  51 |     \n  52 |     // Wait for page to load\n  53 |     await page.waitForTimeout(2000)\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:50:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:36.891Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-110c4-any-fallback-data-providers-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 50
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-9c67df3bbbeb3b7a3995",
              "file": "no-dummy-data.spec.ts",
              "line": 48,
              "column": 7
            },
            {
              "title": "Crypto service health check should not contain demo markers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 401,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 330,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:69:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:38.435Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-181d07bc238444092059",
              "file": "no-dummy-data.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "/api/positions should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 404,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 324,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:39.204Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-f126ebd80bc7579ee15b",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/orders should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 408,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 334,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/orders\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:40.036Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-5f1106b485f20ac263dd",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/signals should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 393,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 308,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/signals\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:37.464Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-6f74485386fc21f80371",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/bars/BTCUSD?timeframe=5Min&limit=10 should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 402,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 319,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/bars/BTCUSD?timeframe=5Min&limit=10\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:38.627Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-7c689d4af17e365a8504",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/account should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 406,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/account\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:39.412Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-92c5b647196a25a1634e",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/metrics should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 409,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 321,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/metrics\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:40.194Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-221062ae0bd81f0da1d8",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/history should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 400,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 323,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/history\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:38.250Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-ba38897c6d0457c5e9c5",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/pnl-chart should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 403,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 353,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/pnl-chart\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:39.000Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-d32801bb66589007d92a",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/strategies should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 407,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 320,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/strategies\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:39.947Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-754b6c3078f57e99e8f7",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "/api/assets should return real data or proper error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 411,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 326,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/assets\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:83:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:40.696Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-9c9d11a04051d28d7436",
              "file": "no-dummy-data.spec.ts",
              "line": 82,
              "column": 9
            },
            {
              "title": "Frontend UI should handle service errors gracefully without dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 412,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 591,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 153
                        },
                        "snippet": "  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 153
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  151 |   test('Frontend UI should handle service errors gracefully without dummy data', async ({ page }) => {\n  152 |     // Navigate to the trading interface\n> 153 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  154 |     \n  155 |     // Check for any dummy data indicators in the UI\n  156 |     const pageContent = await page.content()\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:153:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:40.814Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-12024-acefully-without-dummy-data-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 153
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-bb1fdc12fc51b9b0b574",
              "file": "no-dummy-data.spec.ts",
              "line": 151,
              "column": 7
            },
            {
              "title": "WebSocket connections should not send dummy data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 417,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 669,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 192
                        },
                        "snippet": "  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 192
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  190 |     \n  191 |     // Navigate and wait for WebSocket connections\n> 192 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  193 |     await page.waitForTimeout(5000)\n  194 |     \n  195 |     // Check all WebSocket messages for dummy data markers\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:192:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:42.549Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-56928--should-not-send-dummy-data-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 192
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-e137f82eb5b72d1d4b70",
              "file": "no-dummy-data.spec.ts",
              "line": 176,
              "column": 7
            },
            {
              "title": "API client should throw errors instead of using fallbacks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 423,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 691,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                          "column": 16,
                          "line": 206
                        },
                        "snippet": "  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                            "column": 16,
                            "line": 206
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  204 |   test('API client should throw errors instead of using fallbacks', async ({ page }) => {\n  205 |     // Navigate to frontend\n> 206 |     await page.goto(FRONTEND_BASE)\n      |                ^\n  207 |     \n  208 |     // Check for any error handling that uses fallback data\n  209 |     const errors: string[] = []\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:206:16"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:44.288Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/no-dummy-data-No-Dummy-Dat-629cb--instead-of-using-fallbacks-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts",
                        "column": 16,
                        "line": 206
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-22e57a2ac92af4d89063",
              "file": "no-dummy-data.spec.ts",
              "line": 204,
              "column": 7
            },
            {
              "title": "Crypto service configuration should enforce real data only",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 428,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 333,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9012,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9012,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9012\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9012/api/config\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9012\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/no-dummy-data.spec.ts:222:36"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "üö® Testing NO DUMMY DATA policy enforcement\n"
                        },
                        {
                          "text": "All endpoints must return real data or throw proper errors\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.060Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9012,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1dc742d005cecee86637-aebf496aaea0a5b6e8f4",
              "file": "no-dummy-data.spec.ts",
              "line": 221,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "performance-memory-leak.spec.ts",
      "file": "performance-memory-leak.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "üîç Performance & Memory Leak Detection",
          "file": "performance-memory-leak.spec.ts",
          "line": 25,
          "column": 6,
          "specs": [
            {
              "title": "1. Memory Leak Detection - Component Mounting/Unmounting",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 68,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 174,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 79
                        },
                        "snippet": "  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 79
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:30.272Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 79
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-2145fac014d06f39dc12",
              "file": "performance-memory-leak.spec.ts",
              "line": 78,
              "column": 7
            },
            {
              "title": "2. WebSocket Connection Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 69,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 202,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 148
                        },
                        "snippet": "  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 148
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:30.917Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 148
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-77b83e19b9892516c3b5",
              "file": "performance-memory-leak.spec.ts",
              "line": 128,
              "column": 7
            },
            {
              "title": "3. API Request Pattern Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 70,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 184,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 183
                        },
                        "snippet": "  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 183
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:31.039Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 183
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-c6f456846fc9947bc58a",
              "file": "performance-memory-leak.spec.ts",
              "line": 170,
              "column": 7
            },
            {
              "title": "4. Bundle Size and Load Performance",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 183,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 233
                        },
                        "snippet": "  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 233
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     \n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:31.271Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 233
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-d2defa753d3e84c59592",
              "file": "performance-memory-leak.spec.ts",
              "line": 232,
              "column": 7
            },
            {
              "title": "5. React Component Re-render Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 74,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 179,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 277
                        },
                        "snippet": "  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 277
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:31.702Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 277
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-debbe318fbfca26d82e0",
              "file": "performance-memory-leak.spec.ts",
              "line": 275,
              "column": 7
            },
            {
              "title": "6. Event Listener Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 244,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 320
                        },
                        "snippet": "  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 320
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:31.875Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 320
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-5546aa2d88382ec8a789",
              "file": "performance-memory-leak.spec.ts",
              "line": 319,
              "column": 7
            },
            {
              "title": "7. State Management Memory Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 76,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 235,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 351
                        },
                        "snippet": "  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 351
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:31.916Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 351
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-82260a395cd08bfb04b9",
              "file": "performance-memory-leak.spec.ts",
              "line": 350,
              "column": 7
            },
            {
              "title": "8. Long-running Memory Test",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 77,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 182,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 384
                        },
                        "snippet": "  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 384
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:32.009Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 384
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-088c090f35ec46343c10",
              "file": "performance-memory-leak.spec.ts",
              "line": 383,
              "column": 7
            },
            {
              "title": "9. Generate Performance Report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 78,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 166,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 424
                        },
                        "snippet": "  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 424
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:32.804Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 424
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-c2f9948f8dae46b90ba8",
              "file": "performance-memory-leak.spec.ts",
              "line": 423,
              "column": 7
            },
            {
              "title": "1. Memory Leak Detection - Component Mounting/Unmounting",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 137,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 786,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 79
                        },
                        "snippet": "  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 79
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:11.743Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 79
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-3121d99fd5e4b5cb5f0c",
              "file": "performance-memory-leak.spec.ts",
              "line": 78,
              "column": 7
            },
            {
              "title": "2. WebSocket Connection Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 149,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1444,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 148
                        },
                        "snippet": "  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 148
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:13.993Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 148
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-7ba4aa0f614d57c866bc",
              "file": "performance-memory-leak.spec.ts",
              "line": 128,
              "column": 7
            },
            {
              "title": "3. API Request Pattern Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 153,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1720,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 183
                        },
                        "snippet": "  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 183
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:15.350Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 183
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-a7b0510e3a4f45b75664",
              "file": "performance-memory-leak.spec.ts",
              "line": 170,
              "column": 7
            },
            {
              "title": "4. Bundle Size and Load Performance",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 154,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1564,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 233
                        },
                        "snippet": "  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 233
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     \n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:17.044Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 233
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-dbb1cb22e794450e82c7",
              "file": "performance-memory-leak.spec.ts",
              "line": 232,
              "column": 7
            },
            {
              "title": "5. React Component Re-render Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1296,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 277
                        },
                        "snippet": "  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 277
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:17.685Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 277
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-a8a53c0da5e7c92e41da",
              "file": "performance-memory-leak.spec.ts",
              "line": 275,
              "column": 7
            },
            {
              "title": "6. Event Listener Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 158,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1429,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 320
                        },
                        "snippet": "  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 320
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:19.645Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 320
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-492f41429c68780115fb",
              "file": "performance-memory-leak.spec.ts",
              "line": 319,
              "column": 7
            },
            {
              "title": "7. State Management Memory Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 159,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1265,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 351
                        },
                        "snippet": "  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 351
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:20.419Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 351
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-bde41d5fe1e1fa972f31",
              "file": "performance-memory-leak.spec.ts",
              "line": 350,
              "column": 7
            },
            {
              "title": "8. Long-running Memory Test",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 160,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1156,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 384
                        },
                        "snippet": "  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 384
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:20.895Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 384
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-3e64e732512df8cf999e",
              "file": "performance-memory-leak.spec.ts",
              "line": 383,
              "column": 7
            },
            {
              "title": "9. Generate Performance Report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 163,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1286,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 424
                        },
                        "snippet": "  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 424
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:22.995Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 424
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-89c00cd1adef2f3b848b",
              "file": "performance-memory-leak.spec.ts",
              "line": 423,
              "column": 7
            },
            {
              "title": "1. Memory Leak Detection - Component Mounting/Unmounting",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 235,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 479,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 79
                        },
                        "snippet": "  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 79
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:47.734Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 79
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-ee68b58a3c7453b8f3e3",
              "file": "performance-memory-leak.spec.ts",
              "line": 78,
              "column": 7
            },
            {
              "title": "2. WebSocket Connection Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 238,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 672,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 148
                        },
                        "snippet": "  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 148
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:48.263Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 148
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-ae81deb8fc3d2daff6be",
              "file": "performance-memory-leak.spec.ts",
              "line": 128,
              "column": 7
            },
            {
              "title": "3. API Request Pattern Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 240,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 720,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 183
                        },
                        "snippet": "  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 183
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:48.681Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 183
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-f04b60a67f9ade742194",
              "file": "performance-memory-leak.spec.ts",
              "line": 170,
              "column": 7
            },
            {
              "title": "4. Bundle Size and Load Performance",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 241,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 680,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 233
                        },
                        "snippet": "  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 233
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     \n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:49.904Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 233
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-51596aef63cc1de205c3",
              "file": "performance-memory-leak.spec.ts",
              "line": 232,
              "column": 7
            },
            {
              "title": "5. React Component Re-render Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 242,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 729,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 277
                        },
                        "snippet": "  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 277
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:50.208Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 277
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-d158d6f6a43f5f6802ee",
              "file": "performance-memory-leak.spec.ts",
              "line": 275,
              "column": 7
            },
            {
              "title": "6. Event Listener Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 245,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 498,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 320
                        },
                        "snippet": "  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 320
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:50.854Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 320
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-07dc25f83a10343534fe",
              "file": "performance-memory-leak.spec.ts",
              "line": 319,
              "column": 7
            },
            {
              "title": "7. State Management Memory Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 246,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 578,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 351
                        },
                        "snippet": "  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 351
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:51.748Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 351
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-1576ed50fec041c52165",
              "file": "performance-memory-leak.spec.ts",
              "line": 350,
              "column": 7
            },
            {
              "title": "8. Long-running Memory Test",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 247,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 646,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 384
                        },
                        "snippet": "  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 384
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:52.019Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 384
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-1c62915109f9d284e134",
              "file": "performance-memory-leak.spec.ts",
              "line": 383,
              "column": 7
            },
            {
              "title": "9. Generate Performance Report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 250,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 502,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 424
                        },
                        "snippet": "  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 424
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:52.650Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 424
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-aeaa08e82564c7545f9b",
              "file": "performance-memory-leak.spec.ts",
              "line": 423,
              "column": 7
            },
            {
              "title": "1. Memory Leak Detection - Component Mounting/Unmounting",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 328,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 217,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 79
                        },
                        "snippet": "  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 79
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:13.381Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 79
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-cd4ebbb5b9d46c3ec8b3",
              "file": "performance-memory-leak.spec.ts",
              "line": 78,
              "column": 7
            },
            {
              "title": "2. WebSocket Connection Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 329,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 219,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 148
                        },
                        "snippet": "  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 148
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:14.041Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 148
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-f2eb6080613653240e11",
              "file": "performance-memory-leak.spec.ts",
              "line": 128,
              "column": 7
            },
            {
              "title": "3. API Request Pattern Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 330,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 222,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 183
                        },
                        "snippet": "  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 183
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:14.035Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 183
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-ce7dd2cc1a09856bf34c",
              "file": "performance-memory-leak.spec.ts",
              "line": 170,
              "column": 7
            },
            {
              "title": "4. Bundle Size and Load Performance",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 333,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 224,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 233
                        },
                        "snippet": "  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 233
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     \n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:14.682Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 233
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-2880a6ada3582910c117",
              "file": "performance-memory-leak.spec.ts",
              "line": 232,
              "column": 7
            },
            {
              "title": "5. React Component Re-render Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 335,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 242,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 277
                        },
                        "snippet": "  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 277
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:15.275Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 277
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-125ce1d4b3d11fc0f10c",
              "file": "performance-memory-leak.spec.ts",
              "line": 275,
              "column": 7
            },
            {
              "title": "6. Event Listener Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 334,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 232,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 320
                        },
                        "snippet": "  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 320
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:15.275Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 320
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-1101cce930da3ef519cc",
              "file": "performance-memory-leak.spec.ts",
              "line": 319,
              "column": 7
            },
            {
              "title": "7. State Management Memory Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 336,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 196,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 351
                        },
                        "snippet": "  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 351
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:16.044Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 351
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-e533f60b50fd86a6c828",
              "file": "performance-memory-leak.spec.ts",
              "line": 350,
              "column": 7
            },
            {
              "title": "8. Long-running Memory Test",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 340,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 243,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 384
                        },
                        "snippet": "  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 384
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:16.473Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 384
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-8c22e9e1a2eca5fcf611",
              "file": "performance-memory-leak.spec.ts",
              "line": 383,
              "column": 7
            },
            {
              "title": "9. Generate Performance Report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 339,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 243,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 424
                        },
                        "snippet": "  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 424
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:16.473Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-Mobile-Chrome/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 424
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-8e30518cf733bbb866dd",
              "file": "performance-memory-leak.spec.ts",
              "line": 423,
              "column": 7
            },
            {
              "title": "1. Memory Leak Detection - Component Mounting/Unmounting",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 413,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 593,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 79
                        },
                        "snippet": "  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 79
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  77 |\n  78 |   test('1. Memory Leak Detection - Component Mounting/Unmounting', async ({ page }) => {\n> 79 |     await page.goto('http://localhost:9100')\n     |                ^\n  80 |     \n  81 |     const initialMemory = await captureMemoryMetrics(page)\n  82 |     console.log('Initial Memory:', {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:79:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:40.827Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-f42c8-mponent-Mounting-Unmounting-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 79
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-0666b9572726d681b581",
              "file": "performance-memory-leak.spec.ts",
              "line": 78,
              "column": 7
            },
            {
              "title": "2. WebSocket Connection Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 414,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 501,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 148
                        },
                        "snippet": "  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 148
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  146 |     })\n  147 |\n> 148 |     await page.goto('http://localhost:9100')\n      |                ^\n  149 |     await page.waitForTimeout(5000)\n  150 |\n  151 |     // Reload page multiple times\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:148:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:41.026Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-b861f-t-Connection-Leak-Detection-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 148
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-72be9070a86c9a2bfdbd",
              "file": "performance-memory-leak.spec.ts",
              "line": 128,
              "column": 7
            },
            {
              "title": "3. API Request Pattern Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 415,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 496,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 183
                        },
                        "snippet": "  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 183
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  181 |     })\n  182 |\n> 183 |     await page.goto('http://localhost:9100')\n      |                ^\n  184 |     await page.waitForTimeout(10000) // Wait 10 seconds\n  185 |\n  186 |     // Analyze API call patterns\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:183:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:41.698Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-08e20-PI-Request-Pattern-Analysis-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 183
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-702b64e6bbef64206a27",
              "file": "performance-memory-leak.spec.ts",
              "line": 170,
              "column": 7
            },
            {
              "title": "4. Bundle Size and Load Performance",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 418,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 633,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 233
                        },
                        "snippet": "  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 233
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  231 |\n  232 |   test('4. Bundle Size and Load Performance', async ({ page }) => {\n> 233 |     await page.goto('http://localhost:9100')\n      |                ^\n  234 |     \n  235 |     const metrics = await capturePerformanceMetrics(page)\n  236 |     \n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:233:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:42.534Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-8ed18-e-Size-and-Load-Performance-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 233
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-e63916f9e24e4878d6c7",
              "file": "performance-memory-leak.spec.ts",
              "line": 232,
              "column": 7
            },
            {
              "title": "5. React Component Re-render Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 419,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 621,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 277
                        },
                        "snippet": "  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 277
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  275 |   test('5. React Component Re-render Detection', async ({ page }) => {\n  276 |     // Inject React DevTools profiler\n> 277 |     await page.goto('http://localhost:9100')\n      |                ^\n  278 |     \n  279 |     // Monitor React re-renders\n  280 |     const renderCounts = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:277:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:42.602Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-7a8c8-mponent-Re-render-Detection-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 277
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-381475c2417741ca627d",
              "file": "performance-memory-leak.spec.ts",
              "line": 275,
              "column": 7
            },
            {
              "title": "6. Event Listener Leak Detection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 420,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 606,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 320
                        },
                        "snippet": "  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 320
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  318 |\n  319 |   test('6. Event Listener Leak Detection', async ({ page }) => {\n> 320 |     await page.goto('http://localhost:9100')\n      |                ^\n  321 |     \n  322 |     const initialListeners = await page.evaluate(() => {\n  323 |       const getEventListeners = (element: any) => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:320:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:43.454Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-1d653-ent-Listener-Leak-Detection-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 320
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-1de7baa365e707dbfb2e",
              "file": "performance-memory-leak.spec.ts",
              "line": 319,
              "column": 7
            },
            {
              "title": "7. State Management Memory Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 422,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 689,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 351
                        },
                        "snippet": "  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 351
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  349 |\n  350 |   test('7. State Management Memory Analysis', async ({ page }) => {\n> 351 |     await page.goto('http://localhost:9100')\n      |                ^\n  352 |     \n  353 |     // Check Redux/Zustand/Context store size\n  354 |     const storeSize = await page.evaluate(() => {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:351:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:44.245Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-51775--Management-Memory-Analysis-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 351
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-50e371916b58dbae724a",
              "file": "performance-memory-leak.spec.ts",
              "line": 350,
              "column": 7
            },
            {
              "title": "8. Long-running Memory Test",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 424,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 666,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 384
                        },
                        "snippet": "  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 384
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  382 |\n  383 |   test('8. Long-running Memory Test', async ({ page }) => {\n> 384 |     await page.goto('http://localhost:9100')\n      |                ^\n  385 |     \n  386 |     const memorySnapshots: MemoryMetrics[] = []\n  387 |     const duration = 30000 // 30 seconds\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:384:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:44.299Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-54c6d--8-Long-running-Memory-Test-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 384
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-1f716f670cca3174e965",
              "file": "performance-memory-leak.spec.ts",
              "line": 383,
              "column": 7
            },
            {
              "title": "9. Generate Performance Report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 425,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 457,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16",
                        "location": {
                          "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                          "column": 16,
                          "line": 424
                        },
                        "snippet": "  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                            "column": 16,
                            "line": 424
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n\n  422 |\n  423 |   test('9. Generate Performance Report', async ({ page }) => {\n> 424 |     await page.goto('http://localhost:9100')\n      |                ^\n  425 |     await page.waitForLoadState('networkidle')\n  426 |     \n  427 |     const report = {\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts:424:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:45.413Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/test-results/performance-memory-leak-üîç-4b54d-Generate-Performance-Report-Mobile-Safari/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/performance-memory-leak.spec.ts",
                        "column": 16,
                        "line": 424
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "644416ae80ae961ae2cb-325e07236e1de7c1538e",
              "file": "performance-memory-leak.spec.ts",
              "line": 423,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "service-dependency.spec.ts",
      "file": "service-dependency.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Service Dependency Testing",
          "file": "service-dependency.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "Analytics Service Dependency Chain",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 73,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 309,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9007,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9007,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîó Testing Analytics Service Dependencies...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:32.442Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9007,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-94bac6af3e5d3f1519e7",
              "file": "service-dependency.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "Cross-Service Data Consistency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 320,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîÑ Testing Cross-Service Data Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:32.854Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-a8e842075c3cf23ec3e6",
              "file": "service-dependency.spec.ts",
              "line": 39,
              "column": 7
            },
            {
              "title": "Service Failure Scenarios",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 80,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 333,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüí• Testing Service Failure Scenarios...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:32.898Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-e536d0f9202b4f1dc510",
              "file": "service-dependency.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "Data Flow Integrity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 81,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 328,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüåä Testing Data Flow Integrity...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:32.944Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-bc40e9eafa9527481dc4",
              "file": "service-dependency.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "Real Data Validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 82,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 327,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n‚ú® Validating Real Data Characteristics...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:33.131Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-82d06968971039ebd048",
              "file": "service-dependency.spec.ts",
              "line": 120,
              "column": 7
            },
            {
              "title": "Analytics Service Dependency Chain",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 164,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 346,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9007,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9007,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîó Testing Analytics Service Dependencies...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:23.180Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9007,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-a747fe51b08e2e7649ef",
              "file": "service-dependency.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "Cross-Service Data Consistency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 165,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 337,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîÑ Testing Cross-Service Data Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:23.706Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-6e06229a9730d07bba9c",
              "file": "service-dependency.spec.ts",
              "line": 39,
              "column": 7
            },
            {
              "title": "Service Failure Scenarios",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 166,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 376,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüí• Testing Service Failure Scenarios...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:24.019Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-1cc3a758e1ac66075943",
              "file": "service-dependency.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "Data Flow Integrity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 167,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 345,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüåä Testing Data Flow Integrity...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:24.157Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-f40b737d3c64755ccf0f",
              "file": "service-dependency.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "Real Data Validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 168,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 339,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:141.0) Gecko/20100101 Firefox/141.0\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n‚ú® Validating Real Data Characteristics...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:24.790Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-e9fc36fc5181d198573b",
              "file": "service-dependency.spec.ts",
              "line": 120,
              "column": 7
            },
            {
              "title": "Analytics Service Dependency Chain",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 251,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 331,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9007,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9007,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîó Testing Analytics Service Dependencies...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:53.291Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9007,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-a14c6d674c8339ea4488",
              "file": "service-dependency.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "Cross-Service Data Consistency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 252,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîÑ Testing Cross-Service Data Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:53.540Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-7a175182ab1ccee4a15c",
              "file": "service-dependency.spec.ts",
              "line": 39,
              "column": 7
            },
            {
              "title": "Service Failure Scenarios",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 253,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 328,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüí• Testing Service Failure Scenarios...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:53.759Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-7eb15d6bf39843ff4144",
              "file": "service-dependency.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "Data Flow Integrity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 255,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 328,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüåä Testing Data Flow Integrity...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:54.053Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-c56431dbe2f40c4ccd17",
              "file": "service-dependency.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "Real Data Validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 256,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 327,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n‚ú® Validating Real Data Characteristics...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:54.328Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-a2ee4d8ff613113cdd9e",
              "file": "service-dependency.spec.ts",
              "line": 120,
              "column": 7
            },
            {
              "title": "Analytics Service Dependency Chain",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 341,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 333,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9007,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9007,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîó Testing Analytics Service Dependencies...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:16.813Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9007,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-7826d3032cc22daf9190",
              "file": "service-dependency.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "Cross-Service Data Consistency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 342,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 326,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîÑ Testing Cross-Service Data Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:17.179Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-d4db92364e028bb2ee2a",
              "file": "service-dependency.spec.ts",
              "line": 39,
              "column": 7
            },
            {
              "title": "Service Failure Scenarios",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 338,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 307,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüí• Testing Service Failure Scenarios...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:17.060Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-d6d791285f383649c249",
              "file": "service-dependency.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "Data Flow Integrity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 343,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 322,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüåä Testing Data Flow Integrity...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:17.512Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-61b3234c87c8a1230ee3",
              "file": "service-dependency.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "Real Data Validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 344,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 336,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n‚ú® Validating Real Data Characteristics...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:17.614Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-c6ae8a63c91ad9347578",
              "file": "service-dependency.spec.ts",
              "line": 120,
              "column": 7
            },
            {
              "title": "Analytics Service Dependency Chain",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 427,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 323,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9007,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9007,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9007\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9007/analytics/summary\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9007\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:20:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîó Testing Analytics Service Dependencies...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.028Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9007,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-3f5467d36d42708a3dd4",
              "file": "service-dependency.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "Cross-Service Data Consistency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 429,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 323,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:43:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüîÑ Testing Cross-Service Data Consistency...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.055Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-a584815f5d4d57718dde",
              "file": "service-dependency.spec.ts",
              "line": 39,
              "column": 7
            },
            {
              "title": "Service Failure Scenarios",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 430,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 328,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/nonexistent-endpoint\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:72:39"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüí• Testing Service Failure Scenarios...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.744Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-86f23d159d86b08f42b7",
              "file": "service-dependency.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "Data Flow Integrity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 431,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 321,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:103:38"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\nüåä Testing Data Flow Integrity...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.762Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-4c51ffa30ee27720aa1d",
              "file": "service-dependency.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "Real Data Validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 432,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 324,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45",
                        "location": {
                          "file": "apiRequestContext.get: connect ECONNREFUSED :",
                          "column": 9001,
                          "line": 1
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "apiRequestContext.get: connect ECONNREFUSED :",
                            "column": 9001,
                            "line": 1
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED ::1:9001\nCall log:\n\u001b[2m  - ‚Üí GET http://localhost:9001/positions\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at apiRequestContext.get: connect ECONNREFUSED ::1:9001\n    at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/frontend-shadcn/tests/service-dependency.spec.ts:124:45"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n‚ú® Validating Real Data Characteristics...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.801Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "apiRequestContext.get: connect ECONNREFUSED :",
                        "column": 9001,
                        "line": 1
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "147675bc73e846e861f2-81afe5ec8009f82b317f",
              "file": "service-dependency.spec.ts",
              "line": 120,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "unified-system.spec.ts",
      "file": "unified-system.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Unified Trading System Test Suite",
          "file": "unified-system.spec.ts",
          "line": 47,
          "column": 6,
          "specs": [
            {
              "title": "Unified Service Health Check",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 83,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 326,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Unified Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:33.521Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-15959ed7117a65987854",
              "file": "unified-system.spec.ts",
              "line": 91,
              "column": 7
            },
            {
              "title": "Core API Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 83,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 25,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Core API Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 1\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 87.5%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 42ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ unified-service//health: All services integrated and healthy (319ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Account Data: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Positions: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Orders: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Trading Signals: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Performance Metrics: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Crypto Leaderboard: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è unified-api/Configuration: No clear data validation possible (3ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:33.868Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-ba2b51dce737bd8e0310",
              "file": "unified-system.spec.ts",
              "line": 145,
              "column": 7
            },
            {
              "title": "Crypto Trading Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 84,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 338,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nü™ô Testing Crypto Trading Endpoints...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:33.559Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-c39145fbab71aeff1bab",
              "file": "unified-system.spec.ts",
              "line": 224,
              "column": 7
            },
            {
              "title": "Auto-Trading Functionality",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 84,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nü§ñ Testing Auto-Trading Functionality...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 8\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 100.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 66ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Positions: Real crypto data available (320ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Status: Real crypto data available (3ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Top Movers: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Assets: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Market Scan: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Status Check: Auto-trading enabled\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Position Creation: 1 crypto positions active\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Configuration: Trading configuration loaded\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:33.924Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-12ef521612270d5d6cf2",
              "file": "unified-system.spec.ts",
              "line": 301,
              "column": 7
            },
            {
              "title": "Frontend Dashboard Load Test",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 85,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 160,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüåê Testing Frontend Dashboard...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:33.646Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-3f41e5b59566069dbffb",
              "file": "unified-system.spec.ts",
              "line": 361,
              "column": 7
            },
            {
              "title": "Performance and Resource Usage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 85,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 325,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 5\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 1\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 83.3%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 81ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• frontend/Dashboard Load: Frontend load failed: Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n"
                        },
                        {
                          "text": "‚úÖ performance//health: 315ms (fast) (315ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/account: 2ms (fast) (2ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/positions: 4ms (fast) (4ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/leaderboard: 2ms (fast) (2ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/Overall: Average: 81ms, Success: 4/4 (81ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:33.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-6279e87deb0d65b52d0b",
              "file": "unified-system.spec.ts",
              "line": 427,
              "column": 7
            },
            {
              "title": "Data Consistency Validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 86,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 325,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüîç Testing Data Consistency...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 2\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 100.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: NaNms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Portfolio Values: Portfolio values consistent across endpoints (~$95357)\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Buying Power: Buying power consistent (~$65228)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:58:33.667Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-99c1787fb5008aade55e",
              "file": "unified-system.spec.ts",
              "line": 483,
              "column": 7
            },
            {
              "title": "Unified Service Health Check",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 169,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 330,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Unified Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:24.998Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-e6daba8e295810b0bf93",
              "file": "unified-system.spec.ts",
              "line": 91,
              "column": 7
            },
            {
              "title": "Core API Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 169,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 24,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Core API Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 1\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 87.5%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 42ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ unified-service//health: All services integrated and healthy (323ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Account Data: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Positions: Real data returned successfully (1ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Orders: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Trading Signals: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Performance Metrics: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Crypto Leaderboard: Real data returned successfully (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è unified-api/Configuration: No clear data validation possible (2ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:25.361Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-d3b372a9333a665ae62c",
              "file": "unified-system.spec.ts",
              "line": 145,
              "column": 7
            },
            {
              "title": "Crypto Trading Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 170,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 349,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nü™ô Testing Crypto Trading Endpoints...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:25.002Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-ba8b2bafcf7511c92bd9",
              "file": "unified-system.spec.ts",
              "line": 224,
              "column": 7
            },
            {
              "title": "Auto-Trading Functionality",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 170,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 8,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nü§ñ Testing Auto-Trading Functionality...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 8\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 100.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 68ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Positions: Real crypto data available (323ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Status: Real crypto data available (4ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Top Movers: Real crypto data available (4ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Assets: Real crypto data available (5ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Market Scan: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Status Check: Auto-trading enabled\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Position Creation: 1 crypto positions active\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Configuration: Trading configuration loaded\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:25.379Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-b2cb8c25bf3ad4aba8b7",
              "file": "unified-system.spec.ts",
              "line": 301,
              "column": 7
            },
            {
              "title": "Frontend Dashboard Load Test",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 171,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 1357,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüåê Testing Frontend Dashboard...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:25.542Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-d1a0df1fe94855d89fa9",
              "file": "unified-system.spec.ts",
              "line": 361,
              "column": 7
            },
            {
              "title": "Performance and Resource Usage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 171,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 372,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 5\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 1\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 83.3%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 91ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• frontend/Dashboard Load: Frontend load failed: Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n"
                        },
                        {
                          "text": "‚úÖ performance//health: 337ms (fast) (337ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/account: 12ms (fast) (12ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/positions: 8ms (fast) (8ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/leaderboard: 6ms (fast) (6ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/Overall: Average: 91ms, Success: 4/4 (91ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:27.635Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-b9ce2fddeba1bf177e07",
              "file": "unified-system.spec.ts",
              "line": 427,
              "column": 7
            },
            {
              "title": "Data Consistency Validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 169,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 313,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüîç Testing Data Consistency...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 9\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 1\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 90.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 42ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ unified-service//health: All services integrated and healthy (323ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Account Data: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Positions: Real data returned successfully (1ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Orders: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Trading Signals: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Performance Metrics: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Crypto Leaderboard: Real data returned successfully (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è unified-api/Configuration: No clear data validation possible (2ms)\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Portfolio Values: Portfolio values consistent across endpoints (~$95350)\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Buying Power: Buying power consistent (~$65221)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:25.401Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-3437fb4953bbf2027930",
              "file": "unified-system.spec.ts",
              "line": 483,
              "column": 7
            },
            {
              "title": "Unified Service Health Check",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 257,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 326,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Unified Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:54.334Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-8ef9dfbfe5e7fd64eceb",
              "file": "unified-system.spec.ts",
              "line": 91,
              "column": 7
            },
            {
              "title": "Core API Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 257,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 23,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Core API Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 1\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 87.5%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 42ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ unified-service//health: All services integrated and healthy (320ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Account Data: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Positions: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Orders: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Trading Signals: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Performance Metrics: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Crypto Leaderboard: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è unified-api/Configuration: No clear data validation possible (2ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:54.681Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-e5dd0ea8ec09dc04c705",
              "file": "unified-system.spec.ts",
              "line": 145,
              "column": 7
            },
            {
              "title": "Crypto Trading Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 258,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 343,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nü™ô Testing Crypto Trading Endpoints...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:54.626Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-e73b6ec9271a7b4bd304",
              "file": "unified-system.spec.ts",
              "line": 224,
              "column": 7
            },
            {
              "title": "Auto-Trading Functionality",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 258,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 21,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nü§ñ Testing Auto-Trading Functionality...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 8\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 100.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 66ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Positions: Real crypto data available (318ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Status: Real crypto data available (3ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Top Movers: Real crypto data available (5ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Assets: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Market Scan: Real crypto data available (3ms)\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Status Check: Auto-trading enabled\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Position Creation: 1 crypto positions active\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Configuration: Trading configuration loaded\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:54.992Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-6736b18d756a004d8736",
              "file": "unified-system.spec.ts",
              "line": 301,
              "column": 7
            },
            {
              "title": "Frontend Dashboard Load Test",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 259,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 451,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüåê Testing Frontend Dashboard...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:54.890Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-9d1749e9d63e619d3992",
              "file": "unified-system.spec.ts",
              "line": 361,
              "column": 7
            },
            {
              "title": "Performance and Resource Usage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 259,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 341,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 5\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 1\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 83.3%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 84ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• frontend/Dashboard Load: Frontend load failed: Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n"
                        },
                        {
                          "text": "‚úÖ performance//health: 317ms (fast) (317ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/account: 10ms (fast) (10ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/positions: 6ms (fast) (6ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/leaderboard: 4ms (fast) (4ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/Overall: Average: 84ms, Success: 4/4 (84ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:55.633Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-e4f0e347bb1b9b122231",
              "file": "unified-system.spec.ts",
              "line": 427,
              "column": 7
            },
            {
              "title": "Data Consistency Validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 260,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 328,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüîç Testing Data Consistency...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 2\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 100.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: NaNms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Portfolio Values: Portfolio values consistent across endpoints (~$95345)\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Buying Power: Buying power consistent (~$65217)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-04T23:59:55.117Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-8a3e47d0803377e3d323",
              "file": "unified-system.spec.ts",
              "line": 483,
              "column": 7
            },
            {
              "title": "Unified Service Health Check",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 345,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 323,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Unified Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:17.619Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-9d0b5abba5b78662dea5",
              "file": "unified-system.spec.ts",
              "line": 91,
              "column": 7
            },
            {
              "title": "Core API Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 345,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 24,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Core API Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 1\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 87.5%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 42ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ unified-service//health: All services integrated and healthy (318ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Account Data: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Positions: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Orders: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Trading Signals: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Performance Metrics: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Crypto Leaderboard: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è unified-api/Configuration: No clear data validation possible (3ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:17.962Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-48e2e16015302a85198a",
              "file": "unified-system.spec.ts",
              "line": 145,
              "column": 7
            },
            {
              "title": "Crypto Trading Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 346,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 555,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nü™ô Testing Crypto Trading Endpoints...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:17.747Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-4f73aee580983f2de8e8",
              "file": "unified-system.spec.ts",
              "line": 224,
              "column": 7
            },
            {
              "title": "Auto-Trading Functionality",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 346,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 9,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nü§ñ Testing Auto-Trading Functionality...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 8\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 100.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 109ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Positions: Real crypto data available (540ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Status: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Top Movers: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Assets: Real crypto data available (1ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Market Scan: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Status Check: Auto-trading enabled\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Position Creation: 1 crypto positions active\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Configuration: Trading configuration loaded\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:18.322Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-de0be1e7a2dec65a36ef",
              "file": "unified-system.spec.ts",
              "line": 301,
              "column": 7
            },
            {
              "title": "Frontend Dashboard Load Test",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 347,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 177,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüåê Testing Frontend Dashboard...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:17.865Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-13200f4a4918c94e6592",
              "file": "unified-system.spec.ts",
              "line": 361,
              "column": 7
            },
            {
              "title": "Performance and Resource Usage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 347,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 332,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 5\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 1\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 83.3%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 83ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "üí• frontend/Dashboard Load: Frontend load failed: Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:9100/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n"
                        },
                        {
                          "text": "‚úÖ performance//health: 320ms (fast) (320ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/account: 4ms (fast) (4ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/positions: 4ms (fast) (4ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/leaderboard: 2ms (fast) (2ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/Overall: Average: 83ms, Success: 4/4 (83ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:18.196Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-08eba184f6c602960af1",
              "file": "unified-system.spec.ts",
              "line": 427,
              "column": 7
            },
            {
              "title": "Data Consistency Validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 348,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 322,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüîç Testing Data Consistency...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 2\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 100.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: NaNms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Portfolio Values: Portfolio values consistent across endpoints (~$95348)\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Buying Power: Buying power consistent (~$65219)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:18.244Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-afdf7775034cc88932cf",
              "file": "unified-system.spec.ts",
              "line": 483,
              "column": 7
            },
            {
              "title": "Unified Service Health Check",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 433,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 325,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüè• Testing Unified Service Health...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.803Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-b0ea9d5d269f1350657c",
              "file": "unified-system.spec.ts",
              "line": 91,
              "column": 7
            },
            {
              "title": "Core API Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 433,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 24,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nüìä Testing Core API Endpoints...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 7\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 1\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 87.5%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 42ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ unified-service//health: All services integrated and healthy (319ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Account Data: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Positions: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Orders: Real data returned successfully (3ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Trading Signals: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Performance Metrics: Real data returned successfully (2ms)\n"
                        },
                        {
                          "text": "‚úÖ unified-api/Crypto Leaderboard: Real data returned successfully (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è unified-api/Configuration: No clear data validation possible (2ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:47.149Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-ce30132588de4b666544",
              "file": "unified-system.spec.ts",
              "line": 145,
              "column": 7
            },
            {
              "title": "Crypto Trading Endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 426,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 12,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nü™ô Testing Crypto Trading Endpoints...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.724Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-170e4173a30e21b8bb3b",
              "file": "unified-system.spec.ts",
              "line": 224,
              "column": 7
            },
            {
              "title": "Auto-Trading Functionality",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 426,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 7,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\nü§ñ Testing Auto-Trading Functionality...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 6\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 75.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 1ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Positions: Real crypto data available (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è crypto-api/Crypto Status: Empty but valid response (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è crypto-api/Top Movers: Empty but valid response (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Assets: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Market Scan: Real crypto data available (1ms)\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Status Check: Auto-trading enabled\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Position Creation: 1 crypto positions active\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Configuration: Trading configuration loaded\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.749Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-49e8c3a7e1b1d7b6ff34",
              "file": "unified-system.spec.ts",
              "line": 301,
              "column": 7
            },
            {
              "title": "Frontend Dashboard Load Test",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 426,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 419,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüåê Testing Frontend Dashboard...\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:46.772Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-acdca3c7efb18ce706d4",
              "file": "unified-system.spec.ts",
              "line": 361,
              "column": 7
            },
            {
              "title": "Performance and Resource Usage",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 426,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 7,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "\n‚ö° Testing Performance...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 11\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 2\n"
                        },
                        {
                          "text": "üí• ERRORS: 1\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 78.6%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: 2ms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Positions: Real crypto data available (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è crypto-api/Crypto Status: Empty but valid response (1ms)\n"
                        },
                        {
                          "text": "‚ö†Ô∏è crypto-api/Top Movers: Empty but valid response (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Crypto Assets: Real crypto data available (2ms)\n"
                        },
                        {
                          "text": "‚úÖ crypto-api/Market Scan: Real crypto data available (1ms)\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Status Check: Auto-trading enabled\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Position Creation: 1 crypto positions active\n"
                        },
                        {
                          "text": "‚úÖ auto-trading/Configuration: Trading configuration loaded\n"
                        },
                        {
                          "text": "üí• frontend/Dashboard Load: Frontend load failed: Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:9100/\", waiting until \"load\"\u001b[22m\n\n"
                        },
                        {
                          "text": "‚úÖ performance//health: 3ms (fast) (3ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/account: 1ms (fast) (1ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/positions: 1ms (fast) (1ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/leaderboard: 1ms (fast) (1ms)\n"
                        },
                        {
                          "text": "‚úÖ performance/Overall: Average: 2ms, Success: 4/4 (2ms)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:47.417Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-8c4c466cb0e7e01150b5",
              "file": "unified-system.spec.ts",
              "line": 427,
              "column": 7
            },
            {
              "title": "Data Consistency Validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 120000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 434,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 322,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "üöÄ Starting Unified Trading System Test Suite\n"
                        },
                        {
                          "text": "üéØ Testing single unified service on port 9000\n"
                        },
                        {
                          "text": "üåê Testing frontend on port 9100\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "\nüîç Testing Data Consistency...\n"
                        },
                        {
                          "text": "\nüìä TEST RESULTS SUMMARY\n"
                        },
                        {
                          "text": "============================================================\n"
                        },
                        {
                          "text": "‚úÖ PASSED: 2\n"
                        },
                        {
                          "text": "‚ùå FAILED: 0\n"
                        },
                        {
                          "text": "‚ö†Ô∏è  WARNINGS: 0\n"
                        },
                        {
                          "text": "üí• ERRORS: 0\n"
                        },
                        {
                          "text": "üéØ SUCCESS RATE: 100.0%\n"
                        },
                        {
                          "text": "‚ö° AVG RESPONSE TIME: NaNms\n"
                        },
                        {
                          "text": "\nüìã DETAILED RESULTS:\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Portfolio Values: Portfolio values consistent across endpoints (~$95348)\n"
                        },
                        {
                          "text": "‚úÖ data-consistency/Buying Power: Buying power consistent (~$65218)\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-05T00:00:47.474Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "9422244250537a0fd7a5-897a6a09b40c8d8fbead",
              "file": "unified-system.spec.ts",
              "line": 483,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-09-04T23:58:12.408Z",
    "duration": 155430.935,
    "expected": 405,
    "skipped": 0,
    "unexpected": 415,
    "flaky": 0
  }
}
