[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "alpaca-stochrsi-ema-trading-bot"
version = "1.0.0"
description = "Comprehensive trading bot with StochRSI and EMA strategies for Alpaca Markets"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Trading Bot Team", email = "team@tradingbot.com"}
]
maintainers = [
    {name = "Trading Bot Team", email = "team@tradingbot.com"}
]
keywords = ["trading", "alpaca", "stochrsi", "ema", "algorithmic-trading", "finance"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "alpaca-py>=0.8.0",
    "alpaca-trade-api>=3.0.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "ta>=0.10.0",
    "plotly>=5.15.0",
    "python-dotenv>=0.19.0",
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "flask-cors>=4.0.0",
    "flask-compress>=1.13",
    "pyjwt>=2.8.0",
    "eventlet>=0.33.0",
    "pandas-ta>=0.3.14b",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "websockets>=11.0.0",
    "psutil>=5.9.0",
    "redis>=4.5.0",
    "aioredis>=2.0.0",
    "colorlog>=6.7.0",
    "python-json-logger>=2.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.5.0",
    "pyyaml>=6.0",
    "toml>=0.10.2",
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
    "schedule>=1.2.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-html>=3.1.0",
    "pytest-benchmark>=4.0.0",
    "mock>=4.0.3",
    "responses>=0.22.0",
    "factory-boy>=3.2.0",
    "faker>=15.0.0",
    "coverage[toml]>=6.0.0",
    "memory-profiler>=0.61.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "yfinance>=0.1.87",
    "freezegun>=1.2.0",
    "parameterized>=0.8.1",
    "hypothesis>=6.0.0",
    "pytest-doctestplus>=0.12.0",
    "tox>=4.0.0",
    "pre-commit>=2.20.0",
]
dev = [
    "black>=23.0.0",
    "isort>=5.10.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.0.0",
    "flake8-comprehensions>=3.0.0",
    "flake8-simplify>=0.19.0",
    "mypy>=0.991",
    "types-requests>=2.28.0",
    "types-PyYAML>=6.0.0",
    "types-python-dateutil>=2.8.0",
    "autoflake>=2.0.0",
    "pyupgrade>=3.0.0",
    "ruff>=0.1.0",
]
ml = [
    "tensorflow>=2.13.0",
    "keras>=2.13.0",
    "torch>=2.0.0",
    "joblib>=1.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "nbsphinx>=0.9.0",
]
performance = [
    "py-spy>=0.3.14",
    "memory-profiler>=0.60.0",
    "line-profiler>=4.0.0",
    "snakeviz>=2.1.1",
    "cython>=3.0.0",
    "numba>=0.57.0",
]
deployment = [
    "fastapi>=0.68.0",
    "uvicorn>=0.18.0",
    "gunicorn>=20.1.0",
    "gevent>=22.10.0",
    "docker>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/alpaca-stochrsi-ema-trading-bot"
Documentation = "https://alpaca-stochrsi-ema-trading-bot.readthedocs.io/"
Repository = "https://github.com/your-org/alpaca-stochrsi-ema-trading-bot.git"
"Bug Tracker" = "https://github.com/your-org/alpaca-stochrsi-ema-trading-bot/issues"
Changelog = "https://github.com/your-org/alpaca-stochrsi-ema-trading-bot/blob/main/CHANGELOG.md"

[project.scripts]
trading-bot = "main:main"
trading-test = "tests.test_runner:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["trading_bot*", "strategies*", "services*", "config*", "risk_management*", "utils*", "database*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | env
  | _build
  | buck-out
  | build
  | dist
  | tests/fixtures
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["trading_bot", "strategies", "services", "config", "risk_management", "utils", "database"]
skip = ["venv", "env", ".venv", ".env", "tests/fixtures"]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "alpaca_trade_api.*",
    "alpaca.*",
    "ta.*",
    "pandas_ta.*",
    "plotly.*",
    "eventlet.*",
    "redis.*",
    "aioredis.*",
    "psutil.*",
    "scipy.*",
    "sklearn.*",
    "tensorflow.*",
    "torch.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:tests/reports/htmlcov",
    "--cov-report=xml:tests/reports/coverage.xml",
    "--cov-fail-under=80",
    "--junit-xml=tests/reports/junit.xml",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for component interactions",
    "e2e: End-to-end tests simulating full trading workflows",
    "slow: Tests that take a long time to run (>5 seconds)",
    "fast: Fast tests that run in under 1 second",
    "network: Tests that require network access",
    "api: Tests that interact with external APIs",
    "alpaca: Tests specific to Alpaca API integration",
    "database: Tests that require database access",
    "risk: Tests related to risk management functionality",
    "trading: Tests related to trading operations",
    "data: Tests related to data management and processing",
    "strategy: Tests related to trading strategies",
    "stochrsi: Tests specific to StochRSI strategy",
    "ma_crossover: Tests specific to MA crossover strategy",
    "performance: Performance and benchmark tests",
    "memory: Memory usage and leak detection tests",
    "security: Security and vulnerability tests",
    "config: Configuration-related tests",
    "fixtures: Tests for data fixtures and mocks",
    "regression: Regression tests for known issues",
    "smoke: Basic smoke tests for core functionality",
    "critical: Critical path tests that must always pass",
    "monitoring: Tests for monitoring and alerting",
    "backtest: Backtesting related tests",
    "realtime: Real-time data processing tests",
    "portfolio: Portfolio management tests",
    "orders: Order management and execution tests",
    "indicators: Technical indicator calculation tests",
    "ml: Machine learning model tests",
    "cleanup: Tests that verify proper resource cleanup",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:.*pandas.*:FutureWarning",
    "ignore:.*numpy.*:FutureWarning",
    "ignore:.*sklearn.*:FutureWarning",
    "ignore:.*tensorflow.*:FutureWarning",
    "ignore:.*torch.*:FutureWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore::ResourceWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/venv/*",
    "*/env/*",
    "*/node_modules/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/static/*",
    "*/media/*",
    "*/templates/*",
    "*/worktrees/*",
    "setup.py",
    "manage.py",
    "*/settings/*",
    "*/wsgi.py",
    "*/asgi.py",
    "config_params.py",
    "run.py",
    "run_tests.py",
    "*/coordination/*",
    "*/memory/*",
    "*/docs/*",
]
branch = true
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "@abstractmethod",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "tests/reports/htmlcov"
title = "Trading Bot Test Coverage Report"

# Ruff configuration
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "env",
    "tests/fixtures",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", "env"]
skips = ["B101", "B601"]

# Safety configuration
[tool.safety]
ignore = []
output = "json"

# Performance and memory profiling
[tool.py-spy]
rate = 100
duration = 30
format = "speedscope"

[tool.memory-profiler]
precision = 4