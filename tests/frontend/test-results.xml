<testsuites id="" name="" tests="39" failures="15" skipped="0" errors="0" time="63.515792999999995">
<testsuite name="crypto-trading.spec.ts" timestamp="2025-09-05T19:55:51.017Z" hostname="chromium" tests="21" failures="10" skipped="0" time="133.504" errors="0">
<testcase name="Crypto Trading Interface › should load crypto trading page successfully" classname="crypto-trading.spec.ts" time="2.093">
</testcase>
<testcase name="Crypto Trading Interface › should display crypto trading chart with controls" classname="crypto-trading.spec.ts" time="2.186">
<failure message="crypto-trading.spec.ts:83:7 should display crypto trading chart with controls" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:83:7 › Crypto Trading Interface › should display crypto trading chart with controls 

    Error: expect.toBeVisible: Error: strict mode violation: locator('button:has-text("5Min")') resolved to 2 elements:
        1) <button data-testid="timeframe-5Min" class="inline-flex items-center justify-center gap-2 whitespace-nowrap font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 rounded-md px-2 py-1 text-xs">5Min</button> aka getByTestId('timeframe-5Min')
        2) <button data-testid="timeframe-15Min" class="inline-flex items-center justify-center gap-2 whitespace-nowrap font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 rounded-md px-2 py-1 text-xs">15Min</button> aka getByTestId('timeframe-15Min')

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('button:has-text("5Min")')


      87 |     // Check timeframe buttons
      88 |     for (const timeframe of TIMEFRAMES) {
    > 89 |       await expect(page.locator(`button:has-text("${timeframe}")`)).toBeVisible();
         |                                                                     ^
      90 |     }
      91 |     
      92 |     // Check symbol selector
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:89:69

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Trad-f245f-trading-chart-with-controls-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Trad-f245f-trading-chart-with-controls-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-Crypto-Trad-f245f-trading-chart-with-controls-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-f245f-trading-chart-with-controls-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-f245f-trading-chart-with-controls-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-f245f-trading-chart-with-controls-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Crypto Trading Interface › should change cryptocurrency symbol" classname="crypto-trading.spec.ts" time="7.401">
</testcase>
<testcase name="Crypto Trading Interface › should change chart timeframe" classname="crypto-trading.spec.ts" time="4.348">
<failure message="crypto-trading.spec.ts:118:7 should change chart timeframe" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:118:7 › Crypto Trading Interface › should change chart timeframe 

    Error: locator.click: Error: strict mode violation: locator('button:has-text("5Min")') resolved to 2 elements:
        1) <button data-testid="timeframe-5Min" class="inline-flex items-center justify-center gap-2 whitespace-nowrap font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 rounded-md px-2 py-1 text-xs">5Min</button> aka getByTestId('timeframe-5Min')
        2) <button data-testid="timeframe-15Min" class="inline-flex items-center justify-center gap-2 whitespace-nowrap font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 rounded-md px-2 py-1 text-xs">15Min</button> aka getByTestId('timeframe-15Min')

    Call log:
      - waiting for locator('button:has-text("5Min")')


      119 |     // Test clicking different timeframe buttons
      120 |     for (const timeframe of ['5Min', '15Min', '1Hour']) {
    > 121 |       await page.locator(`button:has-text("${timeframe}")`).click();
          |                                                             ^
      122 |       await page.waitForTimeout(500); // Wait for chart update
      123 |       
      124 |       // Button should appear selected/active
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:121:61

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Trad-bb1c3-ould-change-chart-timeframe-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Trad-bb1c3-ould-change-chart-timeframe-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-Crypto-Trad-bb1c3-ould-change-chart-timeframe-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-bb1c3-ould-change-chart-timeframe-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-bb1c3-ould-change-chart-timeframe-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-bb1c3-ould-change-chart-timeframe-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Crypto Trading Interface › should display trading indicators and signals" classname="crypto-trading.spec.ts" time="5.638">
<failure message="crypto-trading.spec.ts:130:7 should display trading indicators and signals" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:130:7 › Crypto Trading Interface › should display trading indicators and signals 

    Error: expect.toBeVisible: Error: strict mode violation: locator('text=Volume Spike') resolved to 3 elements:
        1) <div class="text-xs text-muted-foreground mb-1">Volume Spike</div> aka getByText('Volume Spike', { exact: true })
        2) <div class="text-xs text-muted-foreground">Fast EMA(3/8) + Volume Spikes + Price Momentum + …</div> aka getByText('Fast EMA(3/8) + Volume Spikes')
        3) <p>…</p> aka getByText('• Focus: Rapid entries on')

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('text=Volume Spike')


      134 |     
      135 |     // Check Volume indicator
    > 136 |     await expect(page.locator('text=Volume Spike')).toBeVisible();
          |                                                     ^
      137 |     
      138 |     // Check StochRSI
      139 |     await expect(page.locator('text=StochRSI')).toBeVisible();
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:136:53

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Trad-169f4-ding-indicators-and-signals-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Trad-169f4-ding-indicators-and-signals-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-Crypto-Trad-169f4-ding-indicators-and-signals-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-169f4-ding-indicators-and-signals-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-169f4-ding-indicators-and-signals-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-169f4-ding-indicators-and-signals-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Crypto Trading Interface › should display scalping engine status" classname="crypto-trading.spec.ts" time="3.449">
<failure message="crypto-trading.spec.ts:149:7 should display scalping engine status" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:149:7 › Crypto Trading Interface › should display scalping engine status 

    Error: expect.toBeVisible: Error: strict mode violation: locator('button:has-text("Start")') resolved to 2 elements:
        1) <button class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2">…</button> aka getByRole('button', { name: 'Start Crypto Bot' })
        2) <button class="inline-flex items-center justify-center gap-2 whitespace-nowrap font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-8 rounded-md px-3 text-xs">…</button> aka getByRole('button', { name: 'Start', exact: true })

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('button:has-text("Start")')


      155 |     
      156 |     // Check start button
    > 157 |     await expect(page.locator('button:has-text("Start")')).toBeVisible();
          |                                                            ^
      158 |     
      159 |     // Check performance metrics
      160 |     await expect(page.locator('text=Trades/Hour')).toBeVisible();
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:157:60

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Trad-9f72d-play-scalping-engine-status-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Trad-9f72d-play-scalping-engine-status-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-Crypto-Trad-9f72d-play-scalping-engine-status-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-9f72d-play-scalping-engine-status-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-9f72d-play-scalping-engine-status-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Trad-9f72d-play-scalping-engine-status-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Crypto Portfolio and P&amp;L › should display portfolio metrics" classname="crypto-trading.spec.ts" time="14.494">
<failure message="crypto-trading.spec.ts:178:7 should display portfolio metrics" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:178:7 › Crypto Portfolio and P&L › should display portfolio metrics 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('text=Crypto Portfolio').locator('..').locator('text=/\\$[0-9,.]+/')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  10000ms

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('text=Crypto Portfolio').locator('..').locator('text=/\\$[0-9,.]+/')


      179 |     // Check portfolio value
      180 |     const portfolioValue = page.locator('text=Crypto Portfolio').locator('..').locator('text=/\\$[0-9,.]+/');
    > 181 |     await expect(portfolioValue).toBeVisible();
          |                                  ^
      182 |     
      183 |     // Check 24h P&L
      184 |     const pnlValue = page.locator('text=24h P&L').locator('..').locator('text=/\\$[0-9,.]+/');
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:181:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Port-32e9f-d-display-portfolio-metrics-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Port-32e9f-d-display-portfolio-metrics-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-Crypto-Port-32e9f-d-display-portfolio-metrics-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-Crypto-Port-32e9f-d-display-portfolio-metrics-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Port-32e9f-d-display-portfolio-metrics-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Port-32e9f-d-display-portfolio-metrics-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Crypto Portfolio and P&amp;L › should display P&amp;L chart" classname="crypto-trading.spec.ts" time="2.007">
<failure message="crypto-trading.spec.ts:200:7 should display P&amp;L chart" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:200:7 › Crypto Portfolio and P&L › should display P&L chart ──

    Error: expect.toBeVisible: Error: strict mode violation: locator('text=/[+\\-]?\\$[0-9,.]+/') resolved to 23 elements:
        1) <div class="text-2xl font-bold">$93,550.57</div> aka getByText('$93,550.57')
        2) <div class="text-2xl font-bold text-green-500">$0.00</div> aka locator('div').filter({ hasText: /^\$0\.000 wins \/ 0 losses$/ }).locator('div')
        3) <div class="text-2xl font-bold">$63,051.58</div> aka getByText('$63,051.58')
        4) <span class="text-green-500">$537.61</span> aka getByText('$537.61')
        5) <span>$95,573.48</span> aka getByText('$95,573.48')
        6) <div class="text-lg font-bold text-purple-600">$0.00</div> aka getByText('$0.00').nth(1)
        7) <div class="inline-flex items-center rounded-md border font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80 text-lg px-3 py-1">…</div> aka getByText('+$')
        8) <div class="text-sm text-muted-foreground">304 @ $227.45</div> aka getByText('@ $227.45')
        9) <div class="text-green-500">$3,604.54</div> aka getByText('$3,604.54')
        10) <div class="text-sm text-muted-foreground">130 @ $179.83</div> aka getByText('@ $179.83')
        ...

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('text=/[+\\-]?\\$[0-9,.]+/')


      208 |     
      209 |     // Check total P&L display
    > 210 |     await expect(page.locator('text=/[+\\-]?\\$[0-9,.]+/')).toBeVisible();
          |                                                             ^
      211 |   });
      212 |
      213 |   test('should display live trade activity', async ({ page }) => {
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:210:61

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Port-6e576--L-should-display-P-L-chart-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Port-6e576--L-should-display-P-L-chart-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-Crypto-Port-6e576--L-should-display-P-L-chart-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-Crypto-Port-6e576--L-should-display-P-L-chart-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Port-6e576--L-should-display-P-L-chart-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Port-6e576--L-should-display-P-L-chart-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Crypto Portfolio and P&amp;L › should display live trade activity" classname="crypto-trading.spec.ts" time="3.499">
</testcase>
<testcase name="Crypto Portfolio and P&amp;L › should verify real data in portfolio display" classname="crypto-trading.spec.ts" time="10.052">
</testcase>
<testcase name="Crypto Market Screener › should display market screener" classname="crypto-trading.spec.ts" time="3.571">
<failure message="crypto-trading.spec.ts:240:7 should display market screener" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:240:7 › Crypto Market Screener › should display market screener 

    Error: expect.toBeVisible: Error: strict mode violation: locator('text=Gainers') resolved to 2 elements:
        1) <div class="text-sm text-muted-foreground">Gainers</div> aka getByText('Gainers', { exact: true })
        2) <span>Top 10 Gainers</span> aka getByText('Top 10 Gainers')

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('text=Gainers')


      245 |     await expect(page.locator('text=Total Assets')).toBeVisible();
      246 |     await expect(page.locator('text=Trading Enabled')).toBeVisible();
    > 247 |     await expect(page.locator('text=Gainers')).toBeVisible();
          |                                                ^
      248 |     await expect(page.locator('text=Losers')).toBeVisible();
      249 |     
      250 |     // Check search functionality
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:247:48

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Mark-b4315-uld-display-market-screener-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-Crypto-Mark-b4315-uld-display-market-screener-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-Crypto-Mark-b4315-uld-display-market-screener-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-Crypto-Mark-b4315-uld-display-market-screener-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Mark-b4315-uld-display-market-screener-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-Crypto-Mark-b4315-uld-display-market-screener-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Crypto Market Screener › should display market tabs" classname="crypto-trading.spec.ts" time="4.788">
</testcase>
<testcase name="Crypto Market Screener › should display top gainers and losers" classname="crypto-trading.spec.ts" time="2.276">
</testcase>
<testcase name="Crypto Market Screener › should handle search functionality" classname="crypto-trading.spec.ts" time="5.478">
</testcase>
<testcase name="WebSocket Connection › should establish WebSocket connection" classname="crypto-trading.spec.ts" time="37.34">
<failure message="crypto-trading.spec.ts:307:7 should establish WebSocket connection" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:307:7 › WebSocket Connection › should establish WebSocket connection 

    TimeoutError: locator.textContent: Timeout 30000ms exceeded.
    Call log:
      - waiting for locator('text=Connected, text=Disconnected').first()


      314 |     // Should eventually show connected (may take time)
      315 |     // If disconnected, that's a sign the WebSocket needs fixing
    > 316 |     const statusText = await connectionStatus.textContent();
          |                                               ^
      317 |     
      318 |     if (statusText === 'Disconnected') {
      319 |       console.warn('WebSocket showing as disconnected - may need investigation');
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:316:47

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-WebSocket-C-05021-ablish-WebSocket-connection-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-WebSocket-C-05021-ablish-WebSocket-connection-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-WebSocket-C-05021-ablish-WebSocket-connection-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-05021-ablish-WebSocket-connection-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-05021-ablish-WebSocket-connection-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-05021-ablish-WebSocket-connection-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="WebSocket Connection › should handle WebSocket data updates" classname="crypto-trading.spec.ts" time="4.828">
<failure message="crypto-trading.spec.ts:343:7 should handle WebSocket data updates" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:343:7 › WebSocket Connection › should handle WebSocket data updates 

    TypeError: page.evaluateOnNewDocument is not a function

      345 |     
      346 |     // Monitor WebSocket messages
    > 347 |     await page.evaluateOnNewDocument(() => {
          |                ^
      348 |       const originalWebSocket = window.WebSocket;
      349 |       window.WebSocket = class extends originalWebSocket {
      350 |         constructor(url: string, protocols?: string | string[]) {
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:347:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-WebSocket-C-75d94-ndle-WebSocket-data-updates-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-WebSocket-C-75d94-ndle-WebSocket-data-updates-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-WebSocket-C-75d94-ndle-WebSocket-data-updates-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-75d94-ndle-WebSocket-data-updates-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-75d94-ndle-WebSocket-data-updates-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-75d94-ndle-WebSocket-data-updates-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="WebSocket Connection › should recover from WebSocket disconnection" classname="crypto-trading.spec.ts" time="2.945">
<failure message="crypto-trading.spec.ts:394:7 should recover from WebSocket disconnection" type="FAILURE">
<![CDATA[  [chromium] › crypto-trading.spec.ts:394:7 › WebSocket Connection › should recover from WebSocket disconnection 

    Error: expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      398 |     // Check that connection status is displayed
      399 |     const statusElements = await page.locator('text=Connected, text=Disconnected').count();
    > 400 |     expect(statusElements).toBeGreaterThan(0);
          |                            ^
      401 |     
      402 |     // Monitor console for reconnection attempts
      403 |     const consoleLogs: string[] = [];
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/crypto-trading.spec.ts:400:28

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/crypto-trading-WebSocket-C-0e072-rom-WebSocket-disconnection-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/crypto-trading-WebSocket-C-0e072-rom-WebSocket-disconnection-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/crypto-trading-WebSocket-C-0e072-rom-WebSocket-disconnection-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-0e072-rom-WebSocket-disconnection-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-0e072-rom-WebSocket-disconnection-chromium/video.webm]]

[[ATTACHMENT|test-results/crypto-trading-WebSocket-C-0e072-rom-WebSocket-disconnection-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Navigation and UI Elements › should navigate between crypto and stocks" classname="crypto-trading.spec.ts" time="3.628">
</testcase>
<testcase name="Navigation and UI Elements › should handle control interactions" classname="crypto-trading.spec.ts" time="6.286">
</testcase>
<testcase name="Navigation and UI Elements › should display trading session info" classname="crypto-trading.spec.ts" time="3.559">
</testcase>
<testcase name="Navigation and UI Elements › should display responsive design elements" classname="crypto-trading.spec.ts" time="3.638">
</testcase>
</testsuite>
<testsuite name="order-execution.spec.ts" timestamp="2025-09-05T19:55:51.017Z" hostname="chromium" tests="18" failures="5" skipped="0" time="139.379" errors="0">
<testcase name="Order Placement Interface › should display order placement controls" classname="order-execution.spec.ts" time="3.604">
</testcase>
<testcase name="Order Placement Interface › should validate order parameters" classname="order-execution.spec.ts" time="8.289">
</testcase>
<testcase name="Order Placement Interface › should handle crypto symbol selection for orders" classname="order-execution.spec.ts" time="5.914">
<failure message="order-execution.spec.ts:126:7 should handle crypto symbol selection for orders" type="FAILURE">
<![CDATA[  [chromium] › order-execution.spec.ts:126:7 › Order Placement Interface › should handle crypto symbol selection for orders 

    Error: expect.toBeVisible: Error: strict mode violation: locator('text=BTCUSD') resolved to 2 elements:
        1) <h3 class="font-semibold leading-none tracking-tight">…</h3> aka getByRole('heading', { name: 'Crypto Chart - BTCUSD' })
        2) <option selected value="BTCUSD">BTCUSD</option> aka getByTestId('chart-symbol-select')

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('text=BTCUSD')


      133 |       await page.waitForTimeout(500);
      134 |       
    > 135 |       await expect(page.locator('text=BTCUSD')).toBeVisible();
          |                                                 ^
      136 |       
      137 |       // Try another symbol
      138 |       await symbolSelector.selectOption('ETHUSD');
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/order-execution.spec.ts:135:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/order-execution-Order-Plac-1d7d9-symbol-selection-for-orders-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/order-execution-Order-Plac-1d7d9-symbol-selection-for-orders-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/order-execution-Order-Plac-1d7d9-symbol-selection-for-orders-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/order-execution-Order-Plac-1d7d9-symbol-selection-for-orders-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/order-execution-Order-Plac-1d7d9-symbol-selection-for-orders-chromium/video.webm]]

[[ATTACHMENT|test-results/order-execution-Order-Plac-1d7d9-symbol-selection-for-orders-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Order Placement Interface › should display current market prices for order reference" classname="order-execution.spec.ts" time="8.077">
</testcase>
<testcase name="Order Execution Tracking › should display active orders" classname="order-execution.spec.ts" time="5.971">
</testcase>
<testcase name="Order Execution Tracking › should show order execution status" classname="order-execution.spec.ts" time="14.749">
<failure message="order-execution.spec.ts:177:7 should show order execution status" type="FAILURE">
<![CDATA[  [chromium] › order-execution.spec.ts:177:7 › Order Execution Tracking › should show order execution status 

    Error: expect(locator).toHaveCount(expected) failed

    Locator:  locator('text=PAUSED, text=ACTIVE, text=OFF')
    Expected: 1
    Received: 0
    Timeout:  10000ms

    Call log:
      - Expect "toHaveCount" with timeout 10000ms
      - waiting for locator('text=PAUSED, text=ACTIVE, text=OFF')
        14 × locator resolved to 0 elements
           - unexpected value "0"


      177 |   test('should show order execution status', async ({ page }) => {
      178 |     // Check trading status indicators
    > 179 |     await expect(page.locator('text=PAUSED, text=ACTIVE, text=OFF')).toHaveCount(1);
          |                                                                      ^
      180 |     
      181 |     // Should show execution metrics
      182 |     await expect(page.locator('text=Trades/Hour')).toBeVisible();
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/order-execution.spec.ts:179:70

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/order-execution-Order-Exec-3c28c-show-order-execution-status-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/order-execution-Order-Exec-3c28c-show-order-execution-status-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/order-execution-Order-Exec-3c28c-show-order-execution-status-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/order-execution-Order-Exec-3c28c-show-order-execution-status-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/order-execution-Order-Exec-3c28c-show-order-execution-status-chromium/video.webm]]

[[ATTACHMENT|test-results/order-execution-Order-Exec-3c28c-show-order-execution-status-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Order Execution Tracking › should track order fill status" classname="order-execution.spec.ts" time="17.698">
<failure message="order-execution.spec.ts:186:7 should track order fill status" type="FAILURE">
<![CDATA[  [chromium] › order-execution.spec.ts:186:7 › Order Execution Tracking › should track order fill status 

    Error: expect(locator).toHaveCount(expected) failed

    Locator:  locator('text=No trades executed yet. Waiting for signals..., text=Recent executed trades')
    Expected: 1
    Received: 0
    Timeout:  10000ms

    Call log:
      - Expect "toHaveCount" with timeout 10000ms
      - waiting for locator('text=No trades executed yet. Waiting for signals..., text=Recent executed trades')
        13 × locator resolved to 0 elements
           - unexpected value "0"


      193 |     // Initially shows waiting message
      194 |     const tradeStatus = page.locator('text=No trades executed yet. Waiting for signals..., text=Recent executed trades');
    > 195 |     await expect(tradeStatus).toHaveCount(1);
          |                               ^
      196 |   });
      197 |
      198 |   test('should validate real data in order tracking', async ({ page }) => {
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/order-execution.spec.ts:195:31

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/order-execution-Order-Exec-87519-uld-track-order-fill-status-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/order-execution-Order-Exec-87519-uld-track-order-fill-status-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/order-execution-Order-Exec-87519-uld-track-order-fill-status-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/order-execution-Order-Exec-87519-uld-track-order-fill-status-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/order-execution-Order-Exec-87519-uld-track-order-fill-status-chromium/video.webm]]

[[ATTACHMENT|test-results/order-execution-Order-Exec-87519-uld-track-order-fill-status-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Order Execution Tracking › should validate real data in order tracking" classname="order-execution.spec.ts" time="7.002">
</testcase>
<testcase name="Order Error Handling › should handle insufficient funds scenarios" classname="order-execution.spec.ts" time="8.343">
</testcase>
<testcase name="Order Error Handling › should handle API failures gracefully" classname="order-execution.spec.ts" time="6.746">
</testcase>
<testcase name="Order Error Handling › should validate order parameters" classname="order-execution.spec.ts" time="3.272">
</testcase>
<testcase name="Position Management › should display current positions" classname="order-execution.spec.ts" time="7.624">
</testcase>
<testcase name="Position Management › should calculate position P&amp;L correctly" classname="order-execution.spec.ts" time="8.849">
<failure message="order-execution.spec.ts:368:7 should calculate position P&amp;L correctly" type="FAILURE">
<![CDATA[  [chromium] › order-execution.spec.ts:368:7 › Position Management › should calculate position P&L correctly 

    Error: expect(received).toMatch(expected)

    Expected pattern: /\$[0-9,.]+|\+?\-?[0-9,.]+%/
    Received string:  "24h P&L"

      401 |     // Should show some P&L value
      402 |     const pnlText = await pnlSection.textContent();
    > 403 |     expect(pnlText).toMatch(/\$[0-9,.]+|\+?\-?[0-9,.]+%/);
          |                     ^
      404 |   });
      405 |
      406 |   test('should handle position updates in real-time', async ({ page }) => {
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/order-execution.spec.ts:403:21

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/order-execution-Position-M-cff80-late-position-P-L-correctly-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/order-execution-Position-M-cff80-late-position-P-L-correctly-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/order-execution-Position-M-cff80-late-position-P-L-correctly-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/order-execution-Position-M-cff80-late-position-P-L-correctly-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/order-execution-Position-M-cff80-late-position-P-L-correctly-chromium/video.webm]]

[[ATTACHMENT|test-results/order-execution-Position-M-cff80-late-position-P-L-correctly-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Position Management › should handle position updates in real-time" classname="order-execution.spec.ts" time="11.374">
</testcase>
<testcase name="Risk Management Integration › should display risk management controls" classname="order-execution.spec.ts" time="4.041">
</testcase>
<testcase name="Risk Management Integration › should validate position sizing" classname="order-execution.spec.ts" time="5.656">
<failure message="order-execution.spec.ts:466:7 should validate position sizing" type="FAILURE">
<![CDATA[  [chromium] › order-execution.spec.ts:466:7 › Risk Management Integration › should validate position sizing 

    Error: expect(received).toMatch(expected)

    Expected pattern: /position.*size|max.*position/i
    Received string:  "Crypto Scalping:Active"

      474 |     // Should show position size limits
      475 |     const strategyText = await strategyInfo.textContent();
    > 476 |     expect(strategyText).toMatch(/position.*size|max.*position/i);
          |                          ^
      477 |   });
      478 |
      479 |   test('should show stop loss and take profit levels', async ({ page }) => {
        at /Users/stuartgano/Desktop/Penny Personal Assistant/Alpaca-StochRSI-EMA-Trading-Bot/tests/frontend/tests/order-execution.spec.ts:476:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/order-execution-Risk-Manag-301c8-ld-validate-position-sizing-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/order-execution-Risk-Manag-301c8-ld-validate-position-sizing-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/order-execution-Risk-Manag-301c8-ld-validate-position-sizing-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|test-results/order-execution-Risk-Manag-301c8-ld-validate-position-sizing-chromium/test-failed-1.png]]

[[ATTACHMENT|test-results/order-execution-Risk-Manag-301c8-ld-validate-position-sizing-chromium/video.webm]]

[[ATTACHMENT|test-results/order-execution-Risk-Manag-301c8-ld-validate-position-sizing-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Risk Management Integration › should show stop loss and take profit levels" classname="order-execution.spec.ts" time="4.307">
</testcase>
<testcase name="Risk Management Integration › should enforce maximum trade size limits" classname="order-execution.spec.ts" time="7.863">
</testcase>
</testsuite>
</testsuites>